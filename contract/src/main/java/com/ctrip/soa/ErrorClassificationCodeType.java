// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: BaijiCommonTypes.proto

package com.ctrip.soa;

/**
 * Protobuf enum {@code com.ctrip.soa.ErrorClassificationCodeType}
 */
public enum ErrorClassificationCodeType
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <code>ServiceError = 0;</code>
   */
  ServiceError(0),
  /**
   * <code>ValidationError = 1;</code>
   */
  ValidationError(1),
  /**
   * <code>FrameworkError = 2;</code>
   */
  FrameworkError(2),
  /**
   * <code>SLAError = 3;</code>
   */
  SLAError(3),
  /**
   * <code>SecurityError = 4;</code>
   */
  SecurityError(4),
  UNRECOGNIZED(-1),
  ;

  /**
   * <code>ServiceError = 0;</code>
   */
  public static final int ServiceError_VALUE = 0;
  /**
   * <code>ValidationError = 1;</code>
   */
  public static final int ValidationError_VALUE = 1;
  /**
   * <code>FrameworkError = 2;</code>
   */
  public static final int FrameworkError_VALUE = 2;
  /**
   * <code>SLAError = 3;</code>
   */
  public static final int SLAError_VALUE = 3;
  /**
   * <code>SecurityError = 4;</code>
   */
  public static final int SecurityError_VALUE = 4;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static ErrorClassificationCodeType valueOf(int value) {
    return forNumber(value);
  }

  public static ErrorClassificationCodeType forNumber(int value) {
    switch (value) {
      case 0: return ServiceError;
      case 1: return ValidationError;
      case 2: return FrameworkError;
      case 3: return SLAError;
      case 4: return SecurityError;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<ErrorClassificationCodeType>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      ErrorClassificationCodeType> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<ErrorClassificationCodeType>() {
          public ErrorClassificationCodeType findValueByNumber(int number) {
            return ErrorClassificationCodeType.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return com.ctrip.soa.BaijiCommonTypes.getDescriptor().getEnumTypes().get(1);
  }

  private static final ErrorClassificationCodeType[] VALUES = values();

  public static ErrorClassificationCodeType valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private ErrorClassificationCodeType(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:com.ctrip.soa.ErrorClassificationCodeType)
}

