// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: agg.flighttypes.v3.proto

package com.ctrip.flight.intl.agg.flighttypes.v3;

/**
 * Protobuf type {@code com.ctrip.flight.intl.agg.flighttypes.v3.CreditCardPaymentInfoType}
 */
public  final class CreditCardPaymentInfoType extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:com.ctrip.flight.intl.agg.flighttypes.v3.CreditCardPaymentInfoType)
    CreditCardPaymentInfoTypeOrBuilder {
private static final long serialVersionUID = 0L;
  // Use CreditCardPaymentInfoType.newBuilder() to construct.
  private CreditCardPaymentInfoType(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private CreditCardPaymentInfoType() {
    refNum_ = 0;
    creditCardType_ = "";
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private CreditCardPaymentInfoType(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 8: {

            refNum_ = input.readInt32();
            break;
          }
          case 18: {
            java.lang.String s = input.readStringRequireUtf8();

            creditCardType_ = s;
            break;
          }
          case 26: {
            com.ctrip.flight.intl.agg.flighttypes.v3.ObFeeType.Builder subBuilder = null;
            if (adultFee_ != null) {
              subBuilder = adultFee_.toBuilder();
            }
            adultFee_ = input.readMessage(com.ctrip.flight.intl.agg.flighttypes.v3.ObFeeType.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(adultFee_);
              adultFee_ = subBuilder.buildPartial();
            }

            break;
          }
          case 34: {
            com.ctrip.flight.intl.agg.flighttypes.v3.ObFeeType.Builder subBuilder = null;
            if (childFee_ != null) {
              subBuilder = childFee_.toBuilder();
            }
            childFee_ = input.readMessage(com.ctrip.flight.intl.agg.flighttypes.v3.ObFeeType.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(childFee_);
              childFee_ = subBuilder.buildPartial();
            }

            break;
          }
          case 42: {
            com.ctrip.flight.intl.agg.flighttypes.v3.ObFeeType.Builder subBuilder = null;
            if (infantFee_ != null) {
              subBuilder = infantFee_.toBuilder();
            }
            infantFee_ = input.readMessage(com.ctrip.flight.intl.agg.flighttypes.v3.ObFeeType.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(infantFee_);
              infantFee_ = subBuilder.buildPartial();
            }

            break;
          }
          default: {
            if (!parseUnknownFieldProto3(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.ctrip.flight.intl.agg.flighttypes.v3.AggFlighttypesV3.internal_static_com_ctrip_flight_intl_agg_flighttypes_v3_CreditCardPaymentInfoType_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.ctrip.flight.intl.agg.flighttypes.v3.AggFlighttypesV3.internal_static_com_ctrip_flight_intl_agg_flighttypes_v3_CreditCardPaymentInfoType_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.ctrip.flight.intl.agg.flighttypes.v3.CreditCardPaymentInfoType.class, com.ctrip.flight.intl.agg.flighttypes.v3.CreditCardPaymentInfoType.Builder.class);
  }

  public static final int REFNUM_FIELD_NUMBER = 1;
  private int refNum_;
  /**
   * <pre>
   * 索引号
   * </pre>
   *
   * <code>int32 RefNum = 1;</code>
   */
  public int getRefNum() {
    return refNum_;
  }

  public static final int CREDITCARDTYPE_FIELD_NUMBER = 2;
  private volatile java.lang.Object creditCardType_;
  /**
   * <pre>
   * 可用的信用卡组织
   * </pre>
   *
   * <code>string CreditCardType = 2;</code>
   */
  public java.lang.String getCreditCardType() {
    java.lang.Object ref = creditCardType_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      creditCardType_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * 可用的信用卡组织
   * </pre>
   *
   * <code>string CreditCardType = 2;</code>
   */
  public com.google.protobuf.ByteString
      getCreditCardTypeBytes() {
    java.lang.Object ref = creditCardType_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      creditCardType_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int ADULTFEE_FIELD_NUMBER = 3;
  private com.ctrip.flight.intl.agg.flighttypes.v3.ObFeeType adultFee_;
  /**
   * <pre>
   * 成人卡费
   * </pre>
   *
   * <code>.com.ctrip.flight.intl.agg.flighttypes.v3.ObFeeType AdultFee = 3;</code>
   */
  public boolean hasAdultFee() {
    return adultFee_ != null;
  }
  /**
   * <pre>
   * 成人卡费
   * </pre>
   *
   * <code>.com.ctrip.flight.intl.agg.flighttypes.v3.ObFeeType AdultFee = 3;</code>
   */
  public com.ctrip.flight.intl.agg.flighttypes.v3.ObFeeType getAdultFee() {
    return adultFee_ == null ? com.ctrip.flight.intl.agg.flighttypes.v3.ObFeeType.getDefaultInstance() : adultFee_;
  }
  /**
   * <pre>
   * 成人卡费
   * </pre>
   *
   * <code>.com.ctrip.flight.intl.agg.flighttypes.v3.ObFeeType AdultFee = 3;</code>
   */
  public com.ctrip.flight.intl.agg.flighttypes.v3.ObFeeTypeOrBuilder getAdultFeeOrBuilder() {
    return getAdultFee();
  }

  public static final int CHILDFEE_FIELD_NUMBER = 4;
  private com.ctrip.flight.intl.agg.flighttypes.v3.ObFeeType childFee_;
  /**
   * <pre>
   * 儿童卡费
   * </pre>
   *
   * <code>.com.ctrip.flight.intl.agg.flighttypes.v3.ObFeeType ChildFee = 4;</code>
   */
  public boolean hasChildFee() {
    return childFee_ != null;
  }
  /**
   * <pre>
   * 儿童卡费
   * </pre>
   *
   * <code>.com.ctrip.flight.intl.agg.flighttypes.v3.ObFeeType ChildFee = 4;</code>
   */
  public com.ctrip.flight.intl.agg.flighttypes.v3.ObFeeType getChildFee() {
    return childFee_ == null ? com.ctrip.flight.intl.agg.flighttypes.v3.ObFeeType.getDefaultInstance() : childFee_;
  }
  /**
   * <pre>
   * 儿童卡费
   * </pre>
   *
   * <code>.com.ctrip.flight.intl.agg.flighttypes.v3.ObFeeType ChildFee = 4;</code>
   */
  public com.ctrip.flight.intl.agg.flighttypes.v3.ObFeeTypeOrBuilder getChildFeeOrBuilder() {
    return getChildFee();
  }

  public static final int INFANTFEE_FIELD_NUMBER = 5;
  private com.ctrip.flight.intl.agg.flighttypes.v3.ObFeeType infantFee_;
  /**
   * <pre>
   * 婴儿卡费
   * </pre>
   *
   * <code>.com.ctrip.flight.intl.agg.flighttypes.v3.ObFeeType InfantFee = 5;</code>
   */
  public boolean hasInfantFee() {
    return infantFee_ != null;
  }
  /**
   * <pre>
   * 婴儿卡费
   * </pre>
   *
   * <code>.com.ctrip.flight.intl.agg.flighttypes.v3.ObFeeType InfantFee = 5;</code>
   */
  public com.ctrip.flight.intl.agg.flighttypes.v3.ObFeeType getInfantFee() {
    return infantFee_ == null ? com.ctrip.flight.intl.agg.flighttypes.v3.ObFeeType.getDefaultInstance() : infantFee_;
  }
  /**
   * <pre>
   * 婴儿卡费
   * </pre>
   *
   * <code>.com.ctrip.flight.intl.agg.flighttypes.v3.ObFeeType InfantFee = 5;</code>
   */
  public com.ctrip.flight.intl.agg.flighttypes.v3.ObFeeTypeOrBuilder getInfantFeeOrBuilder() {
    return getInfantFee();
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (refNum_ != 0) {
      output.writeInt32(1, refNum_);
    }
    if (!getCreditCardTypeBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, creditCardType_);
    }
    if (adultFee_ != null) {
      output.writeMessage(3, getAdultFee());
    }
    if (childFee_ != null) {
      output.writeMessage(4, getChildFee());
    }
    if (infantFee_ != null) {
      output.writeMessage(5, getInfantFee());
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (refNum_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(1, refNum_);
    }
    if (!getCreditCardTypeBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, creditCardType_);
    }
    if (adultFee_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, getAdultFee());
    }
    if (childFee_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, getChildFee());
    }
    if (infantFee_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(5, getInfantFee());
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.ctrip.flight.intl.agg.flighttypes.v3.CreditCardPaymentInfoType)) {
      return super.equals(obj);
    }
    com.ctrip.flight.intl.agg.flighttypes.v3.CreditCardPaymentInfoType other = (com.ctrip.flight.intl.agg.flighttypes.v3.CreditCardPaymentInfoType) obj;

    boolean result = true;
    result = result && (getRefNum()
        == other.getRefNum());
    result = result && getCreditCardType()
        .equals(other.getCreditCardType());
    result = result && (hasAdultFee() == other.hasAdultFee());
    if (hasAdultFee()) {
      result = result && getAdultFee()
          .equals(other.getAdultFee());
    }
    result = result && (hasChildFee() == other.hasChildFee());
    if (hasChildFee()) {
      result = result && getChildFee()
          .equals(other.getChildFee());
    }
    result = result && (hasInfantFee() == other.hasInfantFee());
    if (hasInfantFee()) {
      result = result && getInfantFee()
          .equals(other.getInfantFee());
    }
    result = result && unknownFields.equals(other.unknownFields);
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + REFNUM_FIELD_NUMBER;
    hash = (53 * hash) + getRefNum();
    hash = (37 * hash) + CREDITCARDTYPE_FIELD_NUMBER;
    hash = (53 * hash) + getCreditCardType().hashCode();
    if (hasAdultFee()) {
      hash = (37 * hash) + ADULTFEE_FIELD_NUMBER;
      hash = (53 * hash) + getAdultFee().hashCode();
    }
    if (hasChildFee()) {
      hash = (37 * hash) + CHILDFEE_FIELD_NUMBER;
      hash = (53 * hash) + getChildFee().hashCode();
    }
    if (hasInfantFee()) {
      hash = (37 * hash) + INFANTFEE_FIELD_NUMBER;
      hash = (53 * hash) + getInfantFee().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.ctrip.flight.intl.agg.flighttypes.v3.CreditCardPaymentInfoType parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.ctrip.flight.intl.agg.flighttypes.v3.CreditCardPaymentInfoType parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.ctrip.flight.intl.agg.flighttypes.v3.CreditCardPaymentInfoType parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.ctrip.flight.intl.agg.flighttypes.v3.CreditCardPaymentInfoType parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.ctrip.flight.intl.agg.flighttypes.v3.CreditCardPaymentInfoType parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.ctrip.flight.intl.agg.flighttypes.v3.CreditCardPaymentInfoType parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.ctrip.flight.intl.agg.flighttypes.v3.CreditCardPaymentInfoType parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.ctrip.flight.intl.agg.flighttypes.v3.CreditCardPaymentInfoType parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.ctrip.flight.intl.agg.flighttypes.v3.CreditCardPaymentInfoType parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.ctrip.flight.intl.agg.flighttypes.v3.CreditCardPaymentInfoType parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.ctrip.flight.intl.agg.flighttypes.v3.CreditCardPaymentInfoType parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.ctrip.flight.intl.agg.flighttypes.v3.CreditCardPaymentInfoType parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.ctrip.flight.intl.agg.flighttypes.v3.CreditCardPaymentInfoType prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code com.ctrip.flight.intl.agg.flighttypes.v3.CreditCardPaymentInfoType}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:com.ctrip.flight.intl.agg.flighttypes.v3.CreditCardPaymentInfoType)
      com.ctrip.flight.intl.agg.flighttypes.v3.CreditCardPaymentInfoTypeOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.ctrip.flight.intl.agg.flighttypes.v3.AggFlighttypesV3.internal_static_com_ctrip_flight_intl_agg_flighttypes_v3_CreditCardPaymentInfoType_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.ctrip.flight.intl.agg.flighttypes.v3.AggFlighttypesV3.internal_static_com_ctrip_flight_intl_agg_flighttypes_v3_CreditCardPaymentInfoType_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.ctrip.flight.intl.agg.flighttypes.v3.CreditCardPaymentInfoType.class, com.ctrip.flight.intl.agg.flighttypes.v3.CreditCardPaymentInfoType.Builder.class);
    }

    // Construct using com.ctrip.flight.intl.agg.flighttypes.v3.CreditCardPaymentInfoType.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      refNum_ = 0;

      creditCardType_ = "";

      if (adultFeeBuilder_ == null) {
        adultFee_ = null;
      } else {
        adultFee_ = null;
        adultFeeBuilder_ = null;
      }
      if (childFeeBuilder_ == null) {
        childFee_ = null;
      } else {
        childFee_ = null;
        childFeeBuilder_ = null;
      }
      if (infantFeeBuilder_ == null) {
        infantFee_ = null;
      } else {
        infantFee_ = null;
        infantFeeBuilder_ = null;
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.ctrip.flight.intl.agg.flighttypes.v3.AggFlighttypesV3.internal_static_com_ctrip_flight_intl_agg_flighttypes_v3_CreditCardPaymentInfoType_descriptor;
    }

    @java.lang.Override
    public com.ctrip.flight.intl.agg.flighttypes.v3.CreditCardPaymentInfoType getDefaultInstanceForType() {
      return com.ctrip.flight.intl.agg.flighttypes.v3.CreditCardPaymentInfoType.getDefaultInstance();
    }

    @java.lang.Override
    public com.ctrip.flight.intl.agg.flighttypes.v3.CreditCardPaymentInfoType build() {
      com.ctrip.flight.intl.agg.flighttypes.v3.CreditCardPaymentInfoType result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.ctrip.flight.intl.agg.flighttypes.v3.CreditCardPaymentInfoType buildPartial() {
      com.ctrip.flight.intl.agg.flighttypes.v3.CreditCardPaymentInfoType result = new com.ctrip.flight.intl.agg.flighttypes.v3.CreditCardPaymentInfoType(this);
      result.refNum_ = refNum_;
      result.creditCardType_ = creditCardType_;
      if (adultFeeBuilder_ == null) {
        result.adultFee_ = adultFee_;
      } else {
        result.adultFee_ = adultFeeBuilder_.build();
      }
      if (childFeeBuilder_ == null) {
        result.childFee_ = childFee_;
      } else {
        result.childFee_ = childFeeBuilder_.build();
      }
      if (infantFeeBuilder_ == null) {
        result.infantFee_ = infantFee_;
      } else {
        result.infantFee_ = infantFeeBuilder_.build();
      }
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return (Builder) super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.ctrip.flight.intl.agg.flighttypes.v3.CreditCardPaymentInfoType) {
        return mergeFrom((com.ctrip.flight.intl.agg.flighttypes.v3.CreditCardPaymentInfoType)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.ctrip.flight.intl.agg.flighttypes.v3.CreditCardPaymentInfoType other) {
      if (other == com.ctrip.flight.intl.agg.flighttypes.v3.CreditCardPaymentInfoType.getDefaultInstance()) return this;
      if (other.getRefNum() != 0) {
        setRefNum(other.getRefNum());
      }
      if (!other.getCreditCardType().isEmpty()) {
        creditCardType_ = other.creditCardType_;
        onChanged();
      }
      if (other.hasAdultFee()) {
        mergeAdultFee(other.getAdultFee());
      }
      if (other.hasChildFee()) {
        mergeChildFee(other.getChildFee());
      }
      if (other.hasInfantFee()) {
        mergeInfantFee(other.getInfantFee());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.ctrip.flight.intl.agg.flighttypes.v3.CreditCardPaymentInfoType parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.ctrip.flight.intl.agg.flighttypes.v3.CreditCardPaymentInfoType) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private int refNum_ ;
    /**
     * <pre>
     * 索引号
     * </pre>
     *
     * <code>int32 RefNum = 1;</code>
     */
    public int getRefNum() {
      return refNum_;
    }
    /**
     * <pre>
     * 索引号
     * </pre>
     *
     * <code>int32 RefNum = 1;</code>
     */
    public Builder setRefNum(int value) {
      
      refNum_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 索引号
     * </pre>
     *
     * <code>int32 RefNum = 1;</code>
     */
    public Builder clearRefNum() {
      
      refNum_ = 0;
      onChanged();
      return this;
    }

    private java.lang.Object creditCardType_ = "";
    /**
     * <pre>
     * 可用的信用卡组织
     * </pre>
     *
     * <code>string CreditCardType = 2;</code>
     */
    public java.lang.String getCreditCardType() {
      java.lang.Object ref = creditCardType_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        creditCardType_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * 可用的信用卡组织
     * </pre>
     *
     * <code>string CreditCardType = 2;</code>
     */
    public com.google.protobuf.ByteString
        getCreditCardTypeBytes() {
      java.lang.Object ref = creditCardType_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        creditCardType_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * 可用的信用卡组织
     * </pre>
     *
     * <code>string CreditCardType = 2;</code>
     */
    public Builder setCreditCardType(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      creditCardType_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 可用的信用卡组织
     * </pre>
     *
     * <code>string CreditCardType = 2;</code>
     */
    public Builder clearCreditCardType() {
      
      creditCardType_ = getDefaultInstance().getCreditCardType();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 可用的信用卡组织
     * </pre>
     *
     * <code>string CreditCardType = 2;</code>
     */
    public Builder setCreditCardTypeBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      creditCardType_ = value;
      onChanged();
      return this;
    }

    private com.ctrip.flight.intl.agg.flighttypes.v3.ObFeeType adultFee_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.ctrip.flight.intl.agg.flighttypes.v3.ObFeeType, com.ctrip.flight.intl.agg.flighttypes.v3.ObFeeType.Builder, com.ctrip.flight.intl.agg.flighttypes.v3.ObFeeTypeOrBuilder> adultFeeBuilder_;
    /**
     * <pre>
     * 成人卡费
     * </pre>
     *
     * <code>.com.ctrip.flight.intl.agg.flighttypes.v3.ObFeeType AdultFee = 3;</code>
     */
    public boolean hasAdultFee() {
      return adultFeeBuilder_ != null || adultFee_ != null;
    }
    /**
     * <pre>
     * 成人卡费
     * </pre>
     *
     * <code>.com.ctrip.flight.intl.agg.flighttypes.v3.ObFeeType AdultFee = 3;</code>
     */
    public com.ctrip.flight.intl.agg.flighttypes.v3.ObFeeType getAdultFee() {
      if (adultFeeBuilder_ == null) {
        return adultFee_ == null ? com.ctrip.flight.intl.agg.flighttypes.v3.ObFeeType.getDefaultInstance() : adultFee_;
      } else {
        return adultFeeBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * 成人卡费
     * </pre>
     *
     * <code>.com.ctrip.flight.intl.agg.flighttypes.v3.ObFeeType AdultFee = 3;</code>
     */
    public Builder setAdultFee(com.ctrip.flight.intl.agg.flighttypes.v3.ObFeeType value) {
      if (adultFeeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        adultFee_ = value;
        onChanged();
      } else {
        adultFeeBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * 成人卡费
     * </pre>
     *
     * <code>.com.ctrip.flight.intl.agg.flighttypes.v3.ObFeeType AdultFee = 3;</code>
     */
    public Builder setAdultFee(
        com.ctrip.flight.intl.agg.flighttypes.v3.ObFeeType.Builder builderForValue) {
      if (adultFeeBuilder_ == null) {
        adultFee_ = builderForValue.build();
        onChanged();
      } else {
        adultFeeBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * 成人卡费
     * </pre>
     *
     * <code>.com.ctrip.flight.intl.agg.flighttypes.v3.ObFeeType AdultFee = 3;</code>
     */
    public Builder mergeAdultFee(com.ctrip.flight.intl.agg.flighttypes.v3.ObFeeType value) {
      if (adultFeeBuilder_ == null) {
        if (adultFee_ != null) {
          adultFee_ =
            com.ctrip.flight.intl.agg.flighttypes.v3.ObFeeType.newBuilder(adultFee_).mergeFrom(value).buildPartial();
        } else {
          adultFee_ = value;
        }
        onChanged();
      } else {
        adultFeeBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * 成人卡费
     * </pre>
     *
     * <code>.com.ctrip.flight.intl.agg.flighttypes.v3.ObFeeType AdultFee = 3;</code>
     */
    public Builder clearAdultFee() {
      if (adultFeeBuilder_ == null) {
        adultFee_ = null;
        onChanged();
      } else {
        adultFee_ = null;
        adultFeeBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * 成人卡费
     * </pre>
     *
     * <code>.com.ctrip.flight.intl.agg.flighttypes.v3.ObFeeType AdultFee = 3;</code>
     */
    public com.ctrip.flight.intl.agg.flighttypes.v3.ObFeeType.Builder getAdultFeeBuilder() {
      
      onChanged();
      return getAdultFeeFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * 成人卡费
     * </pre>
     *
     * <code>.com.ctrip.flight.intl.agg.flighttypes.v3.ObFeeType AdultFee = 3;</code>
     */
    public com.ctrip.flight.intl.agg.flighttypes.v3.ObFeeTypeOrBuilder getAdultFeeOrBuilder() {
      if (adultFeeBuilder_ != null) {
        return adultFeeBuilder_.getMessageOrBuilder();
      } else {
        return adultFee_ == null ?
            com.ctrip.flight.intl.agg.flighttypes.v3.ObFeeType.getDefaultInstance() : adultFee_;
      }
    }
    /**
     * <pre>
     * 成人卡费
     * </pre>
     *
     * <code>.com.ctrip.flight.intl.agg.flighttypes.v3.ObFeeType AdultFee = 3;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.ctrip.flight.intl.agg.flighttypes.v3.ObFeeType, com.ctrip.flight.intl.agg.flighttypes.v3.ObFeeType.Builder, com.ctrip.flight.intl.agg.flighttypes.v3.ObFeeTypeOrBuilder> 
        getAdultFeeFieldBuilder() {
      if (adultFeeBuilder_ == null) {
        adultFeeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.ctrip.flight.intl.agg.flighttypes.v3.ObFeeType, com.ctrip.flight.intl.agg.flighttypes.v3.ObFeeType.Builder, com.ctrip.flight.intl.agg.flighttypes.v3.ObFeeTypeOrBuilder>(
                getAdultFee(),
                getParentForChildren(),
                isClean());
        adultFee_ = null;
      }
      return adultFeeBuilder_;
    }

    private com.ctrip.flight.intl.agg.flighttypes.v3.ObFeeType childFee_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.ctrip.flight.intl.agg.flighttypes.v3.ObFeeType, com.ctrip.flight.intl.agg.flighttypes.v3.ObFeeType.Builder, com.ctrip.flight.intl.agg.flighttypes.v3.ObFeeTypeOrBuilder> childFeeBuilder_;
    /**
     * <pre>
     * 儿童卡费
     * </pre>
     *
     * <code>.com.ctrip.flight.intl.agg.flighttypes.v3.ObFeeType ChildFee = 4;</code>
     */
    public boolean hasChildFee() {
      return childFeeBuilder_ != null || childFee_ != null;
    }
    /**
     * <pre>
     * 儿童卡费
     * </pre>
     *
     * <code>.com.ctrip.flight.intl.agg.flighttypes.v3.ObFeeType ChildFee = 4;</code>
     */
    public com.ctrip.flight.intl.agg.flighttypes.v3.ObFeeType getChildFee() {
      if (childFeeBuilder_ == null) {
        return childFee_ == null ? com.ctrip.flight.intl.agg.flighttypes.v3.ObFeeType.getDefaultInstance() : childFee_;
      } else {
        return childFeeBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * 儿童卡费
     * </pre>
     *
     * <code>.com.ctrip.flight.intl.agg.flighttypes.v3.ObFeeType ChildFee = 4;</code>
     */
    public Builder setChildFee(com.ctrip.flight.intl.agg.flighttypes.v3.ObFeeType value) {
      if (childFeeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        childFee_ = value;
        onChanged();
      } else {
        childFeeBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * 儿童卡费
     * </pre>
     *
     * <code>.com.ctrip.flight.intl.agg.flighttypes.v3.ObFeeType ChildFee = 4;</code>
     */
    public Builder setChildFee(
        com.ctrip.flight.intl.agg.flighttypes.v3.ObFeeType.Builder builderForValue) {
      if (childFeeBuilder_ == null) {
        childFee_ = builderForValue.build();
        onChanged();
      } else {
        childFeeBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * 儿童卡费
     * </pre>
     *
     * <code>.com.ctrip.flight.intl.agg.flighttypes.v3.ObFeeType ChildFee = 4;</code>
     */
    public Builder mergeChildFee(com.ctrip.flight.intl.agg.flighttypes.v3.ObFeeType value) {
      if (childFeeBuilder_ == null) {
        if (childFee_ != null) {
          childFee_ =
            com.ctrip.flight.intl.agg.flighttypes.v3.ObFeeType.newBuilder(childFee_).mergeFrom(value).buildPartial();
        } else {
          childFee_ = value;
        }
        onChanged();
      } else {
        childFeeBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * 儿童卡费
     * </pre>
     *
     * <code>.com.ctrip.flight.intl.agg.flighttypes.v3.ObFeeType ChildFee = 4;</code>
     */
    public Builder clearChildFee() {
      if (childFeeBuilder_ == null) {
        childFee_ = null;
        onChanged();
      } else {
        childFee_ = null;
        childFeeBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * 儿童卡费
     * </pre>
     *
     * <code>.com.ctrip.flight.intl.agg.flighttypes.v3.ObFeeType ChildFee = 4;</code>
     */
    public com.ctrip.flight.intl.agg.flighttypes.v3.ObFeeType.Builder getChildFeeBuilder() {
      
      onChanged();
      return getChildFeeFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * 儿童卡费
     * </pre>
     *
     * <code>.com.ctrip.flight.intl.agg.flighttypes.v3.ObFeeType ChildFee = 4;</code>
     */
    public com.ctrip.flight.intl.agg.flighttypes.v3.ObFeeTypeOrBuilder getChildFeeOrBuilder() {
      if (childFeeBuilder_ != null) {
        return childFeeBuilder_.getMessageOrBuilder();
      } else {
        return childFee_ == null ?
            com.ctrip.flight.intl.agg.flighttypes.v3.ObFeeType.getDefaultInstance() : childFee_;
      }
    }
    /**
     * <pre>
     * 儿童卡费
     * </pre>
     *
     * <code>.com.ctrip.flight.intl.agg.flighttypes.v3.ObFeeType ChildFee = 4;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.ctrip.flight.intl.agg.flighttypes.v3.ObFeeType, com.ctrip.flight.intl.agg.flighttypes.v3.ObFeeType.Builder, com.ctrip.flight.intl.agg.flighttypes.v3.ObFeeTypeOrBuilder> 
        getChildFeeFieldBuilder() {
      if (childFeeBuilder_ == null) {
        childFeeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.ctrip.flight.intl.agg.flighttypes.v3.ObFeeType, com.ctrip.flight.intl.agg.flighttypes.v3.ObFeeType.Builder, com.ctrip.flight.intl.agg.flighttypes.v3.ObFeeTypeOrBuilder>(
                getChildFee(),
                getParentForChildren(),
                isClean());
        childFee_ = null;
      }
      return childFeeBuilder_;
    }

    private com.ctrip.flight.intl.agg.flighttypes.v3.ObFeeType infantFee_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.ctrip.flight.intl.agg.flighttypes.v3.ObFeeType, com.ctrip.flight.intl.agg.flighttypes.v3.ObFeeType.Builder, com.ctrip.flight.intl.agg.flighttypes.v3.ObFeeTypeOrBuilder> infantFeeBuilder_;
    /**
     * <pre>
     * 婴儿卡费
     * </pre>
     *
     * <code>.com.ctrip.flight.intl.agg.flighttypes.v3.ObFeeType InfantFee = 5;</code>
     */
    public boolean hasInfantFee() {
      return infantFeeBuilder_ != null || infantFee_ != null;
    }
    /**
     * <pre>
     * 婴儿卡费
     * </pre>
     *
     * <code>.com.ctrip.flight.intl.agg.flighttypes.v3.ObFeeType InfantFee = 5;</code>
     */
    public com.ctrip.flight.intl.agg.flighttypes.v3.ObFeeType getInfantFee() {
      if (infantFeeBuilder_ == null) {
        return infantFee_ == null ? com.ctrip.flight.intl.agg.flighttypes.v3.ObFeeType.getDefaultInstance() : infantFee_;
      } else {
        return infantFeeBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * 婴儿卡费
     * </pre>
     *
     * <code>.com.ctrip.flight.intl.agg.flighttypes.v3.ObFeeType InfantFee = 5;</code>
     */
    public Builder setInfantFee(com.ctrip.flight.intl.agg.flighttypes.v3.ObFeeType value) {
      if (infantFeeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        infantFee_ = value;
        onChanged();
      } else {
        infantFeeBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * 婴儿卡费
     * </pre>
     *
     * <code>.com.ctrip.flight.intl.agg.flighttypes.v3.ObFeeType InfantFee = 5;</code>
     */
    public Builder setInfantFee(
        com.ctrip.flight.intl.agg.flighttypes.v3.ObFeeType.Builder builderForValue) {
      if (infantFeeBuilder_ == null) {
        infantFee_ = builderForValue.build();
        onChanged();
      } else {
        infantFeeBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * 婴儿卡费
     * </pre>
     *
     * <code>.com.ctrip.flight.intl.agg.flighttypes.v3.ObFeeType InfantFee = 5;</code>
     */
    public Builder mergeInfantFee(com.ctrip.flight.intl.agg.flighttypes.v3.ObFeeType value) {
      if (infantFeeBuilder_ == null) {
        if (infantFee_ != null) {
          infantFee_ =
            com.ctrip.flight.intl.agg.flighttypes.v3.ObFeeType.newBuilder(infantFee_).mergeFrom(value).buildPartial();
        } else {
          infantFee_ = value;
        }
        onChanged();
      } else {
        infantFeeBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * 婴儿卡费
     * </pre>
     *
     * <code>.com.ctrip.flight.intl.agg.flighttypes.v3.ObFeeType InfantFee = 5;</code>
     */
    public Builder clearInfantFee() {
      if (infantFeeBuilder_ == null) {
        infantFee_ = null;
        onChanged();
      } else {
        infantFee_ = null;
        infantFeeBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * 婴儿卡费
     * </pre>
     *
     * <code>.com.ctrip.flight.intl.agg.flighttypes.v3.ObFeeType InfantFee = 5;</code>
     */
    public com.ctrip.flight.intl.agg.flighttypes.v3.ObFeeType.Builder getInfantFeeBuilder() {
      
      onChanged();
      return getInfantFeeFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * 婴儿卡费
     * </pre>
     *
     * <code>.com.ctrip.flight.intl.agg.flighttypes.v3.ObFeeType InfantFee = 5;</code>
     */
    public com.ctrip.flight.intl.agg.flighttypes.v3.ObFeeTypeOrBuilder getInfantFeeOrBuilder() {
      if (infantFeeBuilder_ != null) {
        return infantFeeBuilder_.getMessageOrBuilder();
      } else {
        return infantFee_ == null ?
            com.ctrip.flight.intl.agg.flighttypes.v3.ObFeeType.getDefaultInstance() : infantFee_;
      }
    }
    /**
     * <pre>
     * 婴儿卡费
     * </pre>
     *
     * <code>.com.ctrip.flight.intl.agg.flighttypes.v3.ObFeeType InfantFee = 5;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.ctrip.flight.intl.agg.flighttypes.v3.ObFeeType, com.ctrip.flight.intl.agg.flighttypes.v3.ObFeeType.Builder, com.ctrip.flight.intl.agg.flighttypes.v3.ObFeeTypeOrBuilder> 
        getInfantFeeFieldBuilder() {
      if (infantFeeBuilder_ == null) {
        infantFeeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.ctrip.flight.intl.agg.flighttypes.v3.ObFeeType, com.ctrip.flight.intl.agg.flighttypes.v3.ObFeeType.Builder, com.ctrip.flight.intl.agg.flighttypes.v3.ObFeeTypeOrBuilder>(
                getInfantFee(),
                getParentForChildren(),
                isClean());
        infantFee_ = null;
      }
      return infantFeeBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFieldsProto3(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:com.ctrip.flight.intl.agg.flighttypes.v3.CreditCardPaymentInfoType)
  }

  // @@protoc_insertion_point(class_scope:com.ctrip.flight.intl.agg.flighttypes.v3.CreditCardPaymentInfoType)
  private static final com.ctrip.flight.intl.agg.flighttypes.v3.CreditCardPaymentInfoType DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.ctrip.flight.intl.agg.flighttypes.v3.CreditCardPaymentInfoType();
  }

  public static com.ctrip.flight.intl.agg.flighttypes.v3.CreditCardPaymentInfoType getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<CreditCardPaymentInfoType>
      PARSER = new com.google.protobuf.AbstractParser<CreditCardPaymentInfoType>() {
    @java.lang.Override
    public CreditCardPaymentInfoType parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new CreditCardPaymentInfoType(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<CreditCardPaymentInfoType> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<CreditCardPaymentInfoType> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.ctrip.flight.intl.agg.flighttypes.v3.CreditCardPaymentInfoType getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

