// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: agg.messagetypes.v3.proto

package com.ctrip.flight.intl.agg.messagetypes.v3;

/**
 * Protobuf enum {@code com.ctrip.flight.intl.agg.messagetypes.v3.ChannelIDType}
 */
public enum ChannelIDType
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <code>None = 0;</code>
   */
  None(0),
  /**
   * <code>FlightOnline = 1;</code>
   */
  FlightOnline(1),
  /**
   * <code>FlightOffline = 2;</code>
   */
  FlightOffline(2),
  /**
   * <code>FlightExternal = 3;</code>
   */
  FlightExternal(3),
  /**
   * <code>FlightIntlOnline = 4;</code>
   */
  FlightIntlOnline(4),
  /**
   * <code>FlightIntlOffline = 5;</code>
   */
  FlightIntlOffline(5),
  /**
   * <code>FltIntlExternal = 6;</code>
   */
  FltIntlExternal(6),
  /**
   * <code>FlightIntlOnlineSEO = 7;</code>
   */
  FlightIntlOnlineSEO(7),
  /**
   * <code>Corporation = 8;</code>
   */
  Corporation(8),
  /**
   * <code>CorpOffline = 9;</code>
   */
  CorpOffline(9),
  /**
   * <code>CorpMobile = 10;</code>
   */
  CorpMobile(10),
  /**
   * <code>Vacation = 11;</code>
   */
  Vacation(11),
  /**
   * <code>VacationGroup = 12;</code>
   */
  VacationGroup(12),
  /**
   * <code>RestrictedVacation = 13;</code>
   */
  RestrictedVacation(13),
  /**
   * <code>FitTravel = 14;</code>
   */
  FitTravel(14),
  /**
   * <code>Mobile = 15;</code>
   */
  Mobile(15),
  /**
   * <code>MobileH5 = 16;</code>
   */
  MobileH5(16),
  /**
   * <code>Hotel = 17;</code>
   */
  Hotel(17),
  /**
   * <code>AirHotel = 18;</code>
   */
  AirHotel(18),
  /**
   * <code>AirHotelIntl = 19;</code>
   */
  AirHotelIntl(19),
  /**
   * <code>AirHotelIntlEx = 20;</code>
   */
  AirHotelIntlEx(20),
  /**
   * <code>AirHotelPackage = 21;</code>
   */
  AirHotelPackage(21),
  /**
   * <code>EnglishSite = 22;</code>
   */
  EnglishSite(22),
  /**
   * <code>HighRail = 23;</code>
   */
  HighRail(23),
  /**
   * <code>Affiliate = 24;</code>
   */
  Affiliate(24),
  /**
   * <code>Luxury = 25;</code>
   */
  Luxury(25),
  /**
   * <code>Customer = 26;</code>
   */
  Customer(26),
  /**
   * <code>Mice = 27;</code>
   */
  Mice(27),
  /**
   * <code>Community = 28;</code>
   */
  Community(28),
  /**
   * <code>EzTravel = 29;</code>
   */
  EzTravel(29),
  /**
   * <code>Wingon = 30;</code>
   */
  Wingon(30),
  /**
   * <code>Distribution = 31;</code>
   */
  Distribution(31),
  /**
   * <code>BIChannel = 32;</code>
   */
  BIChannel(32),
  /**
   * <code>Finance = 33;</code>
   */
  Finance(33),
  /**
   * <code>ConfirmCustomer = 34;</code>
   */
  ConfirmCustomer(34),
  /**
   * <code>HKSite = 35;</code>
   */
  HKSite(35),
  /**
   * <code>KRSite = 36;</code>
   */
  KRSite(36),
  /**
   * <code>JPSite = 37;</code>
   */
  JPSite(37),
  /**
   * <code>SGSite = 38;</code>
   */
  SGSite(38),
  /**
   * <code>TWSite = 39;</code>
   */
  TWSite(39),
  /**
   * <code>THSite = 40;</code>
   */
  THSite(40),
  /**
   * <code>Qunar = 41;</code>
   */
  Qunar(41),
  /**
   * <code>Skyscanner = 42;</code>
   */
  Skyscanner(42),
  /**
   * <code>Travix = 43;</code>
   */
  Travix(43),
  UNRECOGNIZED(-1),
  ;

  /**
   * <code>None = 0;</code>
   */
  public static final int None_VALUE = 0;
  /**
   * <code>FlightOnline = 1;</code>
   */
  public static final int FlightOnline_VALUE = 1;
  /**
   * <code>FlightOffline = 2;</code>
   */
  public static final int FlightOffline_VALUE = 2;
  /**
   * <code>FlightExternal = 3;</code>
   */
  public static final int FlightExternal_VALUE = 3;
  /**
   * <code>FlightIntlOnline = 4;</code>
   */
  public static final int FlightIntlOnline_VALUE = 4;
  /**
   * <code>FlightIntlOffline = 5;</code>
   */
  public static final int FlightIntlOffline_VALUE = 5;
  /**
   * <code>FltIntlExternal = 6;</code>
   */
  public static final int FltIntlExternal_VALUE = 6;
  /**
   * <code>FlightIntlOnlineSEO = 7;</code>
   */
  public static final int FlightIntlOnlineSEO_VALUE = 7;
  /**
   * <code>Corporation = 8;</code>
   */
  public static final int Corporation_VALUE = 8;
  /**
   * <code>CorpOffline = 9;</code>
   */
  public static final int CorpOffline_VALUE = 9;
  /**
   * <code>CorpMobile = 10;</code>
   */
  public static final int CorpMobile_VALUE = 10;
  /**
   * <code>Vacation = 11;</code>
   */
  public static final int Vacation_VALUE = 11;
  /**
   * <code>VacationGroup = 12;</code>
   */
  public static final int VacationGroup_VALUE = 12;
  /**
   * <code>RestrictedVacation = 13;</code>
   */
  public static final int RestrictedVacation_VALUE = 13;
  /**
   * <code>FitTravel = 14;</code>
   */
  public static final int FitTravel_VALUE = 14;
  /**
   * <code>Mobile = 15;</code>
   */
  public static final int Mobile_VALUE = 15;
  /**
   * <code>MobileH5 = 16;</code>
   */
  public static final int MobileH5_VALUE = 16;
  /**
   * <code>Hotel = 17;</code>
   */
  public static final int Hotel_VALUE = 17;
  /**
   * <code>AirHotel = 18;</code>
   */
  public static final int AirHotel_VALUE = 18;
  /**
   * <code>AirHotelIntl = 19;</code>
   */
  public static final int AirHotelIntl_VALUE = 19;
  /**
   * <code>AirHotelIntlEx = 20;</code>
   */
  public static final int AirHotelIntlEx_VALUE = 20;
  /**
   * <code>AirHotelPackage = 21;</code>
   */
  public static final int AirHotelPackage_VALUE = 21;
  /**
   * <code>EnglishSite = 22;</code>
   */
  public static final int EnglishSite_VALUE = 22;
  /**
   * <code>HighRail = 23;</code>
   */
  public static final int HighRail_VALUE = 23;
  /**
   * <code>Affiliate = 24;</code>
   */
  public static final int Affiliate_VALUE = 24;
  /**
   * <code>Luxury = 25;</code>
   */
  public static final int Luxury_VALUE = 25;
  /**
   * <code>Customer = 26;</code>
   */
  public static final int Customer_VALUE = 26;
  /**
   * <code>Mice = 27;</code>
   */
  public static final int Mice_VALUE = 27;
  /**
   * <code>Community = 28;</code>
   */
  public static final int Community_VALUE = 28;
  /**
   * <code>EzTravel = 29;</code>
   */
  public static final int EzTravel_VALUE = 29;
  /**
   * <code>Wingon = 30;</code>
   */
  public static final int Wingon_VALUE = 30;
  /**
   * <code>Distribution = 31;</code>
   */
  public static final int Distribution_VALUE = 31;
  /**
   * <code>BIChannel = 32;</code>
   */
  public static final int BIChannel_VALUE = 32;
  /**
   * <code>Finance = 33;</code>
   */
  public static final int Finance_VALUE = 33;
  /**
   * <code>ConfirmCustomer = 34;</code>
   */
  public static final int ConfirmCustomer_VALUE = 34;
  /**
   * <code>HKSite = 35;</code>
   */
  public static final int HKSite_VALUE = 35;
  /**
   * <code>KRSite = 36;</code>
   */
  public static final int KRSite_VALUE = 36;
  /**
   * <code>JPSite = 37;</code>
   */
  public static final int JPSite_VALUE = 37;
  /**
   * <code>SGSite = 38;</code>
   */
  public static final int SGSite_VALUE = 38;
  /**
   * <code>TWSite = 39;</code>
   */
  public static final int TWSite_VALUE = 39;
  /**
   * <code>THSite = 40;</code>
   */
  public static final int THSite_VALUE = 40;
  /**
   * <code>Qunar = 41;</code>
   */
  public static final int Qunar_VALUE = 41;
  /**
   * <code>Skyscanner = 42;</code>
   */
  public static final int Skyscanner_VALUE = 42;
  /**
   * <code>Travix = 43;</code>
   */
  public static final int Travix_VALUE = 43;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static ChannelIDType valueOf(int value) {
    return forNumber(value);
  }

  public static ChannelIDType forNumber(int value) {
    switch (value) {
      case 0: return None;
      case 1: return FlightOnline;
      case 2: return FlightOffline;
      case 3: return FlightExternal;
      case 4: return FlightIntlOnline;
      case 5: return FlightIntlOffline;
      case 6: return FltIntlExternal;
      case 7: return FlightIntlOnlineSEO;
      case 8: return Corporation;
      case 9: return CorpOffline;
      case 10: return CorpMobile;
      case 11: return Vacation;
      case 12: return VacationGroup;
      case 13: return RestrictedVacation;
      case 14: return FitTravel;
      case 15: return Mobile;
      case 16: return MobileH5;
      case 17: return Hotel;
      case 18: return AirHotel;
      case 19: return AirHotelIntl;
      case 20: return AirHotelIntlEx;
      case 21: return AirHotelPackage;
      case 22: return EnglishSite;
      case 23: return HighRail;
      case 24: return Affiliate;
      case 25: return Luxury;
      case 26: return Customer;
      case 27: return Mice;
      case 28: return Community;
      case 29: return EzTravel;
      case 30: return Wingon;
      case 31: return Distribution;
      case 32: return BIChannel;
      case 33: return Finance;
      case 34: return ConfirmCustomer;
      case 35: return HKSite;
      case 36: return KRSite;
      case 37: return JPSite;
      case 38: return SGSite;
      case 39: return TWSite;
      case 40: return THSite;
      case 41: return Qunar;
      case 42: return Skyscanner;
      case 43: return Travix;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<ChannelIDType>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      ChannelIDType> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<ChannelIDType>() {
          public ChannelIDType findValueByNumber(int number) {
            return ChannelIDType.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return com.ctrip.flight.intl.agg.messagetypes.v3.AggMessagetypesV3.getDescriptor().getEnumTypes().get(0);
  }

  private static final ChannelIDType[] VALUES = values();

  public static ChannelIDType valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private ChannelIDType(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:com.ctrip.flight.intl.agg.messagetypes.v3.ChannelIDType)
}

