// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: agg.flighttypes.v3.proto

package com.ctrip.flight.intl.agg.flighttypes.v3;

/**
 * Protobuf type {@code com.ctrip.flight.intl.agg.flighttypes.v3.PriceUnitType}
 */
public  final class PriceUnitType extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:com.ctrip.flight.intl.agg.flighttypes.v3.PriceUnitType)
    PriceUnitTypeOrBuilder {
private static final long serialVersionUID = 0L;
  // Use PriceUnitType.newBuilder() to construct.
  private PriceUnitType(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private PriceUnitType() {
    fare_ = java.util.Collections.emptyList();
    carrierTicketingDeadline_ = "";
    needQTE_ = false;
    needPnr_ = false;
    textRemarkId_ = 0;
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private PriceUnitType(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
              fare_ = new java.util.ArrayList<com.ctrip.flight.intl.agg.flighttypes.v3.FareType>();
              mutable_bitField0_ |= 0x00000001;
            }
            fare_.add(
                input.readMessage(com.ctrip.flight.intl.agg.flighttypes.v3.FareType.parser(), extensionRegistry));
            break;
          }
          case 18: {
            java.lang.String s = input.readStringRequireUtf8();

            carrierTicketingDeadline_ = s;
            break;
          }
          case 24: {

            needQTE_ = input.readBool();
            break;
          }
          case 32: {

            needPnr_ = input.readBool();
            break;
          }
          case 40: {

            textRemarkId_ = input.readInt32();
            break;
          }
          default: {
            if (!parseUnknownFieldProto3(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
        fare_ = java.util.Collections.unmodifiableList(fare_);
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.ctrip.flight.intl.agg.flighttypes.v3.AggFlighttypesV3.internal_static_com_ctrip_flight_intl_agg_flighttypes_v3_PriceUnitType_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.ctrip.flight.intl.agg.flighttypes.v3.AggFlighttypesV3.internal_static_com_ctrip_flight_intl_agg_flighttypes_v3_PriceUnitType_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.ctrip.flight.intl.agg.flighttypes.v3.PriceUnitType.class, com.ctrip.flight.intl.agg.flighttypes.v3.PriceUnitType.Builder.class);
  }

  private int bitField0_;
  public static final int FARE_FIELD_NUMBER = 1;
  private java.util.List<com.ctrip.flight.intl.agg.flighttypes.v3.FareType> fare_;
  /**
   * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.FareType Fare = 1;</code>
   */
  public java.util.List<com.ctrip.flight.intl.agg.flighttypes.v3.FareType> getFareList() {
    return fare_;
  }
  /**
   * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.FareType Fare = 1;</code>
   */
  public java.util.List<? extends com.ctrip.flight.intl.agg.flighttypes.v3.FareTypeOrBuilder> 
      getFareOrBuilderList() {
    return fare_;
  }
  /**
   * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.FareType Fare = 1;</code>
   */
  public int getFareCount() {
    return fare_.size();
  }
  /**
   * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.FareType Fare = 1;</code>
   */
  public com.ctrip.flight.intl.agg.flighttypes.v3.FareType getFare(int index) {
    return fare_.get(index);
  }
  /**
   * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.FareType Fare = 1;</code>
   */
  public com.ctrip.flight.intl.agg.flighttypes.v3.FareTypeOrBuilder getFareOrBuilder(
      int index) {
    return fare_.get(index);
  }

  public static final int CARRIERTICKETINGDEADLINE_FIELD_NUMBER = 2;
  private volatile java.lang.Object carrierTicketingDeadline_;
  /**
   * <code>string CarrierTicketingDeadline = 2;</code>
   */
  public java.lang.String getCarrierTicketingDeadline() {
    java.lang.Object ref = carrierTicketingDeadline_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      carrierTicketingDeadline_ = s;
      return s;
    }
  }
  /**
   * <code>string CarrierTicketingDeadline = 2;</code>
   */
  public com.google.protobuf.ByteString
      getCarrierTicketingDeadlineBytes() {
    java.lang.Object ref = carrierTicketingDeadline_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      carrierTicketingDeadline_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int NEEDQTE_FIELD_NUMBER = 3;
  private boolean needQTE_;
  /**
   * <pre>
   * string QTECmdPostfix = 3 ; 迁移到PriceInfo
   * </pre>
   *
   * <code>bool NeedQTE = 3;</code>
   */
  public boolean getNeedQTE() {
    return needQTE_;
  }

  public static final int NEEDPNR_FIELD_NUMBER = 4;
  private boolean needPnr_;
  /**
   * <code>bool NeedPnr = 4;</code>
   */
  public boolean getNeedPnr() {
    return needPnr_;
  }

  public static final int TEXTREMARKID_FIELD_NUMBER = 5;
  private int textRemarkId_;
  /**
   * <pre>
   * string XSFSICmd = 7 ; 迁移到PriceInfo
   * </pre>
   *
   * <code>int32 TextRemarkId = 5;</code>
   */
  public int getTextRemarkId() {
    return textRemarkId_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    for (int i = 0; i < fare_.size(); i++) {
      output.writeMessage(1, fare_.get(i));
    }
    if (!getCarrierTicketingDeadlineBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, carrierTicketingDeadline_);
    }
    if (needQTE_ != false) {
      output.writeBool(3, needQTE_);
    }
    if (needPnr_ != false) {
      output.writeBool(4, needPnr_);
    }
    if (textRemarkId_ != 0) {
      output.writeInt32(5, textRemarkId_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    for (int i = 0; i < fare_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, fare_.get(i));
    }
    if (!getCarrierTicketingDeadlineBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, carrierTicketingDeadline_);
    }
    if (needQTE_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(3, needQTE_);
    }
    if (needPnr_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(4, needPnr_);
    }
    if (textRemarkId_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(5, textRemarkId_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.ctrip.flight.intl.agg.flighttypes.v3.PriceUnitType)) {
      return super.equals(obj);
    }
    com.ctrip.flight.intl.agg.flighttypes.v3.PriceUnitType other = (com.ctrip.flight.intl.agg.flighttypes.v3.PriceUnitType) obj;

    boolean result = true;
    result = result && getFareList()
        .equals(other.getFareList());
    result = result && getCarrierTicketingDeadline()
        .equals(other.getCarrierTicketingDeadline());
    result = result && (getNeedQTE()
        == other.getNeedQTE());
    result = result && (getNeedPnr()
        == other.getNeedPnr());
    result = result && (getTextRemarkId()
        == other.getTextRemarkId());
    result = result && unknownFields.equals(other.unknownFields);
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (getFareCount() > 0) {
      hash = (37 * hash) + FARE_FIELD_NUMBER;
      hash = (53 * hash) + getFareList().hashCode();
    }
    hash = (37 * hash) + CARRIERTICKETINGDEADLINE_FIELD_NUMBER;
    hash = (53 * hash) + getCarrierTicketingDeadline().hashCode();
    hash = (37 * hash) + NEEDQTE_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getNeedQTE());
    hash = (37 * hash) + NEEDPNR_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getNeedPnr());
    hash = (37 * hash) + TEXTREMARKID_FIELD_NUMBER;
    hash = (53 * hash) + getTextRemarkId();
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.ctrip.flight.intl.agg.flighttypes.v3.PriceUnitType parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.ctrip.flight.intl.agg.flighttypes.v3.PriceUnitType parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.ctrip.flight.intl.agg.flighttypes.v3.PriceUnitType parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.ctrip.flight.intl.agg.flighttypes.v3.PriceUnitType parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.ctrip.flight.intl.agg.flighttypes.v3.PriceUnitType parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.ctrip.flight.intl.agg.flighttypes.v3.PriceUnitType parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.ctrip.flight.intl.agg.flighttypes.v3.PriceUnitType parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.ctrip.flight.intl.agg.flighttypes.v3.PriceUnitType parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.ctrip.flight.intl.agg.flighttypes.v3.PriceUnitType parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.ctrip.flight.intl.agg.flighttypes.v3.PriceUnitType parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.ctrip.flight.intl.agg.flighttypes.v3.PriceUnitType parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.ctrip.flight.intl.agg.flighttypes.v3.PriceUnitType parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.ctrip.flight.intl.agg.flighttypes.v3.PriceUnitType prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code com.ctrip.flight.intl.agg.flighttypes.v3.PriceUnitType}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:com.ctrip.flight.intl.agg.flighttypes.v3.PriceUnitType)
      com.ctrip.flight.intl.agg.flighttypes.v3.PriceUnitTypeOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.ctrip.flight.intl.agg.flighttypes.v3.AggFlighttypesV3.internal_static_com_ctrip_flight_intl_agg_flighttypes_v3_PriceUnitType_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.ctrip.flight.intl.agg.flighttypes.v3.AggFlighttypesV3.internal_static_com_ctrip_flight_intl_agg_flighttypes_v3_PriceUnitType_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.ctrip.flight.intl.agg.flighttypes.v3.PriceUnitType.class, com.ctrip.flight.intl.agg.flighttypes.v3.PriceUnitType.Builder.class);
    }

    // Construct using com.ctrip.flight.intl.agg.flighttypes.v3.PriceUnitType.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getFareFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      if (fareBuilder_ == null) {
        fare_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
      } else {
        fareBuilder_.clear();
      }
      carrierTicketingDeadline_ = "";

      needQTE_ = false;

      needPnr_ = false;

      textRemarkId_ = 0;

      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.ctrip.flight.intl.agg.flighttypes.v3.AggFlighttypesV3.internal_static_com_ctrip_flight_intl_agg_flighttypes_v3_PriceUnitType_descriptor;
    }

    @java.lang.Override
    public com.ctrip.flight.intl.agg.flighttypes.v3.PriceUnitType getDefaultInstanceForType() {
      return com.ctrip.flight.intl.agg.flighttypes.v3.PriceUnitType.getDefaultInstance();
    }

    @java.lang.Override
    public com.ctrip.flight.intl.agg.flighttypes.v3.PriceUnitType build() {
      com.ctrip.flight.intl.agg.flighttypes.v3.PriceUnitType result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.ctrip.flight.intl.agg.flighttypes.v3.PriceUnitType buildPartial() {
      com.ctrip.flight.intl.agg.flighttypes.v3.PriceUnitType result = new com.ctrip.flight.intl.agg.flighttypes.v3.PriceUnitType(this);
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (fareBuilder_ == null) {
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          fare_ = java.util.Collections.unmodifiableList(fare_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.fare_ = fare_;
      } else {
        result.fare_ = fareBuilder_.build();
      }
      result.carrierTicketingDeadline_ = carrierTicketingDeadline_;
      result.needQTE_ = needQTE_;
      result.needPnr_ = needPnr_;
      result.textRemarkId_ = textRemarkId_;
      result.bitField0_ = to_bitField0_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return (Builder) super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.ctrip.flight.intl.agg.flighttypes.v3.PriceUnitType) {
        return mergeFrom((com.ctrip.flight.intl.agg.flighttypes.v3.PriceUnitType)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.ctrip.flight.intl.agg.flighttypes.v3.PriceUnitType other) {
      if (other == com.ctrip.flight.intl.agg.flighttypes.v3.PriceUnitType.getDefaultInstance()) return this;
      if (fareBuilder_ == null) {
        if (!other.fare_.isEmpty()) {
          if (fare_.isEmpty()) {
            fare_ = other.fare_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureFareIsMutable();
            fare_.addAll(other.fare_);
          }
          onChanged();
        }
      } else {
        if (!other.fare_.isEmpty()) {
          if (fareBuilder_.isEmpty()) {
            fareBuilder_.dispose();
            fareBuilder_ = null;
            fare_ = other.fare_;
            bitField0_ = (bitField0_ & ~0x00000001);
            fareBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getFareFieldBuilder() : null;
          } else {
            fareBuilder_.addAllMessages(other.fare_);
          }
        }
      }
      if (!other.getCarrierTicketingDeadline().isEmpty()) {
        carrierTicketingDeadline_ = other.carrierTicketingDeadline_;
        onChanged();
      }
      if (other.getNeedQTE() != false) {
        setNeedQTE(other.getNeedQTE());
      }
      if (other.getNeedPnr() != false) {
        setNeedPnr(other.getNeedPnr());
      }
      if (other.getTextRemarkId() != 0) {
        setTextRemarkId(other.getTextRemarkId());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.ctrip.flight.intl.agg.flighttypes.v3.PriceUnitType parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.ctrip.flight.intl.agg.flighttypes.v3.PriceUnitType) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private java.util.List<com.ctrip.flight.intl.agg.flighttypes.v3.FareType> fare_ =
      java.util.Collections.emptyList();
    private void ensureFareIsMutable() {
      if (!((bitField0_ & 0x00000001) == 0x00000001)) {
        fare_ = new java.util.ArrayList<com.ctrip.flight.intl.agg.flighttypes.v3.FareType>(fare_);
        bitField0_ |= 0x00000001;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.ctrip.flight.intl.agg.flighttypes.v3.FareType, com.ctrip.flight.intl.agg.flighttypes.v3.FareType.Builder, com.ctrip.flight.intl.agg.flighttypes.v3.FareTypeOrBuilder> fareBuilder_;

    /**
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.FareType Fare = 1;</code>
     */
    public java.util.List<com.ctrip.flight.intl.agg.flighttypes.v3.FareType> getFareList() {
      if (fareBuilder_ == null) {
        return java.util.Collections.unmodifiableList(fare_);
      } else {
        return fareBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.FareType Fare = 1;</code>
     */
    public int getFareCount() {
      if (fareBuilder_ == null) {
        return fare_.size();
      } else {
        return fareBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.FareType Fare = 1;</code>
     */
    public com.ctrip.flight.intl.agg.flighttypes.v3.FareType getFare(int index) {
      if (fareBuilder_ == null) {
        return fare_.get(index);
      } else {
        return fareBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.FareType Fare = 1;</code>
     */
    public Builder setFare(
        int index, com.ctrip.flight.intl.agg.flighttypes.v3.FareType value) {
      if (fareBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureFareIsMutable();
        fare_.set(index, value);
        onChanged();
      } else {
        fareBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.FareType Fare = 1;</code>
     */
    public Builder setFare(
        int index, com.ctrip.flight.intl.agg.flighttypes.v3.FareType.Builder builderForValue) {
      if (fareBuilder_ == null) {
        ensureFareIsMutable();
        fare_.set(index, builderForValue.build());
        onChanged();
      } else {
        fareBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.FareType Fare = 1;</code>
     */
    public Builder addFare(com.ctrip.flight.intl.agg.flighttypes.v3.FareType value) {
      if (fareBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureFareIsMutable();
        fare_.add(value);
        onChanged();
      } else {
        fareBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.FareType Fare = 1;</code>
     */
    public Builder addFare(
        int index, com.ctrip.flight.intl.agg.flighttypes.v3.FareType value) {
      if (fareBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureFareIsMutable();
        fare_.add(index, value);
        onChanged();
      } else {
        fareBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.FareType Fare = 1;</code>
     */
    public Builder addFare(
        com.ctrip.flight.intl.agg.flighttypes.v3.FareType.Builder builderForValue) {
      if (fareBuilder_ == null) {
        ensureFareIsMutable();
        fare_.add(builderForValue.build());
        onChanged();
      } else {
        fareBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.FareType Fare = 1;</code>
     */
    public Builder addFare(
        int index, com.ctrip.flight.intl.agg.flighttypes.v3.FareType.Builder builderForValue) {
      if (fareBuilder_ == null) {
        ensureFareIsMutable();
        fare_.add(index, builderForValue.build());
        onChanged();
      } else {
        fareBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.FareType Fare = 1;</code>
     */
    public Builder addAllFare(
        java.lang.Iterable<? extends com.ctrip.flight.intl.agg.flighttypes.v3.FareType> values) {
      if (fareBuilder_ == null) {
        ensureFareIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, fare_);
        onChanged();
      } else {
        fareBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.FareType Fare = 1;</code>
     */
    public Builder clearFare() {
      if (fareBuilder_ == null) {
        fare_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
      } else {
        fareBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.FareType Fare = 1;</code>
     */
    public Builder removeFare(int index) {
      if (fareBuilder_ == null) {
        ensureFareIsMutable();
        fare_.remove(index);
        onChanged();
      } else {
        fareBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.FareType Fare = 1;</code>
     */
    public com.ctrip.flight.intl.agg.flighttypes.v3.FareType.Builder getFareBuilder(
        int index) {
      return getFareFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.FareType Fare = 1;</code>
     */
    public com.ctrip.flight.intl.agg.flighttypes.v3.FareTypeOrBuilder getFareOrBuilder(
        int index) {
      if (fareBuilder_ == null) {
        return fare_.get(index);  } else {
        return fareBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.FareType Fare = 1;</code>
     */
    public java.util.List<? extends com.ctrip.flight.intl.agg.flighttypes.v3.FareTypeOrBuilder> 
         getFareOrBuilderList() {
      if (fareBuilder_ != null) {
        return fareBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(fare_);
      }
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.FareType Fare = 1;</code>
     */
    public com.ctrip.flight.intl.agg.flighttypes.v3.FareType.Builder addFareBuilder() {
      return getFareFieldBuilder().addBuilder(
          com.ctrip.flight.intl.agg.flighttypes.v3.FareType.getDefaultInstance());
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.FareType Fare = 1;</code>
     */
    public com.ctrip.flight.intl.agg.flighttypes.v3.FareType.Builder addFareBuilder(
        int index) {
      return getFareFieldBuilder().addBuilder(
          index, com.ctrip.flight.intl.agg.flighttypes.v3.FareType.getDefaultInstance());
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.FareType Fare = 1;</code>
     */
    public java.util.List<com.ctrip.flight.intl.agg.flighttypes.v3.FareType.Builder> 
         getFareBuilderList() {
      return getFareFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.ctrip.flight.intl.agg.flighttypes.v3.FareType, com.ctrip.flight.intl.agg.flighttypes.v3.FareType.Builder, com.ctrip.flight.intl.agg.flighttypes.v3.FareTypeOrBuilder> 
        getFareFieldBuilder() {
      if (fareBuilder_ == null) {
        fareBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.ctrip.flight.intl.agg.flighttypes.v3.FareType, com.ctrip.flight.intl.agg.flighttypes.v3.FareType.Builder, com.ctrip.flight.intl.agg.flighttypes.v3.FareTypeOrBuilder>(
                fare_,
                ((bitField0_ & 0x00000001) == 0x00000001),
                getParentForChildren(),
                isClean());
        fare_ = null;
      }
      return fareBuilder_;
    }

    private java.lang.Object carrierTicketingDeadline_ = "";
    /**
     * <code>string CarrierTicketingDeadline = 2;</code>
     */
    public java.lang.String getCarrierTicketingDeadline() {
      java.lang.Object ref = carrierTicketingDeadline_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        carrierTicketingDeadline_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <code>string CarrierTicketingDeadline = 2;</code>
     */
    public com.google.protobuf.ByteString
        getCarrierTicketingDeadlineBytes() {
      java.lang.Object ref = carrierTicketingDeadline_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        carrierTicketingDeadline_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>string CarrierTicketingDeadline = 2;</code>
     */
    public Builder setCarrierTicketingDeadline(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      carrierTicketingDeadline_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>string CarrierTicketingDeadline = 2;</code>
     */
    public Builder clearCarrierTicketingDeadline() {
      
      carrierTicketingDeadline_ = getDefaultInstance().getCarrierTicketingDeadline();
      onChanged();
      return this;
    }
    /**
     * <code>string CarrierTicketingDeadline = 2;</code>
     */
    public Builder setCarrierTicketingDeadlineBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      carrierTicketingDeadline_ = value;
      onChanged();
      return this;
    }

    private boolean needQTE_ ;
    /**
     * <pre>
     * string QTECmdPostfix = 3 ; 迁移到PriceInfo
     * </pre>
     *
     * <code>bool NeedQTE = 3;</code>
     */
    public boolean getNeedQTE() {
      return needQTE_;
    }
    /**
     * <pre>
     * string QTECmdPostfix = 3 ; 迁移到PriceInfo
     * </pre>
     *
     * <code>bool NeedQTE = 3;</code>
     */
    public Builder setNeedQTE(boolean value) {
      
      needQTE_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * string QTECmdPostfix = 3 ; 迁移到PriceInfo
     * </pre>
     *
     * <code>bool NeedQTE = 3;</code>
     */
    public Builder clearNeedQTE() {
      
      needQTE_ = false;
      onChanged();
      return this;
    }

    private boolean needPnr_ ;
    /**
     * <code>bool NeedPnr = 4;</code>
     */
    public boolean getNeedPnr() {
      return needPnr_;
    }
    /**
     * <code>bool NeedPnr = 4;</code>
     */
    public Builder setNeedPnr(boolean value) {
      
      needPnr_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>bool NeedPnr = 4;</code>
     */
    public Builder clearNeedPnr() {
      
      needPnr_ = false;
      onChanged();
      return this;
    }

    private int textRemarkId_ ;
    /**
     * <pre>
     * string XSFSICmd = 7 ; 迁移到PriceInfo
     * </pre>
     *
     * <code>int32 TextRemarkId = 5;</code>
     */
    public int getTextRemarkId() {
      return textRemarkId_;
    }
    /**
     * <pre>
     * string XSFSICmd = 7 ; 迁移到PriceInfo
     * </pre>
     *
     * <code>int32 TextRemarkId = 5;</code>
     */
    public Builder setTextRemarkId(int value) {
      
      textRemarkId_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * string XSFSICmd = 7 ; 迁移到PriceInfo
     * </pre>
     *
     * <code>int32 TextRemarkId = 5;</code>
     */
    public Builder clearTextRemarkId() {
      
      textRemarkId_ = 0;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFieldsProto3(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:com.ctrip.flight.intl.agg.flighttypes.v3.PriceUnitType)
  }

  // @@protoc_insertion_point(class_scope:com.ctrip.flight.intl.agg.flighttypes.v3.PriceUnitType)
  private static final com.ctrip.flight.intl.agg.flighttypes.v3.PriceUnitType DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.ctrip.flight.intl.agg.flighttypes.v3.PriceUnitType();
  }

  public static com.ctrip.flight.intl.agg.flighttypes.v3.PriceUnitType getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<PriceUnitType>
      PARSER = new com.google.protobuf.AbstractParser<PriceUnitType>() {
    @java.lang.Override
    public PriceUnitType parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new PriceUnitType(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<PriceUnitType> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<PriceUnitType> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.ctrip.flight.intl.agg.flighttypes.v3.PriceUnitType getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

