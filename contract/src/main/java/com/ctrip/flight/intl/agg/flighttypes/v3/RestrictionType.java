// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: agg.flighttypes.v3.proto

package com.ctrip.flight.intl.agg.flighttypes.v3;

/**
 * Protobuf type {@code com.ctrip.flight.intl.agg.flighttypes.v3.RestrictionType}
 */
public  final class RestrictionType extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:com.ctrip.flight.intl.agg.flighttypes.v3.RestrictionType)
    RestrictionTypeOrBuilder {
private static final long serialVersionUID = 0L;
  // Use RestrictionType.newBuilder() to construct.
  private RestrictionType(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private RestrictionType() {
    languageOfGovernmentIssuedPhotoId_ = com.google.protobuf.LazyStringArrayList.EMPTY;
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private RestrictionType(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            java.lang.String s = input.readStringRequireUtf8();
            if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
              languageOfGovernmentIssuedPhotoId_ = new com.google.protobuf.LazyStringArrayList();
              mutable_bitField0_ |= 0x00000001;
            }
            languageOfGovernmentIssuedPhotoId_.add(s);
            break;
          }
          case 18: {
            com.ctrip.flight.intl.agg.flighttypes.v3.PaymentAgencyModelInfoType.Builder subBuilder = null;
            if (paymentAgencyModelInfo_ != null) {
              subBuilder = paymentAgencyModelInfo_.toBuilder();
            }
            paymentAgencyModelInfo_ = input.readMessage(com.ctrip.flight.intl.agg.flighttypes.v3.PaymentAgencyModelInfoType.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(paymentAgencyModelInfo_);
              paymentAgencyModelInfo_ = subBuilder.buildPartial();
            }

            break;
          }
          case 26: {
            com.ctrip.flight.intl.agg.flighttypes.v3.IntRangeType.Builder subBuilder = null;
            if (passengerCountRange_ != null) {
              subBuilder = passengerCountRange_.toBuilder();
            }
            passengerCountRange_ = input.readMessage(com.ctrip.flight.intl.agg.flighttypes.v3.IntRangeType.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(passengerCountRange_);
              passengerCountRange_ = subBuilder.buildPartial();
            }

            break;
          }
          default: {
            if (!parseUnknownFieldProto3(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
        languageOfGovernmentIssuedPhotoId_ = languageOfGovernmentIssuedPhotoId_.getUnmodifiableView();
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.ctrip.flight.intl.agg.flighttypes.v3.AggFlighttypesV3.internal_static_com_ctrip_flight_intl_agg_flighttypes_v3_RestrictionType_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.ctrip.flight.intl.agg.flighttypes.v3.AggFlighttypesV3.internal_static_com_ctrip_flight_intl_agg_flighttypes_v3_RestrictionType_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.ctrip.flight.intl.agg.flighttypes.v3.RestrictionType.class, com.ctrip.flight.intl.agg.flighttypes.v3.RestrictionType.Builder.class);
  }

  private int bitField0_;
  public static final int LANGUAGEOFGOVERNMENTISSUEDPHOTOID_FIELD_NUMBER = 1;
  private com.google.protobuf.LazyStringList languageOfGovernmentIssuedPhotoId_;
  /**
   * <pre>
   * 使用本地证件预订票的语言
   * </pre>
   *
   * <code>repeated string LanguageOfGovernmentIssuedPhotoId = 1;</code>
   */
  public com.google.protobuf.ProtocolStringList
      getLanguageOfGovernmentIssuedPhotoIdList() {
    return languageOfGovernmentIssuedPhotoId_;
  }
  /**
   * <pre>
   * 使用本地证件预订票的语言
   * </pre>
   *
   * <code>repeated string LanguageOfGovernmentIssuedPhotoId = 1;</code>
   */
  public int getLanguageOfGovernmentIssuedPhotoIdCount() {
    return languageOfGovernmentIssuedPhotoId_.size();
  }
  /**
   * <pre>
   * 使用本地证件预订票的语言
   * </pre>
   *
   * <code>repeated string LanguageOfGovernmentIssuedPhotoId = 1;</code>
   */
  public java.lang.String getLanguageOfGovernmentIssuedPhotoId(int index) {
    return languageOfGovernmentIssuedPhotoId_.get(index);
  }
  /**
   * <pre>
   * 使用本地证件预订票的语言
   * </pre>
   *
   * <code>repeated string LanguageOfGovernmentIssuedPhotoId = 1;</code>
   */
  public com.google.protobuf.ByteString
      getLanguageOfGovernmentIssuedPhotoIdBytes(int index) {
    return languageOfGovernmentIssuedPhotoId_.getByteString(index);
  }

  public static final int PAYMENTAGENCYMODELINFO_FIELD_NUMBER = 2;
  private com.ctrip.flight.intl.agg.flighttypes.v3.PaymentAgencyModelInfoType paymentAgencyModelInfo_;
  /**
   * <pre>
   * 限制客人使用自身信用卡支付的信息
   * </pre>
   *
   * <code>.com.ctrip.flight.intl.agg.flighttypes.v3.PaymentAgencyModelInfoType PaymentAgencyModelInfo = 2;</code>
   */
  public boolean hasPaymentAgencyModelInfo() {
    return paymentAgencyModelInfo_ != null;
  }
  /**
   * <pre>
   * 限制客人使用自身信用卡支付的信息
   * </pre>
   *
   * <code>.com.ctrip.flight.intl.agg.flighttypes.v3.PaymentAgencyModelInfoType PaymentAgencyModelInfo = 2;</code>
   */
  public com.ctrip.flight.intl.agg.flighttypes.v3.PaymentAgencyModelInfoType getPaymentAgencyModelInfo() {
    return paymentAgencyModelInfo_ == null ? com.ctrip.flight.intl.agg.flighttypes.v3.PaymentAgencyModelInfoType.getDefaultInstance() : paymentAgencyModelInfo_;
  }
  /**
   * <pre>
   * 限制客人使用自身信用卡支付的信息
   * </pre>
   *
   * <code>.com.ctrip.flight.intl.agg.flighttypes.v3.PaymentAgencyModelInfoType PaymentAgencyModelInfo = 2;</code>
   */
  public com.ctrip.flight.intl.agg.flighttypes.v3.PaymentAgencyModelInfoTypeOrBuilder getPaymentAgencyModelInfoOrBuilder() {
    return getPaymentAgencyModelInfo();
  }

  public static final int PASSENGERCOUNTRANGE_FIELD_NUMBER = 3;
  private com.ctrip.flight.intl.agg.flighttypes.v3.IntRangeType passengerCountRange_;
  /**
   * <pre>
   * 票维度的人数范围限制(婴儿不算人头)
   * </pre>
   *
   * <code>.com.ctrip.flight.intl.agg.flighttypes.v3.IntRangeType PassengerCountRange = 3;</code>
   */
  public boolean hasPassengerCountRange() {
    return passengerCountRange_ != null;
  }
  /**
   * <pre>
   * 票维度的人数范围限制(婴儿不算人头)
   * </pre>
   *
   * <code>.com.ctrip.flight.intl.agg.flighttypes.v3.IntRangeType PassengerCountRange = 3;</code>
   */
  public com.ctrip.flight.intl.agg.flighttypes.v3.IntRangeType getPassengerCountRange() {
    return passengerCountRange_ == null ? com.ctrip.flight.intl.agg.flighttypes.v3.IntRangeType.getDefaultInstance() : passengerCountRange_;
  }
  /**
   * <pre>
   * 票维度的人数范围限制(婴儿不算人头)
   * </pre>
   *
   * <code>.com.ctrip.flight.intl.agg.flighttypes.v3.IntRangeType PassengerCountRange = 3;</code>
   */
  public com.ctrip.flight.intl.agg.flighttypes.v3.IntRangeTypeOrBuilder getPassengerCountRangeOrBuilder() {
    return getPassengerCountRange();
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    for (int i = 0; i < languageOfGovernmentIssuedPhotoId_.size(); i++) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, languageOfGovernmentIssuedPhotoId_.getRaw(i));
    }
    if (paymentAgencyModelInfo_ != null) {
      output.writeMessage(2, getPaymentAgencyModelInfo());
    }
    if (passengerCountRange_ != null) {
      output.writeMessage(3, getPassengerCountRange());
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    {
      int dataSize = 0;
      for (int i = 0; i < languageOfGovernmentIssuedPhotoId_.size(); i++) {
        dataSize += computeStringSizeNoTag(languageOfGovernmentIssuedPhotoId_.getRaw(i));
      }
      size += dataSize;
      size += 1 * getLanguageOfGovernmentIssuedPhotoIdList().size();
    }
    if (paymentAgencyModelInfo_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, getPaymentAgencyModelInfo());
    }
    if (passengerCountRange_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, getPassengerCountRange());
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.ctrip.flight.intl.agg.flighttypes.v3.RestrictionType)) {
      return super.equals(obj);
    }
    com.ctrip.flight.intl.agg.flighttypes.v3.RestrictionType other = (com.ctrip.flight.intl.agg.flighttypes.v3.RestrictionType) obj;

    boolean result = true;
    result = result && getLanguageOfGovernmentIssuedPhotoIdList()
        .equals(other.getLanguageOfGovernmentIssuedPhotoIdList());
    result = result && (hasPaymentAgencyModelInfo() == other.hasPaymentAgencyModelInfo());
    if (hasPaymentAgencyModelInfo()) {
      result = result && getPaymentAgencyModelInfo()
          .equals(other.getPaymentAgencyModelInfo());
    }
    result = result && (hasPassengerCountRange() == other.hasPassengerCountRange());
    if (hasPassengerCountRange()) {
      result = result && getPassengerCountRange()
          .equals(other.getPassengerCountRange());
    }
    result = result && unknownFields.equals(other.unknownFields);
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (getLanguageOfGovernmentIssuedPhotoIdCount() > 0) {
      hash = (37 * hash) + LANGUAGEOFGOVERNMENTISSUEDPHOTOID_FIELD_NUMBER;
      hash = (53 * hash) + getLanguageOfGovernmentIssuedPhotoIdList().hashCode();
    }
    if (hasPaymentAgencyModelInfo()) {
      hash = (37 * hash) + PAYMENTAGENCYMODELINFO_FIELD_NUMBER;
      hash = (53 * hash) + getPaymentAgencyModelInfo().hashCode();
    }
    if (hasPassengerCountRange()) {
      hash = (37 * hash) + PASSENGERCOUNTRANGE_FIELD_NUMBER;
      hash = (53 * hash) + getPassengerCountRange().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.ctrip.flight.intl.agg.flighttypes.v3.RestrictionType parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.ctrip.flight.intl.agg.flighttypes.v3.RestrictionType parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.ctrip.flight.intl.agg.flighttypes.v3.RestrictionType parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.ctrip.flight.intl.agg.flighttypes.v3.RestrictionType parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.ctrip.flight.intl.agg.flighttypes.v3.RestrictionType parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.ctrip.flight.intl.agg.flighttypes.v3.RestrictionType parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.ctrip.flight.intl.agg.flighttypes.v3.RestrictionType parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.ctrip.flight.intl.agg.flighttypes.v3.RestrictionType parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.ctrip.flight.intl.agg.flighttypes.v3.RestrictionType parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.ctrip.flight.intl.agg.flighttypes.v3.RestrictionType parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.ctrip.flight.intl.agg.flighttypes.v3.RestrictionType parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.ctrip.flight.intl.agg.flighttypes.v3.RestrictionType parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.ctrip.flight.intl.agg.flighttypes.v3.RestrictionType prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code com.ctrip.flight.intl.agg.flighttypes.v3.RestrictionType}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:com.ctrip.flight.intl.agg.flighttypes.v3.RestrictionType)
      com.ctrip.flight.intl.agg.flighttypes.v3.RestrictionTypeOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.ctrip.flight.intl.agg.flighttypes.v3.AggFlighttypesV3.internal_static_com_ctrip_flight_intl_agg_flighttypes_v3_RestrictionType_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.ctrip.flight.intl.agg.flighttypes.v3.AggFlighttypesV3.internal_static_com_ctrip_flight_intl_agg_flighttypes_v3_RestrictionType_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.ctrip.flight.intl.agg.flighttypes.v3.RestrictionType.class, com.ctrip.flight.intl.agg.flighttypes.v3.RestrictionType.Builder.class);
    }

    // Construct using com.ctrip.flight.intl.agg.flighttypes.v3.RestrictionType.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      languageOfGovernmentIssuedPhotoId_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000001);
      if (paymentAgencyModelInfoBuilder_ == null) {
        paymentAgencyModelInfo_ = null;
      } else {
        paymentAgencyModelInfo_ = null;
        paymentAgencyModelInfoBuilder_ = null;
      }
      if (passengerCountRangeBuilder_ == null) {
        passengerCountRange_ = null;
      } else {
        passengerCountRange_ = null;
        passengerCountRangeBuilder_ = null;
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.ctrip.flight.intl.agg.flighttypes.v3.AggFlighttypesV3.internal_static_com_ctrip_flight_intl_agg_flighttypes_v3_RestrictionType_descriptor;
    }

    @java.lang.Override
    public com.ctrip.flight.intl.agg.flighttypes.v3.RestrictionType getDefaultInstanceForType() {
      return com.ctrip.flight.intl.agg.flighttypes.v3.RestrictionType.getDefaultInstance();
    }

    @java.lang.Override
    public com.ctrip.flight.intl.agg.flighttypes.v3.RestrictionType build() {
      com.ctrip.flight.intl.agg.flighttypes.v3.RestrictionType result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.ctrip.flight.intl.agg.flighttypes.v3.RestrictionType buildPartial() {
      com.ctrip.flight.intl.agg.flighttypes.v3.RestrictionType result = new com.ctrip.flight.intl.agg.flighttypes.v3.RestrictionType(this);
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        languageOfGovernmentIssuedPhotoId_ = languageOfGovernmentIssuedPhotoId_.getUnmodifiableView();
        bitField0_ = (bitField0_ & ~0x00000001);
      }
      result.languageOfGovernmentIssuedPhotoId_ = languageOfGovernmentIssuedPhotoId_;
      if (paymentAgencyModelInfoBuilder_ == null) {
        result.paymentAgencyModelInfo_ = paymentAgencyModelInfo_;
      } else {
        result.paymentAgencyModelInfo_ = paymentAgencyModelInfoBuilder_.build();
      }
      if (passengerCountRangeBuilder_ == null) {
        result.passengerCountRange_ = passengerCountRange_;
      } else {
        result.passengerCountRange_ = passengerCountRangeBuilder_.build();
      }
      result.bitField0_ = to_bitField0_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return (Builder) super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.ctrip.flight.intl.agg.flighttypes.v3.RestrictionType) {
        return mergeFrom((com.ctrip.flight.intl.agg.flighttypes.v3.RestrictionType)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.ctrip.flight.intl.agg.flighttypes.v3.RestrictionType other) {
      if (other == com.ctrip.flight.intl.agg.flighttypes.v3.RestrictionType.getDefaultInstance()) return this;
      if (!other.languageOfGovernmentIssuedPhotoId_.isEmpty()) {
        if (languageOfGovernmentIssuedPhotoId_.isEmpty()) {
          languageOfGovernmentIssuedPhotoId_ = other.languageOfGovernmentIssuedPhotoId_;
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          ensureLanguageOfGovernmentIssuedPhotoIdIsMutable();
          languageOfGovernmentIssuedPhotoId_.addAll(other.languageOfGovernmentIssuedPhotoId_);
        }
        onChanged();
      }
      if (other.hasPaymentAgencyModelInfo()) {
        mergePaymentAgencyModelInfo(other.getPaymentAgencyModelInfo());
      }
      if (other.hasPassengerCountRange()) {
        mergePassengerCountRange(other.getPassengerCountRange());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.ctrip.flight.intl.agg.flighttypes.v3.RestrictionType parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.ctrip.flight.intl.agg.flighttypes.v3.RestrictionType) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private com.google.protobuf.LazyStringList languageOfGovernmentIssuedPhotoId_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    private void ensureLanguageOfGovernmentIssuedPhotoIdIsMutable() {
      if (!((bitField0_ & 0x00000001) == 0x00000001)) {
        languageOfGovernmentIssuedPhotoId_ = new com.google.protobuf.LazyStringArrayList(languageOfGovernmentIssuedPhotoId_);
        bitField0_ |= 0x00000001;
       }
    }
    /**
     * <pre>
     * 使用本地证件预订票的语言
     * </pre>
     *
     * <code>repeated string LanguageOfGovernmentIssuedPhotoId = 1;</code>
     */
    public com.google.protobuf.ProtocolStringList
        getLanguageOfGovernmentIssuedPhotoIdList() {
      return languageOfGovernmentIssuedPhotoId_.getUnmodifiableView();
    }
    /**
     * <pre>
     * 使用本地证件预订票的语言
     * </pre>
     *
     * <code>repeated string LanguageOfGovernmentIssuedPhotoId = 1;</code>
     */
    public int getLanguageOfGovernmentIssuedPhotoIdCount() {
      return languageOfGovernmentIssuedPhotoId_.size();
    }
    /**
     * <pre>
     * 使用本地证件预订票的语言
     * </pre>
     *
     * <code>repeated string LanguageOfGovernmentIssuedPhotoId = 1;</code>
     */
    public java.lang.String getLanguageOfGovernmentIssuedPhotoId(int index) {
      return languageOfGovernmentIssuedPhotoId_.get(index);
    }
    /**
     * <pre>
     * 使用本地证件预订票的语言
     * </pre>
     *
     * <code>repeated string LanguageOfGovernmentIssuedPhotoId = 1;</code>
     */
    public com.google.protobuf.ByteString
        getLanguageOfGovernmentIssuedPhotoIdBytes(int index) {
      return languageOfGovernmentIssuedPhotoId_.getByteString(index);
    }
    /**
     * <pre>
     * 使用本地证件预订票的语言
     * </pre>
     *
     * <code>repeated string LanguageOfGovernmentIssuedPhotoId = 1;</code>
     */
    public Builder setLanguageOfGovernmentIssuedPhotoId(
        int index, java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureLanguageOfGovernmentIssuedPhotoIdIsMutable();
      languageOfGovernmentIssuedPhotoId_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 使用本地证件预订票的语言
     * </pre>
     *
     * <code>repeated string LanguageOfGovernmentIssuedPhotoId = 1;</code>
     */
    public Builder addLanguageOfGovernmentIssuedPhotoId(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureLanguageOfGovernmentIssuedPhotoIdIsMutable();
      languageOfGovernmentIssuedPhotoId_.add(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 使用本地证件预订票的语言
     * </pre>
     *
     * <code>repeated string LanguageOfGovernmentIssuedPhotoId = 1;</code>
     */
    public Builder addAllLanguageOfGovernmentIssuedPhotoId(
        java.lang.Iterable<java.lang.String> values) {
      ensureLanguageOfGovernmentIssuedPhotoIdIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, languageOfGovernmentIssuedPhotoId_);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 使用本地证件预订票的语言
     * </pre>
     *
     * <code>repeated string LanguageOfGovernmentIssuedPhotoId = 1;</code>
     */
    public Builder clearLanguageOfGovernmentIssuedPhotoId() {
      languageOfGovernmentIssuedPhotoId_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 使用本地证件预订票的语言
     * </pre>
     *
     * <code>repeated string LanguageOfGovernmentIssuedPhotoId = 1;</code>
     */
    public Builder addLanguageOfGovernmentIssuedPhotoIdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      ensureLanguageOfGovernmentIssuedPhotoIdIsMutable();
      languageOfGovernmentIssuedPhotoId_.add(value);
      onChanged();
      return this;
    }

    private com.ctrip.flight.intl.agg.flighttypes.v3.PaymentAgencyModelInfoType paymentAgencyModelInfo_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.ctrip.flight.intl.agg.flighttypes.v3.PaymentAgencyModelInfoType, com.ctrip.flight.intl.agg.flighttypes.v3.PaymentAgencyModelInfoType.Builder, com.ctrip.flight.intl.agg.flighttypes.v3.PaymentAgencyModelInfoTypeOrBuilder> paymentAgencyModelInfoBuilder_;
    /**
     * <pre>
     * 限制客人使用自身信用卡支付的信息
     * </pre>
     *
     * <code>.com.ctrip.flight.intl.agg.flighttypes.v3.PaymentAgencyModelInfoType PaymentAgencyModelInfo = 2;</code>
     */
    public boolean hasPaymentAgencyModelInfo() {
      return paymentAgencyModelInfoBuilder_ != null || paymentAgencyModelInfo_ != null;
    }
    /**
     * <pre>
     * 限制客人使用自身信用卡支付的信息
     * </pre>
     *
     * <code>.com.ctrip.flight.intl.agg.flighttypes.v3.PaymentAgencyModelInfoType PaymentAgencyModelInfo = 2;</code>
     */
    public com.ctrip.flight.intl.agg.flighttypes.v3.PaymentAgencyModelInfoType getPaymentAgencyModelInfo() {
      if (paymentAgencyModelInfoBuilder_ == null) {
        return paymentAgencyModelInfo_ == null ? com.ctrip.flight.intl.agg.flighttypes.v3.PaymentAgencyModelInfoType.getDefaultInstance() : paymentAgencyModelInfo_;
      } else {
        return paymentAgencyModelInfoBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * 限制客人使用自身信用卡支付的信息
     * </pre>
     *
     * <code>.com.ctrip.flight.intl.agg.flighttypes.v3.PaymentAgencyModelInfoType PaymentAgencyModelInfo = 2;</code>
     */
    public Builder setPaymentAgencyModelInfo(com.ctrip.flight.intl.agg.flighttypes.v3.PaymentAgencyModelInfoType value) {
      if (paymentAgencyModelInfoBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        paymentAgencyModelInfo_ = value;
        onChanged();
      } else {
        paymentAgencyModelInfoBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * 限制客人使用自身信用卡支付的信息
     * </pre>
     *
     * <code>.com.ctrip.flight.intl.agg.flighttypes.v3.PaymentAgencyModelInfoType PaymentAgencyModelInfo = 2;</code>
     */
    public Builder setPaymentAgencyModelInfo(
        com.ctrip.flight.intl.agg.flighttypes.v3.PaymentAgencyModelInfoType.Builder builderForValue) {
      if (paymentAgencyModelInfoBuilder_ == null) {
        paymentAgencyModelInfo_ = builderForValue.build();
        onChanged();
      } else {
        paymentAgencyModelInfoBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * 限制客人使用自身信用卡支付的信息
     * </pre>
     *
     * <code>.com.ctrip.flight.intl.agg.flighttypes.v3.PaymentAgencyModelInfoType PaymentAgencyModelInfo = 2;</code>
     */
    public Builder mergePaymentAgencyModelInfo(com.ctrip.flight.intl.agg.flighttypes.v3.PaymentAgencyModelInfoType value) {
      if (paymentAgencyModelInfoBuilder_ == null) {
        if (paymentAgencyModelInfo_ != null) {
          paymentAgencyModelInfo_ =
            com.ctrip.flight.intl.agg.flighttypes.v3.PaymentAgencyModelInfoType.newBuilder(paymentAgencyModelInfo_).mergeFrom(value).buildPartial();
        } else {
          paymentAgencyModelInfo_ = value;
        }
        onChanged();
      } else {
        paymentAgencyModelInfoBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * 限制客人使用自身信用卡支付的信息
     * </pre>
     *
     * <code>.com.ctrip.flight.intl.agg.flighttypes.v3.PaymentAgencyModelInfoType PaymentAgencyModelInfo = 2;</code>
     */
    public Builder clearPaymentAgencyModelInfo() {
      if (paymentAgencyModelInfoBuilder_ == null) {
        paymentAgencyModelInfo_ = null;
        onChanged();
      } else {
        paymentAgencyModelInfo_ = null;
        paymentAgencyModelInfoBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * 限制客人使用自身信用卡支付的信息
     * </pre>
     *
     * <code>.com.ctrip.flight.intl.agg.flighttypes.v3.PaymentAgencyModelInfoType PaymentAgencyModelInfo = 2;</code>
     */
    public com.ctrip.flight.intl.agg.flighttypes.v3.PaymentAgencyModelInfoType.Builder getPaymentAgencyModelInfoBuilder() {
      
      onChanged();
      return getPaymentAgencyModelInfoFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * 限制客人使用自身信用卡支付的信息
     * </pre>
     *
     * <code>.com.ctrip.flight.intl.agg.flighttypes.v3.PaymentAgencyModelInfoType PaymentAgencyModelInfo = 2;</code>
     */
    public com.ctrip.flight.intl.agg.flighttypes.v3.PaymentAgencyModelInfoTypeOrBuilder getPaymentAgencyModelInfoOrBuilder() {
      if (paymentAgencyModelInfoBuilder_ != null) {
        return paymentAgencyModelInfoBuilder_.getMessageOrBuilder();
      } else {
        return paymentAgencyModelInfo_ == null ?
            com.ctrip.flight.intl.agg.flighttypes.v3.PaymentAgencyModelInfoType.getDefaultInstance() : paymentAgencyModelInfo_;
      }
    }
    /**
     * <pre>
     * 限制客人使用自身信用卡支付的信息
     * </pre>
     *
     * <code>.com.ctrip.flight.intl.agg.flighttypes.v3.PaymentAgencyModelInfoType PaymentAgencyModelInfo = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.ctrip.flight.intl.agg.flighttypes.v3.PaymentAgencyModelInfoType, com.ctrip.flight.intl.agg.flighttypes.v3.PaymentAgencyModelInfoType.Builder, com.ctrip.flight.intl.agg.flighttypes.v3.PaymentAgencyModelInfoTypeOrBuilder> 
        getPaymentAgencyModelInfoFieldBuilder() {
      if (paymentAgencyModelInfoBuilder_ == null) {
        paymentAgencyModelInfoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.ctrip.flight.intl.agg.flighttypes.v3.PaymentAgencyModelInfoType, com.ctrip.flight.intl.agg.flighttypes.v3.PaymentAgencyModelInfoType.Builder, com.ctrip.flight.intl.agg.flighttypes.v3.PaymentAgencyModelInfoTypeOrBuilder>(
                getPaymentAgencyModelInfo(),
                getParentForChildren(),
                isClean());
        paymentAgencyModelInfo_ = null;
      }
      return paymentAgencyModelInfoBuilder_;
    }

    private com.ctrip.flight.intl.agg.flighttypes.v3.IntRangeType passengerCountRange_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.ctrip.flight.intl.agg.flighttypes.v3.IntRangeType, com.ctrip.flight.intl.agg.flighttypes.v3.IntRangeType.Builder, com.ctrip.flight.intl.agg.flighttypes.v3.IntRangeTypeOrBuilder> passengerCountRangeBuilder_;
    /**
     * <pre>
     * 票维度的人数范围限制(婴儿不算人头)
     * </pre>
     *
     * <code>.com.ctrip.flight.intl.agg.flighttypes.v3.IntRangeType PassengerCountRange = 3;</code>
     */
    public boolean hasPassengerCountRange() {
      return passengerCountRangeBuilder_ != null || passengerCountRange_ != null;
    }
    /**
     * <pre>
     * 票维度的人数范围限制(婴儿不算人头)
     * </pre>
     *
     * <code>.com.ctrip.flight.intl.agg.flighttypes.v3.IntRangeType PassengerCountRange = 3;</code>
     */
    public com.ctrip.flight.intl.agg.flighttypes.v3.IntRangeType getPassengerCountRange() {
      if (passengerCountRangeBuilder_ == null) {
        return passengerCountRange_ == null ? com.ctrip.flight.intl.agg.flighttypes.v3.IntRangeType.getDefaultInstance() : passengerCountRange_;
      } else {
        return passengerCountRangeBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * 票维度的人数范围限制(婴儿不算人头)
     * </pre>
     *
     * <code>.com.ctrip.flight.intl.agg.flighttypes.v3.IntRangeType PassengerCountRange = 3;</code>
     */
    public Builder setPassengerCountRange(com.ctrip.flight.intl.agg.flighttypes.v3.IntRangeType value) {
      if (passengerCountRangeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        passengerCountRange_ = value;
        onChanged();
      } else {
        passengerCountRangeBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * 票维度的人数范围限制(婴儿不算人头)
     * </pre>
     *
     * <code>.com.ctrip.flight.intl.agg.flighttypes.v3.IntRangeType PassengerCountRange = 3;</code>
     */
    public Builder setPassengerCountRange(
        com.ctrip.flight.intl.agg.flighttypes.v3.IntRangeType.Builder builderForValue) {
      if (passengerCountRangeBuilder_ == null) {
        passengerCountRange_ = builderForValue.build();
        onChanged();
      } else {
        passengerCountRangeBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * 票维度的人数范围限制(婴儿不算人头)
     * </pre>
     *
     * <code>.com.ctrip.flight.intl.agg.flighttypes.v3.IntRangeType PassengerCountRange = 3;</code>
     */
    public Builder mergePassengerCountRange(com.ctrip.flight.intl.agg.flighttypes.v3.IntRangeType value) {
      if (passengerCountRangeBuilder_ == null) {
        if (passengerCountRange_ != null) {
          passengerCountRange_ =
            com.ctrip.flight.intl.agg.flighttypes.v3.IntRangeType.newBuilder(passengerCountRange_).mergeFrom(value).buildPartial();
        } else {
          passengerCountRange_ = value;
        }
        onChanged();
      } else {
        passengerCountRangeBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * 票维度的人数范围限制(婴儿不算人头)
     * </pre>
     *
     * <code>.com.ctrip.flight.intl.agg.flighttypes.v3.IntRangeType PassengerCountRange = 3;</code>
     */
    public Builder clearPassengerCountRange() {
      if (passengerCountRangeBuilder_ == null) {
        passengerCountRange_ = null;
        onChanged();
      } else {
        passengerCountRange_ = null;
        passengerCountRangeBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * 票维度的人数范围限制(婴儿不算人头)
     * </pre>
     *
     * <code>.com.ctrip.flight.intl.agg.flighttypes.v3.IntRangeType PassengerCountRange = 3;</code>
     */
    public com.ctrip.flight.intl.agg.flighttypes.v3.IntRangeType.Builder getPassengerCountRangeBuilder() {
      
      onChanged();
      return getPassengerCountRangeFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * 票维度的人数范围限制(婴儿不算人头)
     * </pre>
     *
     * <code>.com.ctrip.flight.intl.agg.flighttypes.v3.IntRangeType PassengerCountRange = 3;</code>
     */
    public com.ctrip.flight.intl.agg.flighttypes.v3.IntRangeTypeOrBuilder getPassengerCountRangeOrBuilder() {
      if (passengerCountRangeBuilder_ != null) {
        return passengerCountRangeBuilder_.getMessageOrBuilder();
      } else {
        return passengerCountRange_ == null ?
            com.ctrip.flight.intl.agg.flighttypes.v3.IntRangeType.getDefaultInstance() : passengerCountRange_;
      }
    }
    /**
     * <pre>
     * 票维度的人数范围限制(婴儿不算人头)
     * </pre>
     *
     * <code>.com.ctrip.flight.intl.agg.flighttypes.v3.IntRangeType PassengerCountRange = 3;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.ctrip.flight.intl.agg.flighttypes.v3.IntRangeType, com.ctrip.flight.intl.agg.flighttypes.v3.IntRangeType.Builder, com.ctrip.flight.intl.agg.flighttypes.v3.IntRangeTypeOrBuilder> 
        getPassengerCountRangeFieldBuilder() {
      if (passengerCountRangeBuilder_ == null) {
        passengerCountRangeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.ctrip.flight.intl.agg.flighttypes.v3.IntRangeType, com.ctrip.flight.intl.agg.flighttypes.v3.IntRangeType.Builder, com.ctrip.flight.intl.agg.flighttypes.v3.IntRangeTypeOrBuilder>(
                getPassengerCountRange(),
                getParentForChildren(),
                isClean());
        passengerCountRange_ = null;
      }
      return passengerCountRangeBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFieldsProto3(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:com.ctrip.flight.intl.agg.flighttypes.v3.RestrictionType)
  }

  // @@protoc_insertion_point(class_scope:com.ctrip.flight.intl.agg.flighttypes.v3.RestrictionType)
  private static final com.ctrip.flight.intl.agg.flighttypes.v3.RestrictionType DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.ctrip.flight.intl.agg.flighttypes.v3.RestrictionType();
  }

  public static com.ctrip.flight.intl.agg.flighttypes.v3.RestrictionType getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<RestrictionType>
      PARSER = new com.google.protobuf.AbstractParser<RestrictionType>() {
    @java.lang.Override
    public RestrictionType parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new RestrictionType(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<RestrictionType> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<RestrictionType> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.ctrip.flight.intl.agg.flighttypes.v3.RestrictionType getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

