// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: agg.flighttypes.v3.proto

package com.ctrip.flight.intl.agg.flighttypes.v3;

/**
 * Protobuf type {@code com.ctrip.flight.intl.agg.flighttypes.v3.BaggageRefType}
 */
public  final class BaggageRefType extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:com.ctrip.flight.intl.agg.flighttypes.v3.BaggageRefType)
    BaggageRefTypeOrBuilder {
private static final long serialVersionUID = 0L;
  // Use BaggageRefType.newBuilder() to construct.
  private BaggageRefType(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private BaggageRefType() {
    segmentNo_ = 0;
    travelerEligibility_ = 0;
    productDetailIndex_ = 0;
    baggage_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private BaggageRefType(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 8: {

            segmentNo_ = input.readInt32();
            break;
          }
          case 16: {
            int rawValue = input.readEnum();

            travelerEligibility_ = rawValue;
            break;
          }
          case 24: {

            productDetailIndex_ = input.readInt32();
            break;
          }
          case 34: {
            if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
              baggage_ = new java.util.ArrayList<com.ctrip.flight.intl.agg.flighttypes.v3.BaggageInfoType>();
              mutable_bitField0_ |= 0x00000008;
            }
            baggage_.add(
                input.readMessage(com.ctrip.flight.intl.agg.flighttypes.v3.BaggageInfoType.parser(), extensionRegistry));
            break;
          }
          default: {
            if (!parseUnknownFieldProto3(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
        baggage_ = java.util.Collections.unmodifiableList(baggage_);
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.ctrip.flight.intl.agg.flighttypes.v3.AggFlighttypesV3.internal_static_com_ctrip_flight_intl_agg_flighttypes_v3_BaggageRefType_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.ctrip.flight.intl.agg.flighttypes.v3.AggFlighttypesV3.internal_static_com_ctrip_flight_intl_agg_flighttypes_v3_BaggageRefType_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.ctrip.flight.intl.agg.flighttypes.v3.BaggageRefType.class, com.ctrip.flight.intl.agg.flighttypes.v3.BaggageRefType.Builder.class);
  }

  private int bitField0_;
  public static final int SEGMENTNO_FIELD_NUMBER = 1;
  private int segmentNo_;
  /**
   * <code>int32 SegmentNo = 1;</code>
   */
  public int getSegmentNo() {
    return segmentNo_;
  }

  public static final int TRAVELERELIGIBILITY_FIELD_NUMBER = 2;
  private int travelerEligibility_;
  /**
   * <pre>
   * 变化 乘客类型替换为资质
   * </pre>
   *
   * <code>.com.ctrip.flight.intl.agg.flighttypes.v3.TravelerEligibilityCodeType TravelerEligibility = 2;</code>
   */
  public int getTravelerEligibilityValue() {
    return travelerEligibility_;
  }
  /**
   * <pre>
   * 变化 乘客类型替换为资质
   * </pre>
   *
   * <code>.com.ctrip.flight.intl.agg.flighttypes.v3.TravelerEligibilityCodeType TravelerEligibility = 2;</code>
   */
  public com.ctrip.flight.intl.agg.flighttypes.v3.TravelerEligibilityCodeType getTravelerEligibility() {
    @SuppressWarnings("deprecation")
    com.ctrip.flight.intl.agg.flighttypes.v3.TravelerEligibilityCodeType result = com.ctrip.flight.intl.agg.flighttypes.v3.TravelerEligibilityCodeType.valueOf(travelerEligibility_);
    return result == null ? com.ctrip.flight.intl.agg.flighttypes.v3.TravelerEligibilityCodeType.UNRECOGNIZED : result;
  }

  public static final int PRODUCTDETAILINDEX_FIELD_NUMBER = 3;
  private int productDetailIndex_;
  /**
   * <pre>
   * TravelerCategoryCodeType TravelerCategoryCode = 3;
   * </pre>
   *
   * <code>int32 ProductDetailIndex = 3;</code>
   */
  public int getProductDetailIndex() {
    return productDetailIndex_;
  }

  public static final int BAGGAGE_FIELD_NUMBER = 4;
  private java.util.List<com.ctrip.flight.intl.agg.flighttypes.v3.BaggageInfoType> baggage_;
  /**
   * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.BaggageInfoType Baggage = 4;</code>
   */
  public java.util.List<com.ctrip.flight.intl.agg.flighttypes.v3.BaggageInfoType> getBaggageList() {
    return baggage_;
  }
  /**
   * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.BaggageInfoType Baggage = 4;</code>
   */
  public java.util.List<? extends com.ctrip.flight.intl.agg.flighttypes.v3.BaggageInfoTypeOrBuilder> 
      getBaggageOrBuilderList() {
    return baggage_;
  }
  /**
   * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.BaggageInfoType Baggage = 4;</code>
   */
  public int getBaggageCount() {
    return baggage_.size();
  }
  /**
   * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.BaggageInfoType Baggage = 4;</code>
   */
  public com.ctrip.flight.intl.agg.flighttypes.v3.BaggageInfoType getBaggage(int index) {
    return baggage_.get(index);
  }
  /**
   * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.BaggageInfoType Baggage = 4;</code>
   */
  public com.ctrip.flight.intl.agg.flighttypes.v3.BaggageInfoTypeOrBuilder getBaggageOrBuilder(
      int index) {
    return baggage_.get(index);
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (segmentNo_ != 0) {
      output.writeInt32(1, segmentNo_);
    }
    if (travelerEligibility_ != com.ctrip.flight.intl.agg.flighttypes.v3.TravelerEligibilityCodeType.ADT.getNumber()) {
      output.writeEnum(2, travelerEligibility_);
    }
    if (productDetailIndex_ != 0) {
      output.writeInt32(3, productDetailIndex_);
    }
    for (int i = 0; i < baggage_.size(); i++) {
      output.writeMessage(4, baggage_.get(i));
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (segmentNo_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(1, segmentNo_);
    }
    if (travelerEligibility_ != com.ctrip.flight.intl.agg.flighttypes.v3.TravelerEligibilityCodeType.ADT.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(2, travelerEligibility_);
    }
    if (productDetailIndex_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(3, productDetailIndex_);
    }
    for (int i = 0; i < baggage_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, baggage_.get(i));
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.ctrip.flight.intl.agg.flighttypes.v3.BaggageRefType)) {
      return super.equals(obj);
    }
    com.ctrip.flight.intl.agg.flighttypes.v3.BaggageRefType other = (com.ctrip.flight.intl.agg.flighttypes.v3.BaggageRefType) obj;

    boolean result = true;
    result = result && (getSegmentNo()
        == other.getSegmentNo());
    result = result && travelerEligibility_ == other.travelerEligibility_;
    result = result && (getProductDetailIndex()
        == other.getProductDetailIndex());
    result = result && getBaggageList()
        .equals(other.getBaggageList());
    result = result && unknownFields.equals(other.unknownFields);
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + SEGMENTNO_FIELD_NUMBER;
    hash = (53 * hash) + getSegmentNo();
    hash = (37 * hash) + TRAVELERELIGIBILITY_FIELD_NUMBER;
    hash = (53 * hash) + travelerEligibility_;
    hash = (37 * hash) + PRODUCTDETAILINDEX_FIELD_NUMBER;
    hash = (53 * hash) + getProductDetailIndex();
    if (getBaggageCount() > 0) {
      hash = (37 * hash) + BAGGAGE_FIELD_NUMBER;
      hash = (53 * hash) + getBaggageList().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.ctrip.flight.intl.agg.flighttypes.v3.BaggageRefType parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.ctrip.flight.intl.agg.flighttypes.v3.BaggageRefType parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.ctrip.flight.intl.agg.flighttypes.v3.BaggageRefType parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.ctrip.flight.intl.agg.flighttypes.v3.BaggageRefType parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.ctrip.flight.intl.agg.flighttypes.v3.BaggageRefType parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.ctrip.flight.intl.agg.flighttypes.v3.BaggageRefType parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.ctrip.flight.intl.agg.flighttypes.v3.BaggageRefType parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.ctrip.flight.intl.agg.flighttypes.v3.BaggageRefType parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.ctrip.flight.intl.agg.flighttypes.v3.BaggageRefType parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.ctrip.flight.intl.agg.flighttypes.v3.BaggageRefType parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.ctrip.flight.intl.agg.flighttypes.v3.BaggageRefType parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.ctrip.flight.intl.agg.flighttypes.v3.BaggageRefType parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.ctrip.flight.intl.agg.flighttypes.v3.BaggageRefType prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code com.ctrip.flight.intl.agg.flighttypes.v3.BaggageRefType}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:com.ctrip.flight.intl.agg.flighttypes.v3.BaggageRefType)
      com.ctrip.flight.intl.agg.flighttypes.v3.BaggageRefTypeOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.ctrip.flight.intl.agg.flighttypes.v3.AggFlighttypesV3.internal_static_com_ctrip_flight_intl_agg_flighttypes_v3_BaggageRefType_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.ctrip.flight.intl.agg.flighttypes.v3.AggFlighttypesV3.internal_static_com_ctrip_flight_intl_agg_flighttypes_v3_BaggageRefType_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.ctrip.flight.intl.agg.flighttypes.v3.BaggageRefType.class, com.ctrip.flight.intl.agg.flighttypes.v3.BaggageRefType.Builder.class);
    }

    // Construct using com.ctrip.flight.intl.agg.flighttypes.v3.BaggageRefType.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getBaggageFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      segmentNo_ = 0;

      travelerEligibility_ = 0;

      productDetailIndex_ = 0;

      if (baggageBuilder_ == null) {
        baggage_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
      } else {
        baggageBuilder_.clear();
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.ctrip.flight.intl.agg.flighttypes.v3.AggFlighttypesV3.internal_static_com_ctrip_flight_intl_agg_flighttypes_v3_BaggageRefType_descriptor;
    }

    @java.lang.Override
    public com.ctrip.flight.intl.agg.flighttypes.v3.BaggageRefType getDefaultInstanceForType() {
      return com.ctrip.flight.intl.agg.flighttypes.v3.BaggageRefType.getDefaultInstance();
    }

    @java.lang.Override
    public com.ctrip.flight.intl.agg.flighttypes.v3.BaggageRefType build() {
      com.ctrip.flight.intl.agg.flighttypes.v3.BaggageRefType result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.ctrip.flight.intl.agg.flighttypes.v3.BaggageRefType buildPartial() {
      com.ctrip.flight.intl.agg.flighttypes.v3.BaggageRefType result = new com.ctrip.flight.intl.agg.flighttypes.v3.BaggageRefType(this);
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      result.segmentNo_ = segmentNo_;
      result.travelerEligibility_ = travelerEligibility_;
      result.productDetailIndex_ = productDetailIndex_;
      if (baggageBuilder_ == null) {
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          baggage_ = java.util.Collections.unmodifiableList(baggage_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.baggage_ = baggage_;
      } else {
        result.baggage_ = baggageBuilder_.build();
      }
      result.bitField0_ = to_bitField0_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return (Builder) super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.ctrip.flight.intl.agg.flighttypes.v3.BaggageRefType) {
        return mergeFrom((com.ctrip.flight.intl.agg.flighttypes.v3.BaggageRefType)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.ctrip.flight.intl.agg.flighttypes.v3.BaggageRefType other) {
      if (other == com.ctrip.flight.intl.agg.flighttypes.v3.BaggageRefType.getDefaultInstance()) return this;
      if (other.getSegmentNo() != 0) {
        setSegmentNo(other.getSegmentNo());
      }
      if (other.travelerEligibility_ != 0) {
        setTravelerEligibilityValue(other.getTravelerEligibilityValue());
      }
      if (other.getProductDetailIndex() != 0) {
        setProductDetailIndex(other.getProductDetailIndex());
      }
      if (baggageBuilder_ == null) {
        if (!other.baggage_.isEmpty()) {
          if (baggage_.isEmpty()) {
            baggage_ = other.baggage_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureBaggageIsMutable();
            baggage_.addAll(other.baggage_);
          }
          onChanged();
        }
      } else {
        if (!other.baggage_.isEmpty()) {
          if (baggageBuilder_.isEmpty()) {
            baggageBuilder_.dispose();
            baggageBuilder_ = null;
            baggage_ = other.baggage_;
            bitField0_ = (bitField0_ & ~0x00000008);
            baggageBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getBaggageFieldBuilder() : null;
          } else {
            baggageBuilder_.addAllMessages(other.baggage_);
          }
        }
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.ctrip.flight.intl.agg.flighttypes.v3.BaggageRefType parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.ctrip.flight.intl.agg.flighttypes.v3.BaggageRefType) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private int segmentNo_ ;
    /**
     * <code>int32 SegmentNo = 1;</code>
     */
    public int getSegmentNo() {
      return segmentNo_;
    }
    /**
     * <code>int32 SegmentNo = 1;</code>
     */
    public Builder setSegmentNo(int value) {
      
      segmentNo_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int32 SegmentNo = 1;</code>
     */
    public Builder clearSegmentNo() {
      
      segmentNo_ = 0;
      onChanged();
      return this;
    }

    private int travelerEligibility_ = 0;
    /**
     * <pre>
     * 变化 乘客类型替换为资质
     * </pre>
     *
     * <code>.com.ctrip.flight.intl.agg.flighttypes.v3.TravelerEligibilityCodeType TravelerEligibility = 2;</code>
     */
    public int getTravelerEligibilityValue() {
      return travelerEligibility_;
    }
    /**
     * <pre>
     * 变化 乘客类型替换为资质
     * </pre>
     *
     * <code>.com.ctrip.flight.intl.agg.flighttypes.v3.TravelerEligibilityCodeType TravelerEligibility = 2;</code>
     */
    public Builder setTravelerEligibilityValue(int value) {
      travelerEligibility_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 变化 乘客类型替换为资质
     * </pre>
     *
     * <code>.com.ctrip.flight.intl.agg.flighttypes.v3.TravelerEligibilityCodeType TravelerEligibility = 2;</code>
     */
    public com.ctrip.flight.intl.agg.flighttypes.v3.TravelerEligibilityCodeType getTravelerEligibility() {
      @SuppressWarnings("deprecation")
      com.ctrip.flight.intl.agg.flighttypes.v3.TravelerEligibilityCodeType result = com.ctrip.flight.intl.agg.flighttypes.v3.TravelerEligibilityCodeType.valueOf(travelerEligibility_);
      return result == null ? com.ctrip.flight.intl.agg.flighttypes.v3.TravelerEligibilityCodeType.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * 变化 乘客类型替换为资质
     * </pre>
     *
     * <code>.com.ctrip.flight.intl.agg.flighttypes.v3.TravelerEligibilityCodeType TravelerEligibility = 2;</code>
     */
    public Builder setTravelerEligibility(com.ctrip.flight.intl.agg.flighttypes.v3.TravelerEligibilityCodeType value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      travelerEligibility_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 变化 乘客类型替换为资质
     * </pre>
     *
     * <code>.com.ctrip.flight.intl.agg.flighttypes.v3.TravelerEligibilityCodeType TravelerEligibility = 2;</code>
     */
    public Builder clearTravelerEligibility() {
      
      travelerEligibility_ = 0;
      onChanged();
      return this;
    }

    private int productDetailIndex_ ;
    /**
     * <pre>
     * TravelerCategoryCodeType TravelerCategoryCode = 3;
     * </pre>
     *
     * <code>int32 ProductDetailIndex = 3;</code>
     */
    public int getProductDetailIndex() {
      return productDetailIndex_;
    }
    /**
     * <pre>
     * TravelerCategoryCodeType TravelerCategoryCode = 3;
     * </pre>
     *
     * <code>int32 ProductDetailIndex = 3;</code>
     */
    public Builder setProductDetailIndex(int value) {
      
      productDetailIndex_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * TravelerCategoryCodeType TravelerCategoryCode = 3;
     * </pre>
     *
     * <code>int32 ProductDetailIndex = 3;</code>
     */
    public Builder clearProductDetailIndex() {
      
      productDetailIndex_ = 0;
      onChanged();
      return this;
    }

    private java.util.List<com.ctrip.flight.intl.agg.flighttypes.v3.BaggageInfoType> baggage_ =
      java.util.Collections.emptyList();
    private void ensureBaggageIsMutable() {
      if (!((bitField0_ & 0x00000008) == 0x00000008)) {
        baggage_ = new java.util.ArrayList<com.ctrip.flight.intl.agg.flighttypes.v3.BaggageInfoType>(baggage_);
        bitField0_ |= 0x00000008;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.ctrip.flight.intl.agg.flighttypes.v3.BaggageInfoType, com.ctrip.flight.intl.agg.flighttypes.v3.BaggageInfoType.Builder, com.ctrip.flight.intl.agg.flighttypes.v3.BaggageInfoTypeOrBuilder> baggageBuilder_;

    /**
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.BaggageInfoType Baggage = 4;</code>
     */
    public java.util.List<com.ctrip.flight.intl.agg.flighttypes.v3.BaggageInfoType> getBaggageList() {
      if (baggageBuilder_ == null) {
        return java.util.Collections.unmodifiableList(baggage_);
      } else {
        return baggageBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.BaggageInfoType Baggage = 4;</code>
     */
    public int getBaggageCount() {
      if (baggageBuilder_ == null) {
        return baggage_.size();
      } else {
        return baggageBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.BaggageInfoType Baggage = 4;</code>
     */
    public com.ctrip.flight.intl.agg.flighttypes.v3.BaggageInfoType getBaggage(int index) {
      if (baggageBuilder_ == null) {
        return baggage_.get(index);
      } else {
        return baggageBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.BaggageInfoType Baggage = 4;</code>
     */
    public Builder setBaggage(
        int index, com.ctrip.flight.intl.agg.flighttypes.v3.BaggageInfoType value) {
      if (baggageBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureBaggageIsMutable();
        baggage_.set(index, value);
        onChanged();
      } else {
        baggageBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.BaggageInfoType Baggage = 4;</code>
     */
    public Builder setBaggage(
        int index, com.ctrip.flight.intl.agg.flighttypes.v3.BaggageInfoType.Builder builderForValue) {
      if (baggageBuilder_ == null) {
        ensureBaggageIsMutable();
        baggage_.set(index, builderForValue.build());
        onChanged();
      } else {
        baggageBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.BaggageInfoType Baggage = 4;</code>
     */
    public Builder addBaggage(com.ctrip.flight.intl.agg.flighttypes.v3.BaggageInfoType value) {
      if (baggageBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureBaggageIsMutable();
        baggage_.add(value);
        onChanged();
      } else {
        baggageBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.BaggageInfoType Baggage = 4;</code>
     */
    public Builder addBaggage(
        int index, com.ctrip.flight.intl.agg.flighttypes.v3.BaggageInfoType value) {
      if (baggageBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureBaggageIsMutable();
        baggage_.add(index, value);
        onChanged();
      } else {
        baggageBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.BaggageInfoType Baggage = 4;</code>
     */
    public Builder addBaggage(
        com.ctrip.flight.intl.agg.flighttypes.v3.BaggageInfoType.Builder builderForValue) {
      if (baggageBuilder_ == null) {
        ensureBaggageIsMutable();
        baggage_.add(builderForValue.build());
        onChanged();
      } else {
        baggageBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.BaggageInfoType Baggage = 4;</code>
     */
    public Builder addBaggage(
        int index, com.ctrip.flight.intl.agg.flighttypes.v3.BaggageInfoType.Builder builderForValue) {
      if (baggageBuilder_ == null) {
        ensureBaggageIsMutable();
        baggage_.add(index, builderForValue.build());
        onChanged();
      } else {
        baggageBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.BaggageInfoType Baggage = 4;</code>
     */
    public Builder addAllBaggage(
        java.lang.Iterable<? extends com.ctrip.flight.intl.agg.flighttypes.v3.BaggageInfoType> values) {
      if (baggageBuilder_ == null) {
        ensureBaggageIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, baggage_);
        onChanged();
      } else {
        baggageBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.BaggageInfoType Baggage = 4;</code>
     */
    public Builder clearBaggage() {
      if (baggageBuilder_ == null) {
        baggage_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
      } else {
        baggageBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.BaggageInfoType Baggage = 4;</code>
     */
    public Builder removeBaggage(int index) {
      if (baggageBuilder_ == null) {
        ensureBaggageIsMutable();
        baggage_.remove(index);
        onChanged();
      } else {
        baggageBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.BaggageInfoType Baggage = 4;</code>
     */
    public com.ctrip.flight.intl.agg.flighttypes.v3.BaggageInfoType.Builder getBaggageBuilder(
        int index) {
      return getBaggageFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.BaggageInfoType Baggage = 4;</code>
     */
    public com.ctrip.flight.intl.agg.flighttypes.v3.BaggageInfoTypeOrBuilder getBaggageOrBuilder(
        int index) {
      if (baggageBuilder_ == null) {
        return baggage_.get(index);  } else {
        return baggageBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.BaggageInfoType Baggage = 4;</code>
     */
    public java.util.List<? extends com.ctrip.flight.intl.agg.flighttypes.v3.BaggageInfoTypeOrBuilder> 
         getBaggageOrBuilderList() {
      if (baggageBuilder_ != null) {
        return baggageBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(baggage_);
      }
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.BaggageInfoType Baggage = 4;</code>
     */
    public com.ctrip.flight.intl.agg.flighttypes.v3.BaggageInfoType.Builder addBaggageBuilder() {
      return getBaggageFieldBuilder().addBuilder(
          com.ctrip.flight.intl.agg.flighttypes.v3.BaggageInfoType.getDefaultInstance());
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.BaggageInfoType Baggage = 4;</code>
     */
    public com.ctrip.flight.intl.agg.flighttypes.v3.BaggageInfoType.Builder addBaggageBuilder(
        int index) {
      return getBaggageFieldBuilder().addBuilder(
          index, com.ctrip.flight.intl.agg.flighttypes.v3.BaggageInfoType.getDefaultInstance());
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.BaggageInfoType Baggage = 4;</code>
     */
    public java.util.List<com.ctrip.flight.intl.agg.flighttypes.v3.BaggageInfoType.Builder> 
         getBaggageBuilderList() {
      return getBaggageFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.ctrip.flight.intl.agg.flighttypes.v3.BaggageInfoType, com.ctrip.flight.intl.agg.flighttypes.v3.BaggageInfoType.Builder, com.ctrip.flight.intl.agg.flighttypes.v3.BaggageInfoTypeOrBuilder> 
        getBaggageFieldBuilder() {
      if (baggageBuilder_ == null) {
        baggageBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.ctrip.flight.intl.agg.flighttypes.v3.BaggageInfoType, com.ctrip.flight.intl.agg.flighttypes.v3.BaggageInfoType.Builder, com.ctrip.flight.intl.agg.flighttypes.v3.BaggageInfoTypeOrBuilder>(
                baggage_,
                ((bitField0_ & 0x00000008) == 0x00000008),
                getParentForChildren(),
                isClean());
        baggage_ = null;
      }
      return baggageBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFieldsProto3(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:com.ctrip.flight.intl.agg.flighttypes.v3.BaggageRefType)
  }

  // @@protoc_insertion_point(class_scope:com.ctrip.flight.intl.agg.flighttypes.v3.BaggageRefType)
  private static final com.ctrip.flight.intl.agg.flighttypes.v3.BaggageRefType DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.ctrip.flight.intl.agg.flighttypes.v3.BaggageRefType();
  }

  public static com.ctrip.flight.intl.agg.flighttypes.v3.BaggageRefType getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<BaggageRefType>
      PARSER = new com.google.protobuf.AbstractParser<BaggageRefType>() {
    @java.lang.Override
    public BaggageRefType parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new BaggageRefType(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<BaggageRefType> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<BaggageRefType> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.ctrip.flight.intl.agg.flighttypes.v3.BaggageRefType getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

