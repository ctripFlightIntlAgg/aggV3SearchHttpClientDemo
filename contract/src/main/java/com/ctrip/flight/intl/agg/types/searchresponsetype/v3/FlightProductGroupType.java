// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: agg.types.searchresponsetype.v3.proto

package com.ctrip.flight.intl.agg.types.searchresponsetype.v3;

/**
 * Protobuf type {@code com.ctrip.flight.intl.agg.types.searchresponsetype.v3.FlightProductGroupType}
 */
public  final class FlightProductGroupType extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:com.ctrip.flight.intl.agg.types.searchresponsetype.v3.FlightProductGroupType)
    FlightProductGroupTypeOrBuilder {
private static final long serialVersionUID = 0L;
  // Use FlightProductGroupType.newBuilder() to construct.
  private FlightProductGroupType(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private FlightProductGroupType() {
    flightRefCombination_ = java.util.Collections.emptyList();
    price_ = java.util.Collections.emptyList();
    tag_ = java.util.Collections.emptyList();
    virtualFlightRemark_ = java.util.Collections.emptyList();
    hasMoreGrade_ = false;
    flyerFlag_ = 0;
    unaccompaniedAgeRange_ = "";
    flag_ = "";
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private FlightProductGroupType(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
              flightRefCombination_ = new java.util.ArrayList<com.ctrip.flight.intl.agg.types.searchresponsetype.v3.FlightRefType>();
              mutable_bitField0_ |= 0x00000001;
            }
            flightRefCombination_.add(
                input.readMessage(com.ctrip.flight.intl.agg.types.searchresponsetype.v3.FlightRefType.parser(), extensionRegistry));
            break;
          }
          case 18: {
            if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
              price_ = new java.util.ArrayList<com.ctrip.flight.intl.agg.types.searchresponsetype.v3.PriceType>();
              mutable_bitField0_ |= 0x00000002;
            }
            price_.add(
                input.readMessage(com.ctrip.flight.intl.agg.types.searchresponsetype.v3.PriceType.parser(), extensionRegistry));
            break;
          }
          case 34: {
            if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
              tag_ = new java.util.ArrayList<com.ctrip.flight.intl.agg.flighttypes.v3.KeyValuePairType>();
              mutable_bitField0_ |= 0x00000004;
            }
            tag_.add(
                input.readMessage(com.ctrip.flight.intl.agg.flighttypes.v3.KeyValuePairType.parser(), extensionRegistry));
            break;
          }
          case 58: {
            if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
              virtualFlightRemark_ = new java.util.ArrayList<com.ctrip.flight.intl.agg.flighttypes.v3.VirtualFlightRemarkType>();
              mutable_bitField0_ |= 0x00000008;
            }
            virtualFlightRemark_.add(
                input.readMessage(com.ctrip.flight.intl.agg.flighttypes.v3.VirtualFlightRemarkType.parser(), extensionRegistry));
            break;
          }
          case 64: {

            hasMoreGrade_ = input.readBool();
            break;
          }
          case 72: {

            flyerFlag_ = input.readInt32();
            break;
          }
          case 82: {
            java.lang.String s = input.readStringRequireUtf8();

            unaccompaniedAgeRange_ = s;
            break;
          }
          case 90: {
            java.lang.String s = input.readStringRequireUtf8();

            flag_ = s;
            break;
          }
          default: {
            if (!parseUnknownFieldProto3(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
        flightRefCombination_ = java.util.Collections.unmodifiableList(flightRefCombination_);
      }
      if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
        price_ = java.util.Collections.unmodifiableList(price_);
      }
      if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
        tag_ = java.util.Collections.unmodifiableList(tag_);
      }
      if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
        virtualFlightRemark_ = java.util.Collections.unmodifiableList(virtualFlightRemark_);
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.ctrip.flight.intl.agg.types.searchresponsetype.v3.AggTypesSearchresponsetypeV3.internal_static_com_ctrip_flight_intl_agg_types_searchresponsetype_v3_FlightProductGroupType_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.ctrip.flight.intl.agg.types.searchresponsetype.v3.AggTypesSearchresponsetypeV3.internal_static_com_ctrip_flight_intl_agg_types_searchresponsetype_v3_FlightProductGroupType_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.ctrip.flight.intl.agg.types.searchresponsetype.v3.FlightProductGroupType.class, com.ctrip.flight.intl.agg.types.searchresponsetype.v3.FlightProductGroupType.Builder.class);
  }

  private int bitField0_;
  public static final int FLIGHTREFCOMBINATION_FIELD_NUMBER = 1;
  private java.util.List<com.ctrip.flight.intl.agg.types.searchresponsetype.v3.FlightRefType> flightRefCombination_;
  /**
   * <code>repeated .com.ctrip.flight.intl.agg.types.searchresponsetype.v3.FlightRefType FlightRefCombination = 1;</code>
   */
  public java.util.List<com.ctrip.flight.intl.agg.types.searchresponsetype.v3.FlightRefType> getFlightRefCombinationList() {
    return flightRefCombination_;
  }
  /**
   * <code>repeated .com.ctrip.flight.intl.agg.types.searchresponsetype.v3.FlightRefType FlightRefCombination = 1;</code>
   */
  public java.util.List<? extends com.ctrip.flight.intl.agg.types.searchresponsetype.v3.FlightRefTypeOrBuilder> 
      getFlightRefCombinationOrBuilderList() {
    return flightRefCombination_;
  }
  /**
   * <code>repeated .com.ctrip.flight.intl.agg.types.searchresponsetype.v3.FlightRefType FlightRefCombination = 1;</code>
   */
  public int getFlightRefCombinationCount() {
    return flightRefCombination_.size();
  }
  /**
   * <code>repeated .com.ctrip.flight.intl.agg.types.searchresponsetype.v3.FlightRefType FlightRefCombination = 1;</code>
   */
  public com.ctrip.flight.intl.agg.types.searchresponsetype.v3.FlightRefType getFlightRefCombination(int index) {
    return flightRefCombination_.get(index);
  }
  /**
   * <code>repeated .com.ctrip.flight.intl.agg.types.searchresponsetype.v3.FlightRefType FlightRefCombination = 1;</code>
   */
  public com.ctrip.flight.intl.agg.types.searchresponsetype.v3.FlightRefTypeOrBuilder getFlightRefCombinationOrBuilder(
      int index) {
    return flightRefCombination_.get(index);
  }

  public static final int PRICE_FIELD_NUMBER = 2;
  private java.util.List<com.ctrip.flight.intl.agg.types.searchresponsetype.v3.PriceType> price_;
  /**
   * <code>repeated .com.ctrip.flight.intl.agg.types.searchresponsetype.v3.PriceType Price = 2;</code>
   */
  public java.util.List<com.ctrip.flight.intl.agg.types.searchresponsetype.v3.PriceType> getPriceList() {
    return price_;
  }
  /**
   * <code>repeated .com.ctrip.flight.intl.agg.types.searchresponsetype.v3.PriceType Price = 2;</code>
   */
  public java.util.List<? extends com.ctrip.flight.intl.agg.types.searchresponsetype.v3.PriceTypeOrBuilder> 
      getPriceOrBuilderList() {
    return price_;
  }
  /**
   * <code>repeated .com.ctrip.flight.intl.agg.types.searchresponsetype.v3.PriceType Price = 2;</code>
   */
  public int getPriceCount() {
    return price_.size();
  }
  /**
   * <code>repeated .com.ctrip.flight.intl.agg.types.searchresponsetype.v3.PriceType Price = 2;</code>
   */
  public com.ctrip.flight.intl.agg.types.searchresponsetype.v3.PriceType getPrice(int index) {
    return price_.get(index);
  }
  /**
   * <code>repeated .com.ctrip.flight.intl.agg.types.searchresponsetype.v3.PriceType Price = 2;</code>
   */
  public com.ctrip.flight.intl.agg.types.searchresponsetype.v3.PriceTypeOrBuilder getPriceOrBuilder(
      int index) {
    return price_.get(index);
  }

  public static final int TAG_FIELD_NUMBER = 4;
  private java.util.List<com.ctrip.flight.intl.agg.flighttypes.v3.KeyValuePairType> tag_;
  /**
   * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.KeyValuePairType Tag = 4;</code>
   */
  public java.util.List<com.ctrip.flight.intl.agg.flighttypes.v3.KeyValuePairType> getTagList() {
    return tag_;
  }
  /**
   * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.KeyValuePairType Tag = 4;</code>
   */
  public java.util.List<? extends com.ctrip.flight.intl.agg.flighttypes.v3.KeyValuePairTypeOrBuilder> 
      getTagOrBuilderList() {
    return tag_;
  }
  /**
   * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.KeyValuePairType Tag = 4;</code>
   */
  public int getTagCount() {
    return tag_.size();
  }
  /**
   * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.KeyValuePairType Tag = 4;</code>
   */
  public com.ctrip.flight.intl.agg.flighttypes.v3.KeyValuePairType getTag(int index) {
    return tag_.get(index);
  }
  /**
   * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.KeyValuePairType Tag = 4;</code>
   */
  public com.ctrip.flight.intl.agg.flighttypes.v3.KeyValuePairTypeOrBuilder getTagOrBuilder(
      int index) {
    return tag_.get(index);
  }

  public static final int VIRTUALFLIGHTREMARK_FIELD_NUMBER = 7;
  private java.util.List<com.ctrip.flight.intl.agg.flighttypes.v3.VirtualFlightRemarkType> virtualFlightRemark_;
  /**
   * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.VirtualFlightRemarkType VirtualFlightRemark = 7;</code>
   */
  public java.util.List<com.ctrip.flight.intl.agg.flighttypes.v3.VirtualFlightRemarkType> getVirtualFlightRemarkList() {
    return virtualFlightRemark_;
  }
  /**
   * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.VirtualFlightRemarkType VirtualFlightRemark = 7;</code>
   */
  public java.util.List<? extends com.ctrip.flight.intl.agg.flighttypes.v3.VirtualFlightRemarkTypeOrBuilder> 
      getVirtualFlightRemarkOrBuilderList() {
    return virtualFlightRemark_;
  }
  /**
   * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.VirtualFlightRemarkType VirtualFlightRemark = 7;</code>
   */
  public int getVirtualFlightRemarkCount() {
    return virtualFlightRemark_.size();
  }
  /**
   * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.VirtualFlightRemarkType VirtualFlightRemark = 7;</code>
   */
  public com.ctrip.flight.intl.agg.flighttypes.v3.VirtualFlightRemarkType getVirtualFlightRemark(int index) {
    return virtualFlightRemark_.get(index);
  }
  /**
   * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.VirtualFlightRemarkType VirtualFlightRemark = 7;</code>
   */
  public com.ctrip.flight.intl.agg.flighttypes.v3.VirtualFlightRemarkTypeOrBuilder getVirtualFlightRemarkOrBuilder(
      int index) {
    return virtualFlightRemark_.get(index);
  }

  public static final int HASMOREGRADE_FIELD_NUMBER = 8;
  private boolean hasMoreGrade_;
  /**
   * <pre>
   *变化 删除flightProductGroupID
   * </pre>
   *
   * <code>bool hasMoreGrade = 8;</code>
   */
  public boolean getHasMoreGrade() {
    return hasMoreGrade_;
  }

  public static final int FLYERFLAG_FIELD_NUMBER = 9;
  private int flyerFlag_;
  /**
   * <pre>
   *None=0
   *FlyerOrderVisible=1
   *FlyerOrderInvisible=2
   *FlyerOrderRapid=3
   * </pre>
   *
   * <code>int32 FlyerFlag = 9;</code>
   */
  public int getFlyerFlag() {
    return flyerFlag_;
  }

  public static final int UNACCOMPANIEDAGERANGE_FIELD_NUMBER = 10;
  private volatile java.lang.Object unaccompaniedAgeRange_;
  /**
   * <pre>
   * 变化 从PriceType中移动过来
   * </pre>
   *
   * <code>string UnaccompaniedAgeRange = 10;</code>
   */
  public java.lang.String getUnaccompaniedAgeRange() {
    java.lang.Object ref = unaccompaniedAgeRange_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      unaccompaniedAgeRange_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * 变化 从PriceType中移动过来
   * </pre>
   *
   * <code>string UnaccompaniedAgeRange = 10;</code>
   */
  public com.google.protobuf.ByteString
      getUnaccompaniedAgeRangeBytes() {
    java.lang.Object ref = unaccompaniedAgeRange_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      unaccompaniedAgeRange_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int FLAG_FIELD_NUMBER = 11;
  private volatile java.lang.Object flag_;
  /**
   * <pre>
   * 新增
   * </pre>
   *
   * <code>string Flag = 11;</code>
   */
  public java.lang.String getFlag() {
    java.lang.Object ref = flag_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      flag_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * 新增
   * </pre>
   *
   * <code>string Flag = 11;</code>
   */
  public com.google.protobuf.ByteString
      getFlagBytes() {
    java.lang.Object ref = flag_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      flag_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    for (int i = 0; i < flightRefCombination_.size(); i++) {
      output.writeMessage(1, flightRefCombination_.get(i));
    }
    for (int i = 0; i < price_.size(); i++) {
      output.writeMessage(2, price_.get(i));
    }
    for (int i = 0; i < tag_.size(); i++) {
      output.writeMessage(4, tag_.get(i));
    }
    for (int i = 0; i < virtualFlightRemark_.size(); i++) {
      output.writeMessage(7, virtualFlightRemark_.get(i));
    }
    if (hasMoreGrade_ != false) {
      output.writeBool(8, hasMoreGrade_);
    }
    if (flyerFlag_ != 0) {
      output.writeInt32(9, flyerFlag_);
    }
    if (!getUnaccompaniedAgeRangeBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 10, unaccompaniedAgeRange_);
    }
    if (!getFlagBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 11, flag_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    for (int i = 0; i < flightRefCombination_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, flightRefCombination_.get(i));
    }
    for (int i = 0; i < price_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, price_.get(i));
    }
    for (int i = 0; i < tag_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, tag_.get(i));
    }
    for (int i = 0; i < virtualFlightRemark_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(7, virtualFlightRemark_.get(i));
    }
    if (hasMoreGrade_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(8, hasMoreGrade_);
    }
    if (flyerFlag_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(9, flyerFlag_);
    }
    if (!getUnaccompaniedAgeRangeBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(10, unaccompaniedAgeRange_);
    }
    if (!getFlagBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(11, flag_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.ctrip.flight.intl.agg.types.searchresponsetype.v3.FlightProductGroupType)) {
      return super.equals(obj);
    }
    com.ctrip.flight.intl.agg.types.searchresponsetype.v3.FlightProductGroupType other = (com.ctrip.flight.intl.agg.types.searchresponsetype.v3.FlightProductGroupType) obj;

    boolean result = true;
    result = result && getFlightRefCombinationList()
        .equals(other.getFlightRefCombinationList());
    result = result && getPriceList()
        .equals(other.getPriceList());
    result = result && getTagList()
        .equals(other.getTagList());
    result = result && getVirtualFlightRemarkList()
        .equals(other.getVirtualFlightRemarkList());
    result = result && (getHasMoreGrade()
        == other.getHasMoreGrade());
    result = result && (getFlyerFlag()
        == other.getFlyerFlag());
    result = result && getUnaccompaniedAgeRange()
        .equals(other.getUnaccompaniedAgeRange());
    result = result && getFlag()
        .equals(other.getFlag());
    result = result && unknownFields.equals(other.unknownFields);
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (getFlightRefCombinationCount() > 0) {
      hash = (37 * hash) + FLIGHTREFCOMBINATION_FIELD_NUMBER;
      hash = (53 * hash) + getFlightRefCombinationList().hashCode();
    }
    if (getPriceCount() > 0) {
      hash = (37 * hash) + PRICE_FIELD_NUMBER;
      hash = (53 * hash) + getPriceList().hashCode();
    }
    if (getTagCount() > 0) {
      hash = (37 * hash) + TAG_FIELD_NUMBER;
      hash = (53 * hash) + getTagList().hashCode();
    }
    if (getVirtualFlightRemarkCount() > 0) {
      hash = (37 * hash) + VIRTUALFLIGHTREMARK_FIELD_NUMBER;
      hash = (53 * hash) + getVirtualFlightRemarkList().hashCode();
    }
    hash = (37 * hash) + HASMOREGRADE_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getHasMoreGrade());
    hash = (37 * hash) + FLYERFLAG_FIELD_NUMBER;
    hash = (53 * hash) + getFlyerFlag();
    hash = (37 * hash) + UNACCOMPANIEDAGERANGE_FIELD_NUMBER;
    hash = (53 * hash) + getUnaccompaniedAgeRange().hashCode();
    hash = (37 * hash) + FLAG_FIELD_NUMBER;
    hash = (53 * hash) + getFlag().hashCode();
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.ctrip.flight.intl.agg.types.searchresponsetype.v3.FlightProductGroupType parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.ctrip.flight.intl.agg.types.searchresponsetype.v3.FlightProductGroupType parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.ctrip.flight.intl.agg.types.searchresponsetype.v3.FlightProductGroupType parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.ctrip.flight.intl.agg.types.searchresponsetype.v3.FlightProductGroupType parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.ctrip.flight.intl.agg.types.searchresponsetype.v3.FlightProductGroupType parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.ctrip.flight.intl.agg.types.searchresponsetype.v3.FlightProductGroupType parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.ctrip.flight.intl.agg.types.searchresponsetype.v3.FlightProductGroupType parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.ctrip.flight.intl.agg.types.searchresponsetype.v3.FlightProductGroupType parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.ctrip.flight.intl.agg.types.searchresponsetype.v3.FlightProductGroupType parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.ctrip.flight.intl.agg.types.searchresponsetype.v3.FlightProductGroupType parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.ctrip.flight.intl.agg.types.searchresponsetype.v3.FlightProductGroupType parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.ctrip.flight.intl.agg.types.searchresponsetype.v3.FlightProductGroupType parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.ctrip.flight.intl.agg.types.searchresponsetype.v3.FlightProductGroupType prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code com.ctrip.flight.intl.agg.types.searchresponsetype.v3.FlightProductGroupType}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:com.ctrip.flight.intl.agg.types.searchresponsetype.v3.FlightProductGroupType)
      com.ctrip.flight.intl.agg.types.searchresponsetype.v3.FlightProductGroupTypeOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.ctrip.flight.intl.agg.types.searchresponsetype.v3.AggTypesSearchresponsetypeV3.internal_static_com_ctrip_flight_intl_agg_types_searchresponsetype_v3_FlightProductGroupType_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.ctrip.flight.intl.agg.types.searchresponsetype.v3.AggTypesSearchresponsetypeV3.internal_static_com_ctrip_flight_intl_agg_types_searchresponsetype_v3_FlightProductGroupType_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.ctrip.flight.intl.agg.types.searchresponsetype.v3.FlightProductGroupType.class, com.ctrip.flight.intl.agg.types.searchresponsetype.v3.FlightProductGroupType.Builder.class);
    }

    // Construct using com.ctrip.flight.intl.agg.types.searchresponsetype.v3.FlightProductGroupType.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getFlightRefCombinationFieldBuilder();
        getPriceFieldBuilder();
        getTagFieldBuilder();
        getVirtualFlightRemarkFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      if (flightRefCombinationBuilder_ == null) {
        flightRefCombination_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
      } else {
        flightRefCombinationBuilder_.clear();
      }
      if (priceBuilder_ == null) {
        price_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
      } else {
        priceBuilder_.clear();
      }
      if (tagBuilder_ == null) {
        tag_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
      } else {
        tagBuilder_.clear();
      }
      if (virtualFlightRemarkBuilder_ == null) {
        virtualFlightRemark_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
      } else {
        virtualFlightRemarkBuilder_.clear();
      }
      hasMoreGrade_ = false;

      flyerFlag_ = 0;

      unaccompaniedAgeRange_ = "";

      flag_ = "";

      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.ctrip.flight.intl.agg.types.searchresponsetype.v3.AggTypesSearchresponsetypeV3.internal_static_com_ctrip_flight_intl_agg_types_searchresponsetype_v3_FlightProductGroupType_descriptor;
    }

    @java.lang.Override
    public com.ctrip.flight.intl.agg.types.searchresponsetype.v3.FlightProductGroupType getDefaultInstanceForType() {
      return com.ctrip.flight.intl.agg.types.searchresponsetype.v3.FlightProductGroupType.getDefaultInstance();
    }

    @java.lang.Override
    public com.ctrip.flight.intl.agg.types.searchresponsetype.v3.FlightProductGroupType build() {
      com.ctrip.flight.intl.agg.types.searchresponsetype.v3.FlightProductGroupType result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.ctrip.flight.intl.agg.types.searchresponsetype.v3.FlightProductGroupType buildPartial() {
      com.ctrip.flight.intl.agg.types.searchresponsetype.v3.FlightProductGroupType result = new com.ctrip.flight.intl.agg.types.searchresponsetype.v3.FlightProductGroupType(this);
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (flightRefCombinationBuilder_ == null) {
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          flightRefCombination_ = java.util.Collections.unmodifiableList(flightRefCombination_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.flightRefCombination_ = flightRefCombination_;
      } else {
        result.flightRefCombination_ = flightRefCombinationBuilder_.build();
      }
      if (priceBuilder_ == null) {
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          price_ = java.util.Collections.unmodifiableList(price_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.price_ = price_;
      } else {
        result.price_ = priceBuilder_.build();
      }
      if (tagBuilder_ == null) {
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          tag_ = java.util.Collections.unmodifiableList(tag_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.tag_ = tag_;
      } else {
        result.tag_ = tagBuilder_.build();
      }
      if (virtualFlightRemarkBuilder_ == null) {
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          virtualFlightRemark_ = java.util.Collections.unmodifiableList(virtualFlightRemark_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.virtualFlightRemark_ = virtualFlightRemark_;
      } else {
        result.virtualFlightRemark_ = virtualFlightRemarkBuilder_.build();
      }
      result.hasMoreGrade_ = hasMoreGrade_;
      result.flyerFlag_ = flyerFlag_;
      result.unaccompaniedAgeRange_ = unaccompaniedAgeRange_;
      result.flag_ = flag_;
      result.bitField0_ = to_bitField0_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return (Builder) super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.ctrip.flight.intl.agg.types.searchresponsetype.v3.FlightProductGroupType) {
        return mergeFrom((com.ctrip.flight.intl.agg.types.searchresponsetype.v3.FlightProductGroupType)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.ctrip.flight.intl.agg.types.searchresponsetype.v3.FlightProductGroupType other) {
      if (other == com.ctrip.flight.intl.agg.types.searchresponsetype.v3.FlightProductGroupType.getDefaultInstance()) return this;
      if (flightRefCombinationBuilder_ == null) {
        if (!other.flightRefCombination_.isEmpty()) {
          if (flightRefCombination_.isEmpty()) {
            flightRefCombination_ = other.flightRefCombination_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureFlightRefCombinationIsMutable();
            flightRefCombination_.addAll(other.flightRefCombination_);
          }
          onChanged();
        }
      } else {
        if (!other.flightRefCombination_.isEmpty()) {
          if (flightRefCombinationBuilder_.isEmpty()) {
            flightRefCombinationBuilder_.dispose();
            flightRefCombinationBuilder_ = null;
            flightRefCombination_ = other.flightRefCombination_;
            bitField0_ = (bitField0_ & ~0x00000001);
            flightRefCombinationBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getFlightRefCombinationFieldBuilder() : null;
          } else {
            flightRefCombinationBuilder_.addAllMessages(other.flightRefCombination_);
          }
        }
      }
      if (priceBuilder_ == null) {
        if (!other.price_.isEmpty()) {
          if (price_.isEmpty()) {
            price_ = other.price_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensurePriceIsMutable();
            price_.addAll(other.price_);
          }
          onChanged();
        }
      } else {
        if (!other.price_.isEmpty()) {
          if (priceBuilder_.isEmpty()) {
            priceBuilder_.dispose();
            priceBuilder_ = null;
            price_ = other.price_;
            bitField0_ = (bitField0_ & ~0x00000002);
            priceBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getPriceFieldBuilder() : null;
          } else {
            priceBuilder_.addAllMessages(other.price_);
          }
        }
      }
      if (tagBuilder_ == null) {
        if (!other.tag_.isEmpty()) {
          if (tag_.isEmpty()) {
            tag_ = other.tag_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureTagIsMutable();
            tag_.addAll(other.tag_);
          }
          onChanged();
        }
      } else {
        if (!other.tag_.isEmpty()) {
          if (tagBuilder_.isEmpty()) {
            tagBuilder_.dispose();
            tagBuilder_ = null;
            tag_ = other.tag_;
            bitField0_ = (bitField0_ & ~0x00000004);
            tagBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getTagFieldBuilder() : null;
          } else {
            tagBuilder_.addAllMessages(other.tag_);
          }
        }
      }
      if (virtualFlightRemarkBuilder_ == null) {
        if (!other.virtualFlightRemark_.isEmpty()) {
          if (virtualFlightRemark_.isEmpty()) {
            virtualFlightRemark_ = other.virtualFlightRemark_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureVirtualFlightRemarkIsMutable();
            virtualFlightRemark_.addAll(other.virtualFlightRemark_);
          }
          onChanged();
        }
      } else {
        if (!other.virtualFlightRemark_.isEmpty()) {
          if (virtualFlightRemarkBuilder_.isEmpty()) {
            virtualFlightRemarkBuilder_.dispose();
            virtualFlightRemarkBuilder_ = null;
            virtualFlightRemark_ = other.virtualFlightRemark_;
            bitField0_ = (bitField0_ & ~0x00000008);
            virtualFlightRemarkBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getVirtualFlightRemarkFieldBuilder() : null;
          } else {
            virtualFlightRemarkBuilder_.addAllMessages(other.virtualFlightRemark_);
          }
        }
      }
      if (other.getHasMoreGrade() != false) {
        setHasMoreGrade(other.getHasMoreGrade());
      }
      if (other.getFlyerFlag() != 0) {
        setFlyerFlag(other.getFlyerFlag());
      }
      if (!other.getUnaccompaniedAgeRange().isEmpty()) {
        unaccompaniedAgeRange_ = other.unaccompaniedAgeRange_;
        onChanged();
      }
      if (!other.getFlag().isEmpty()) {
        flag_ = other.flag_;
        onChanged();
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.ctrip.flight.intl.agg.types.searchresponsetype.v3.FlightProductGroupType parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.ctrip.flight.intl.agg.types.searchresponsetype.v3.FlightProductGroupType) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private java.util.List<com.ctrip.flight.intl.agg.types.searchresponsetype.v3.FlightRefType> flightRefCombination_ =
      java.util.Collections.emptyList();
    private void ensureFlightRefCombinationIsMutable() {
      if (!((bitField0_ & 0x00000001) == 0x00000001)) {
        flightRefCombination_ = new java.util.ArrayList<com.ctrip.flight.intl.agg.types.searchresponsetype.v3.FlightRefType>(flightRefCombination_);
        bitField0_ |= 0x00000001;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.ctrip.flight.intl.agg.types.searchresponsetype.v3.FlightRefType, com.ctrip.flight.intl.agg.types.searchresponsetype.v3.FlightRefType.Builder, com.ctrip.flight.intl.agg.types.searchresponsetype.v3.FlightRefTypeOrBuilder> flightRefCombinationBuilder_;

    /**
     * <code>repeated .com.ctrip.flight.intl.agg.types.searchresponsetype.v3.FlightRefType FlightRefCombination = 1;</code>
     */
    public java.util.List<com.ctrip.flight.intl.agg.types.searchresponsetype.v3.FlightRefType> getFlightRefCombinationList() {
      if (flightRefCombinationBuilder_ == null) {
        return java.util.Collections.unmodifiableList(flightRefCombination_);
      } else {
        return flightRefCombinationBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.types.searchresponsetype.v3.FlightRefType FlightRefCombination = 1;</code>
     */
    public int getFlightRefCombinationCount() {
      if (flightRefCombinationBuilder_ == null) {
        return flightRefCombination_.size();
      } else {
        return flightRefCombinationBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.types.searchresponsetype.v3.FlightRefType FlightRefCombination = 1;</code>
     */
    public com.ctrip.flight.intl.agg.types.searchresponsetype.v3.FlightRefType getFlightRefCombination(int index) {
      if (flightRefCombinationBuilder_ == null) {
        return flightRefCombination_.get(index);
      } else {
        return flightRefCombinationBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.types.searchresponsetype.v3.FlightRefType FlightRefCombination = 1;</code>
     */
    public Builder setFlightRefCombination(
        int index, com.ctrip.flight.intl.agg.types.searchresponsetype.v3.FlightRefType value) {
      if (flightRefCombinationBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureFlightRefCombinationIsMutable();
        flightRefCombination_.set(index, value);
        onChanged();
      } else {
        flightRefCombinationBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.types.searchresponsetype.v3.FlightRefType FlightRefCombination = 1;</code>
     */
    public Builder setFlightRefCombination(
        int index, com.ctrip.flight.intl.agg.types.searchresponsetype.v3.FlightRefType.Builder builderForValue) {
      if (flightRefCombinationBuilder_ == null) {
        ensureFlightRefCombinationIsMutable();
        flightRefCombination_.set(index, builderForValue.build());
        onChanged();
      } else {
        flightRefCombinationBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.types.searchresponsetype.v3.FlightRefType FlightRefCombination = 1;</code>
     */
    public Builder addFlightRefCombination(com.ctrip.flight.intl.agg.types.searchresponsetype.v3.FlightRefType value) {
      if (flightRefCombinationBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureFlightRefCombinationIsMutable();
        flightRefCombination_.add(value);
        onChanged();
      } else {
        flightRefCombinationBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.types.searchresponsetype.v3.FlightRefType FlightRefCombination = 1;</code>
     */
    public Builder addFlightRefCombination(
        int index, com.ctrip.flight.intl.agg.types.searchresponsetype.v3.FlightRefType value) {
      if (flightRefCombinationBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureFlightRefCombinationIsMutable();
        flightRefCombination_.add(index, value);
        onChanged();
      } else {
        flightRefCombinationBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.types.searchresponsetype.v3.FlightRefType FlightRefCombination = 1;</code>
     */
    public Builder addFlightRefCombination(
        com.ctrip.flight.intl.agg.types.searchresponsetype.v3.FlightRefType.Builder builderForValue) {
      if (flightRefCombinationBuilder_ == null) {
        ensureFlightRefCombinationIsMutable();
        flightRefCombination_.add(builderForValue.build());
        onChanged();
      } else {
        flightRefCombinationBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.types.searchresponsetype.v3.FlightRefType FlightRefCombination = 1;</code>
     */
    public Builder addFlightRefCombination(
        int index, com.ctrip.flight.intl.agg.types.searchresponsetype.v3.FlightRefType.Builder builderForValue) {
      if (flightRefCombinationBuilder_ == null) {
        ensureFlightRefCombinationIsMutable();
        flightRefCombination_.add(index, builderForValue.build());
        onChanged();
      } else {
        flightRefCombinationBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.types.searchresponsetype.v3.FlightRefType FlightRefCombination = 1;</code>
     */
    public Builder addAllFlightRefCombination(
        java.lang.Iterable<? extends com.ctrip.flight.intl.agg.types.searchresponsetype.v3.FlightRefType> values) {
      if (flightRefCombinationBuilder_ == null) {
        ensureFlightRefCombinationIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, flightRefCombination_);
        onChanged();
      } else {
        flightRefCombinationBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.types.searchresponsetype.v3.FlightRefType FlightRefCombination = 1;</code>
     */
    public Builder clearFlightRefCombination() {
      if (flightRefCombinationBuilder_ == null) {
        flightRefCombination_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
      } else {
        flightRefCombinationBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.types.searchresponsetype.v3.FlightRefType FlightRefCombination = 1;</code>
     */
    public Builder removeFlightRefCombination(int index) {
      if (flightRefCombinationBuilder_ == null) {
        ensureFlightRefCombinationIsMutable();
        flightRefCombination_.remove(index);
        onChanged();
      } else {
        flightRefCombinationBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.types.searchresponsetype.v3.FlightRefType FlightRefCombination = 1;</code>
     */
    public com.ctrip.flight.intl.agg.types.searchresponsetype.v3.FlightRefType.Builder getFlightRefCombinationBuilder(
        int index) {
      return getFlightRefCombinationFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.types.searchresponsetype.v3.FlightRefType FlightRefCombination = 1;</code>
     */
    public com.ctrip.flight.intl.agg.types.searchresponsetype.v3.FlightRefTypeOrBuilder getFlightRefCombinationOrBuilder(
        int index) {
      if (flightRefCombinationBuilder_ == null) {
        return flightRefCombination_.get(index);  } else {
        return flightRefCombinationBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.types.searchresponsetype.v3.FlightRefType FlightRefCombination = 1;</code>
     */
    public java.util.List<? extends com.ctrip.flight.intl.agg.types.searchresponsetype.v3.FlightRefTypeOrBuilder> 
         getFlightRefCombinationOrBuilderList() {
      if (flightRefCombinationBuilder_ != null) {
        return flightRefCombinationBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(flightRefCombination_);
      }
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.types.searchresponsetype.v3.FlightRefType FlightRefCombination = 1;</code>
     */
    public com.ctrip.flight.intl.agg.types.searchresponsetype.v3.FlightRefType.Builder addFlightRefCombinationBuilder() {
      return getFlightRefCombinationFieldBuilder().addBuilder(
          com.ctrip.flight.intl.agg.types.searchresponsetype.v3.FlightRefType.getDefaultInstance());
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.types.searchresponsetype.v3.FlightRefType FlightRefCombination = 1;</code>
     */
    public com.ctrip.flight.intl.agg.types.searchresponsetype.v3.FlightRefType.Builder addFlightRefCombinationBuilder(
        int index) {
      return getFlightRefCombinationFieldBuilder().addBuilder(
          index, com.ctrip.flight.intl.agg.types.searchresponsetype.v3.FlightRefType.getDefaultInstance());
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.types.searchresponsetype.v3.FlightRefType FlightRefCombination = 1;</code>
     */
    public java.util.List<com.ctrip.flight.intl.agg.types.searchresponsetype.v3.FlightRefType.Builder> 
         getFlightRefCombinationBuilderList() {
      return getFlightRefCombinationFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.ctrip.flight.intl.agg.types.searchresponsetype.v3.FlightRefType, com.ctrip.flight.intl.agg.types.searchresponsetype.v3.FlightRefType.Builder, com.ctrip.flight.intl.agg.types.searchresponsetype.v3.FlightRefTypeOrBuilder> 
        getFlightRefCombinationFieldBuilder() {
      if (flightRefCombinationBuilder_ == null) {
        flightRefCombinationBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.ctrip.flight.intl.agg.types.searchresponsetype.v3.FlightRefType, com.ctrip.flight.intl.agg.types.searchresponsetype.v3.FlightRefType.Builder, com.ctrip.flight.intl.agg.types.searchresponsetype.v3.FlightRefTypeOrBuilder>(
                flightRefCombination_,
                ((bitField0_ & 0x00000001) == 0x00000001),
                getParentForChildren(),
                isClean());
        flightRefCombination_ = null;
      }
      return flightRefCombinationBuilder_;
    }

    private java.util.List<com.ctrip.flight.intl.agg.types.searchresponsetype.v3.PriceType> price_ =
      java.util.Collections.emptyList();
    private void ensurePriceIsMutable() {
      if (!((bitField0_ & 0x00000002) == 0x00000002)) {
        price_ = new java.util.ArrayList<com.ctrip.flight.intl.agg.types.searchresponsetype.v3.PriceType>(price_);
        bitField0_ |= 0x00000002;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.ctrip.flight.intl.agg.types.searchresponsetype.v3.PriceType, com.ctrip.flight.intl.agg.types.searchresponsetype.v3.PriceType.Builder, com.ctrip.flight.intl.agg.types.searchresponsetype.v3.PriceTypeOrBuilder> priceBuilder_;

    /**
     * <code>repeated .com.ctrip.flight.intl.agg.types.searchresponsetype.v3.PriceType Price = 2;</code>
     */
    public java.util.List<com.ctrip.flight.intl.agg.types.searchresponsetype.v3.PriceType> getPriceList() {
      if (priceBuilder_ == null) {
        return java.util.Collections.unmodifiableList(price_);
      } else {
        return priceBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.types.searchresponsetype.v3.PriceType Price = 2;</code>
     */
    public int getPriceCount() {
      if (priceBuilder_ == null) {
        return price_.size();
      } else {
        return priceBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.types.searchresponsetype.v3.PriceType Price = 2;</code>
     */
    public com.ctrip.flight.intl.agg.types.searchresponsetype.v3.PriceType getPrice(int index) {
      if (priceBuilder_ == null) {
        return price_.get(index);
      } else {
        return priceBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.types.searchresponsetype.v3.PriceType Price = 2;</code>
     */
    public Builder setPrice(
        int index, com.ctrip.flight.intl.agg.types.searchresponsetype.v3.PriceType value) {
      if (priceBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensurePriceIsMutable();
        price_.set(index, value);
        onChanged();
      } else {
        priceBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.types.searchresponsetype.v3.PriceType Price = 2;</code>
     */
    public Builder setPrice(
        int index, com.ctrip.flight.intl.agg.types.searchresponsetype.v3.PriceType.Builder builderForValue) {
      if (priceBuilder_ == null) {
        ensurePriceIsMutable();
        price_.set(index, builderForValue.build());
        onChanged();
      } else {
        priceBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.types.searchresponsetype.v3.PriceType Price = 2;</code>
     */
    public Builder addPrice(com.ctrip.flight.intl.agg.types.searchresponsetype.v3.PriceType value) {
      if (priceBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensurePriceIsMutable();
        price_.add(value);
        onChanged();
      } else {
        priceBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.types.searchresponsetype.v3.PriceType Price = 2;</code>
     */
    public Builder addPrice(
        int index, com.ctrip.flight.intl.agg.types.searchresponsetype.v3.PriceType value) {
      if (priceBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensurePriceIsMutable();
        price_.add(index, value);
        onChanged();
      } else {
        priceBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.types.searchresponsetype.v3.PriceType Price = 2;</code>
     */
    public Builder addPrice(
        com.ctrip.flight.intl.agg.types.searchresponsetype.v3.PriceType.Builder builderForValue) {
      if (priceBuilder_ == null) {
        ensurePriceIsMutable();
        price_.add(builderForValue.build());
        onChanged();
      } else {
        priceBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.types.searchresponsetype.v3.PriceType Price = 2;</code>
     */
    public Builder addPrice(
        int index, com.ctrip.flight.intl.agg.types.searchresponsetype.v3.PriceType.Builder builderForValue) {
      if (priceBuilder_ == null) {
        ensurePriceIsMutable();
        price_.add(index, builderForValue.build());
        onChanged();
      } else {
        priceBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.types.searchresponsetype.v3.PriceType Price = 2;</code>
     */
    public Builder addAllPrice(
        java.lang.Iterable<? extends com.ctrip.flight.intl.agg.types.searchresponsetype.v3.PriceType> values) {
      if (priceBuilder_ == null) {
        ensurePriceIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, price_);
        onChanged();
      } else {
        priceBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.types.searchresponsetype.v3.PriceType Price = 2;</code>
     */
    public Builder clearPrice() {
      if (priceBuilder_ == null) {
        price_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
      } else {
        priceBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.types.searchresponsetype.v3.PriceType Price = 2;</code>
     */
    public Builder removePrice(int index) {
      if (priceBuilder_ == null) {
        ensurePriceIsMutable();
        price_.remove(index);
        onChanged();
      } else {
        priceBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.types.searchresponsetype.v3.PriceType Price = 2;</code>
     */
    public com.ctrip.flight.intl.agg.types.searchresponsetype.v3.PriceType.Builder getPriceBuilder(
        int index) {
      return getPriceFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.types.searchresponsetype.v3.PriceType Price = 2;</code>
     */
    public com.ctrip.flight.intl.agg.types.searchresponsetype.v3.PriceTypeOrBuilder getPriceOrBuilder(
        int index) {
      if (priceBuilder_ == null) {
        return price_.get(index);  } else {
        return priceBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.types.searchresponsetype.v3.PriceType Price = 2;</code>
     */
    public java.util.List<? extends com.ctrip.flight.intl.agg.types.searchresponsetype.v3.PriceTypeOrBuilder> 
         getPriceOrBuilderList() {
      if (priceBuilder_ != null) {
        return priceBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(price_);
      }
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.types.searchresponsetype.v3.PriceType Price = 2;</code>
     */
    public com.ctrip.flight.intl.agg.types.searchresponsetype.v3.PriceType.Builder addPriceBuilder() {
      return getPriceFieldBuilder().addBuilder(
          com.ctrip.flight.intl.agg.types.searchresponsetype.v3.PriceType.getDefaultInstance());
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.types.searchresponsetype.v3.PriceType Price = 2;</code>
     */
    public com.ctrip.flight.intl.agg.types.searchresponsetype.v3.PriceType.Builder addPriceBuilder(
        int index) {
      return getPriceFieldBuilder().addBuilder(
          index, com.ctrip.flight.intl.agg.types.searchresponsetype.v3.PriceType.getDefaultInstance());
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.types.searchresponsetype.v3.PriceType Price = 2;</code>
     */
    public java.util.List<com.ctrip.flight.intl.agg.types.searchresponsetype.v3.PriceType.Builder> 
         getPriceBuilderList() {
      return getPriceFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.ctrip.flight.intl.agg.types.searchresponsetype.v3.PriceType, com.ctrip.flight.intl.agg.types.searchresponsetype.v3.PriceType.Builder, com.ctrip.flight.intl.agg.types.searchresponsetype.v3.PriceTypeOrBuilder> 
        getPriceFieldBuilder() {
      if (priceBuilder_ == null) {
        priceBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.ctrip.flight.intl.agg.types.searchresponsetype.v3.PriceType, com.ctrip.flight.intl.agg.types.searchresponsetype.v3.PriceType.Builder, com.ctrip.flight.intl.agg.types.searchresponsetype.v3.PriceTypeOrBuilder>(
                price_,
                ((bitField0_ & 0x00000002) == 0x00000002),
                getParentForChildren(),
                isClean());
        price_ = null;
      }
      return priceBuilder_;
    }

    private java.util.List<com.ctrip.flight.intl.agg.flighttypes.v3.KeyValuePairType> tag_ =
      java.util.Collections.emptyList();
    private void ensureTagIsMutable() {
      if (!((bitField0_ & 0x00000004) == 0x00000004)) {
        tag_ = new java.util.ArrayList<com.ctrip.flight.intl.agg.flighttypes.v3.KeyValuePairType>(tag_);
        bitField0_ |= 0x00000004;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.ctrip.flight.intl.agg.flighttypes.v3.KeyValuePairType, com.ctrip.flight.intl.agg.flighttypes.v3.KeyValuePairType.Builder, com.ctrip.flight.intl.agg.flighttypes.v3.KeyValuePairTypeOrBuilder> tagBuilder_;

    /**
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.KeyValuePairType Tag = 4;</code>
     */
    public java.util.List<com.ctrip.flight.intl.agg.flighttypes.v3.KeyValuePairType> getTagList() {
      if (tagBuilder_ == null) {
        return java.util.Collections.unmodifiableList(tag_);
      } else {
        return tagBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.KeyValuePairType Tag = 4;</code>
     */
    public int getTagCount() {
      if (tagBuilder_ == null) {
        return tag_.size();
      } else {
        return tagBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.KeyValuePairType Tag = 4;</code>
     */
    public com.ctrip.flight.intl.agg.flighttypes.v3.KeyValuePairType getTag(int index) {
      if (tagBuilder_ == null) {
        return tag_.get(index);
      } else {
        return tagBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.KeyValuePairType Tag = 4;</code>
     */
    public Builder setTag(
        int index, com.ctrip.flight.intl.agg.flighttypes.v3.KeyValuePairType value) {
      if (tagBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTagIsMutable();
        tag_.set(index, value);
        onChanged();
      } else {
        tagBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.KeyValuePairType Tag = 4;</code>
     */
    public Builder setTag(
        int index, com.ctrip.flight.intl.agg.flighttypes.v3.KeyValuePairType.Builder builderForValue) {
      if (tagBuilder_ == null) {
        ensureTagIsMutable();
        tag_.set(index, builderForValue.build());
        onChanged();
      } else {
        tagBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.KeyValuePairType Tag = 4;</code>
     */
    public Builder addTag(com.ctrip.flight.intl.agg.flighttypes.v3.KeyValuePairType value) {
      if (tagBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTagIsMutable();
        tag_.add(value);
        onChanged();
      } else {
        tagBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.KeyValuePairType Tag = 4;</code>
     */
    public Builder addTag(
        int index, com.ctrip.flight.intl.agg.flighttypes.v3.KeyValuePairType value) {
      if (tagBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTagIsMutable();
        tag_.add(index, value);
        onChanged();
      } else {
        tagBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.KeyValuePairType Tag = 4;</code>
     */
    public Builder addTag(
        com.ctrip.flight.intl.agg.flighttypes.v3.KeyValuePairType.Builder builderForValue) {
      if (tagBuilder_ == null) {
        ensureTagIsMutable();
        tag_.add(builderForValue.build());
        onChanged();
      } else {
        tagBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.KeyValuePairType Tag = 4;</code>
     */
    public Builder addTag(
        int index, com.ctrip.flight.intl.agg.flighttypes.v3.KeyValuePairType.Builder builderForValue) {
      if (tagBuilder_ == null) {
        ensureTagIsMutable();
        tag_.add(index, builderForValue.build());
        onChanged();
      } else {
        tagBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.KeyValuePairType Tag = 4;</code>
     */
    public Builder addAllTag(
        java.lang.Iterable<? extends com.ctrip.flight.intl.agg.flighttypes.v3.KeyValuePairType> values) {
      if (tagBuilder_ == null) {
        ensureTagIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, tag_);
        onChanged();
      } else {
        tagBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.KeyValuePairType Tag = 4;</code>
     */
    public Builder clearTag() {
      if (tagBuilder_ == null) {
        tag_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
      } else {
        tagBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.KeyValuePairType Tag = 4;</code>
     */
    public Builder removeTag(int index) {
      if (tagBuilder_ == null) {
        ensureTagIsMutable();
        tag_.remove(index);
        onChanged();
      } else {
        tagBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.KeyValuePairType Tag = 4;</code>
     */
    public com.ctrip.flight.intl.agg.flighttypes.v3.KeyValuePairType.Builder getTagBuilder(
        int index) {
      return getTagFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.KeyValuePairType Tag = 4;</code>
     */
    public com.ctrip.flight.intl.agg.flighttypes.v3.KeyValuePairTypeOrBuilder getTagOrBuilder(
        int index) {
      if (tagBuilder_ == null) {
        return tag_.get(index);  } else {
        return tagBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.KeyValuePairType Tag = 4;</code>
     */
    public java.util.List<? extends com.ctrip.flight.intl.agg.flighttypes.v3.KeyValuePairTypeOrBuilder> 
         getTagOrBuilderList() {
      if (tagBuilder_ != null) {
        return tagBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(tag_);
      }
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.KeyValuePairType Tag = 4;</code>
     */
    public com.ctrip.flight.intl.agg.flighttypes.v3.KeyValuePairType.Builder addTagBuilder() {
      return getTagFieldBuilder().addBuilder(
          com.ctrip.flight.intl.agg.flighttypes.v3.KeyValuePairType.getDefaultInstance());
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.KeyValuePairType Tag = 4;</code>
     */
    public com.ctrip.flight.intl.agg.flighttypes.v3.KeyValuePairType.Builder addTagBuilder(
        int index) {
      return getTagFieldBuilder().addBuilder(
          index, com.ctrip.flight.intl.agg.flighttypes.v3.KeyValuePairType.getDefaultInstance());
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.KeyValuePairType Tag = 4;</code>
     */
    public java.util.List<com.ctrip.flight.intl.agg.flighttypes.v3.KeyValuePairType.Builder> 
         getTagBuilderList() {
      return getTagFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.ctrip.flight.intl.agg.flighttypes.v3.KeyValuePairType, com.ctrip.flight.intl.agg.flighttypes.v3.KeyValuePairType.Builder, com.ctrip.flight.intl.agg.flighttypes.v3.KeyValuePairTypeOrBuilder> 
        getTagFieldBuilder() {
      if (tagBuilder_ == null) {
        tagBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.ctrip.flight.intl.agg.flighttypes.v3.KeyValuePairType, com.ctrip.flight.intl.agg.flighttypes.v3.KeyValuePairType.Builder, com.ctrip.flight.intl.agg.flighttypes.v3.KeyValuePairTypeOrBuilder>(
                tag_,
                ((bitField0_ & 0x00000004) == 0x00000004),
                getParentForChildren(),
                isClean());
        tag_ = null;
      }
      return tagBuilder_;
    }

    private java.util.List<com.ctrip.flight.intl.agg.flighttypes.v3.VirtualFlightRemarkType> virtualFlightRemark_ =
      java.util.Collections.emptyList();
    private void ensureVirtualFlightRemarkIsMutable() {
      if (!((bitField0_ & 0x00000008) == 0x00000008)) {
        virtualFlightRemark_ = new java.util.ArrayList<com.ctrip.flight.intl.agg.flighttypes.v3.VirtualFlightRemarkType>(virtualFlightRemark_);
        bitField0_ |= 0x00000008;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.ctrip.flight.intl.agg.flighttypes.v3.VirtualFlightRemarkType, com.ctrip.flight.intl.agg.flighttypes.v3.VirtualFlightRemarkType.Builder, com.ctrip.flight.intl.agg.flighttypes.v3.VirtualFlightRemarkTypeOrBuilder> virtualFlightRemarkBuilder_;

    /**
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.VirtualFlightRemarkType VirtualFlightRemark = 7;</code>
     */
    public java.util.List<com.ctrip.flight.intl.agg.flighttypes.v3.VirtualFlightRemarkType> getVirtualFlightRemarkList() {
      if (virtualFlightRemarkBuilder_ == null) {
        return java.util.Collections.unmodifiableList(virtualFlightRemark_);
      } else {
        return virtualFlightRemarkBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.VirtualFlightRemarkType VirtualFlightRemark = 7;</code>
     */
    public int getVirtualFlightRemarkCount() {
      if (virtualFlightRemarkBuilder_ == null) {
        return virtualFlightRemark_.size();
      } else {
        return virtualFlightRemarkBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.VirtualFlightRemarkType VirtualFlightRemark = 7;</code>
     */
    public com.ctrip.flight.intl.agg.flighttypes.v3.VirtualFlightRemarkType getVirtualFlightRemark(int index) {
      if (virtualFlightRemarkBuilder_ == null) {
        return virtualFlightRemark_.get(index);
      } else {
        return virtualFlightRemarkBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.VirtualFlightRemarkType VirtualFlightRemark = 7;</code>
     */
    public Builder setVirtualFlightRemark(
        int index, com.ctrip.flight.intl.agg.flighttypes.v3.VirtualFlightRemarkType value) {
      if (virtualFlightRemarkBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureVirtualFlightRemarkIsMutable();
        virtualFlightRemark_.set(index, value);
        onChanged();
      } else {
        virtualFlightRemarkBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.VirtualFlightRemarkType VirtualFlightRemark = 7;</code>
     */
    public Builder setVirtualFlightRemark(
        int index, com.ctrip.flight.intl.agg.flighttypes.v3.VirtualFlightRemarkType.Builder builderForValue) {
      if (virtualFlightRemarkBuilder_ == null) {
        ensureVirtualFlightRemarkIsMutable();
        virtualFlightRemark_.set(index, builderForValue.build());
        onChanged();
      } else {
        virtualFlightRemarkBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.VirtualFlightRemarkType VirtualFlightRemark = 7;</code>
     */
    public Builder addVirtualFlightRemark(com.ctrip.flight.intl.agg.flighttypes.v3.VirtualFlightRemarkType value) {
      if (virtualFlightRemarkBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureVirtualFlightRemarkIsMutable();
        virtualFlightRemark_.add(value);
        onChanged();
      } else {
        virtualFlightRemarkBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.VirtualFlightRemarkType VirtualFlightRemark = 7;</code>
     */
    public Builder addVirtualFlightRemark(
        int index, com.ctrip.flight.intl.agg.flighttypes.v3.VirtualFlightRemarkType value) {
      if (virtualFlightRemarkBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureVirtualFlightRemarkIsMutable();
        virtualFlightRemark_.add(index, value);
        onChanged();
      } else {
        virtualFlightRemarkBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.VirtualFlightRemarkType VirtualFlightRemark = 7;</code>
     */
    public Builder addVirtualFlightRemark(
        com.ctrip.flight.intl.agg.flighttypes.v3.VirtualFlightRemarkType.Builder builderForValue) {
      if (virtualFlightRemarkBuilder_ == null) {
        ensureVirtualFlightRemarkIsMutable();
        virtualFlightRemark_.add(builderForValue.build());
        onChanged();
      } else {
        virtualFlightRemarkBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.VirtualFlightRemarkType VirtualFlightRemark = 7;</code>
     */
    public Builder addVirtualFlightRemark(
        int index, com.ctrip.flight.intl.agg.flighttypes.v3.VirtualFlightRemarkType.Builder builderForValue) {
      if (virtualFlightRemarkBuilder_ == null) {
        ensureVirtualFlightRemarkIsMutable();
        virtualFlightRemark_.add(index, builderForValue.build());
        onChanged();
      } else {
        virtualFlightRemarkBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.VirtualFlightRemarkType VirtualFlightRemark = 7;</code>
     */
    public Builder addAllVirtualFlightRemark(
        java.lang.Iterable<? extends com.ctrip.flight.intl.agg.flighttypes.v3.VirtualFlightRemarkType> values) {
      if (virtualFlightRemarkBuilder_ == null) {
        ensureVirtualFlightRemarkIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, virtualFlightRemark_);
        onChanged();
      } else {
        virtualFlightRemarkBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.VirtualFlightRemarkType VirtualFlightRemark = 7;</code>
     */
    public Builder clearVirtualFlightRemark() {
      if (virtualFlightRemarkBuilder_ == null) {
        virtualFlightRemark_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
      } else {
        virtualFlightRemarkBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.VirtualFlightRemarkType VirtualFlightRemark = 7;</code>
     */
    public Builder removeVirtualFlightRemark(int index) {
      if (virtualFlightRemarkBuilder_ == null) {
        ensureVirtualFlightRemarkIsMutable();
        virtualFlightRemark_.remove(index);
        onChanged();
      } else {
        virtualFlightRemarkBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.VirtualFlightRemarkType VirtualFlightRemark = 7;</code>
     */
    public com.ctrip.flight.intl.agg.flighttypes.v3.VirtualFlightRemarkType.Builder getVirtualFlightRemarkBuilder(
        int index) {
      return getVirtualFlightRemarkFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.VirtualFlightRemarkType VirtualFlightRemark = 7;</code>
     */
    public com.ctrip.flight.intl.agg.flighttypes.v3.VirtualFlightRemarkTypeOrBuilder getVirtualFlightRemarkOrBuilder(
        int index) {
      if (virtualFlightRemarkBuilder_ == null) {
        return virtualFlightRemark_.get(index);  } else {
        return virtualFlightRemarkBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.VirtualFlightRemarkType VirtualFlightRemark = 7;</code>
     */
    public java.util.List<? extends com.ctrip.flight.intl.agg.flighttypes.v3.VirtualFlightRemarkTypeOrBuilder> 
         getVirtualFlightRemarkOrBuilderList() {
      if (virtualFlightRemarkBuilder_ != null) {
        return virtualFlightRemarkBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(virtualFlightRemark_);
      }
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.VirtualFlightRemarkType VirtualFlightRemark = 7;</code>
     */
    public com.ctrip.flight.intl.agg.flighttypes.v3.VirtualFlightRemarkType.Builder addVirtualFlightRemarkBuilder() {
      return getVirtualFlightRemarkFieldBuilder().addBuilder(
          com.ctrip.flight.intl.agg.flighttypes.v3.VirtualFlightRemarkType.getDefaultInstance());
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.VirtualFlightRemarkType VirtualFlightRemark = 7;</code>
     */
    public com.ctrip.flight.intl.agg.flighttypes.v3.VirtualFlightRemarkType.Builder addVirtualFlightRemarkBuilder(
        int index) {
      return getVirtualFlightRemarkFieldBuilder().addBuilder(
          index, com.ctrip.flight.intl.agg.flighttypes.v3.VirtualFlightRemarkType.getDefaultInstance());
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.VirtualFlightRemarkType VirtualFlightRemark = 7;</code>
     */
    public java.util.List<com.ctrip.flight.intl.agg.flighttypes.v3.VirtualFlightRemarkType.Builder> 
         getVirtualFlightRemarkBuilderList() {
      return getVirtualFlightRemarkFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.ctrip.flight.intl.agg.flighttypes.v3.VirtualFlightRemarkType, com.ctrip.flight.intl.agg.flighttypes.v3.VirtualFlightRemarkType.Builder, com.ctrip.flight.intl.agg.flighttypes.v3.VirtualFlightRemarkTypeOrBuilder> 
        getVirtualFlightRemarkFieldBuilder() {
      if (virtualFlightRemarkBuilder_ == null) {
        virtualFlightRemarkBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.ctrip.flight.intl.agg.flighttypes.v3.VirtualFlightRemarkType, com.ctrip.flight.intl.agg.flighttypes.v3.VirtualFlightRemarkType.Builder, com.ctrip.flight.intl.agg.flighttypes.v3.VirtualFlightRemarkTypeOrBuilder>(
                virtualFlightRemark_,
                ((bitField0_ & 0x00000008) == 0x00000008),
                getParentForChildren(),
                isClean());
        virtualFlightRemark_ = null;
      }
      return virtualFlightRemarkBuilder_;
    }

    private boolean hasMoreGrade_ ;
    /**
     * <pre>
     *变化 删除flightProductGroupID
     * </pre>
     *
     * <code>bool hasMoreGrade = 8;</code>
     */
    public boolean getHasMoreGrade() {
      return hasMoreGrade_;
    }
    /**
     * <pre>
     *变化 删除flightProductGroupID
     * </pre>
     *
     * <code>bool hasMoreGrade = 8;</code>
     */
    public Builder setHasMoreGrade(boolean value) {
      
      hasMoreGrade_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *变化 删除flightProductGroupID
     * </pre>
     *
     * <code>bool hasMoreGrade = 8;</code>
     */
    public Builder clearHasMoreGrade() {
      
      hasMoreGrade_ = false;
      onChanged();
      return this;
    }

    private int flyerFlag_ ;
    /**
     * <pre>
     *None=0
     *FlyerOrderVisible=1
     *FlyerOrderInvisible=2
     *FlyerOrderRapid=3
     * </pre>
     *
     * <code>int32 FlyerFlag = 9;</code>
     */
    public int getFlyerFlag() {
      return flyerFlag_;
    }
    /**
     * <pre>
     *None=0
     *FlyerOrderVisible=1
     *FlyerOrderInvisible=2
     *FlyerOrderRapid=3
     * </pre>
     *
     * <code>int32 FlyerFlag = 9;</code>
     */
    public Builder setFlyerFlag(int value) {
      
      flyerFlag_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *None=0
     *FlyerOrderVisible=1
     *FlyerOrderInvisible=2
     *FlyerOrderRapid=3
     * </pre>
     *
     * <code>int32 FlyerFlag = 9;</code>
     */
    public Builder clearFlyerFlag() {
      
      flyerFlag_ = 0;
      onChanged();
      return this;
    }

    private java.lang.Object unaccompaniedAgeRange_ = "";
    /**
     * <pre>
     * 变化 从PriceType中移动过来
     * </pre>
     *
     * <code>string UnaccompaniedAgeRange = 10;</code>
     */
    public java.lang.String getUnaccompaniedAgeRange() {
      java.lang.Object ref = unaccompaniedAgeRange_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        unaccompaniedAgeRange_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * 变化 从PriceType中移动过来
     * </pre>
     *
     * <code>string UnaccompaniedAgeRange = 10;</code>
     */
    public com.google.protobuf.ByteString
        getUnaccompaniedAgeRangeBytes() {
      java.lang.Object ref = unaccompaniedAgeRange_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        unaccompaniedAgeRange_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * 变化 从PriceType中移动过来
     * </pre>
     *
     * <code>string UnaccompaniedAgeRange = 10;</code>
     */
    public Builder setUnaccompaniedAgeRange(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      unaccompaniedAgeRange_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 变化 从PriceType中移动过来
     * </pre>
     *
     * <code>string UnaccompaniedAgeRange = 10;</code>
     */
    public Builder clearUnaccompaniedAgeRange() {
      
      unaccompaniedAgeRange_ = getDefaultInstance().getUnaccompaniedAgeRange();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 变化 从PriceType中移动过来
     * </pre>
     *
     * <code>string UnaccompaniedAgeRange = 10;</code>
     */
    public Builder setUnaccompaniedAgeRangeBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      unaccompaniedAgeRange_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object flag_ = "";
    /**
     * <pre>
     * 新增
     * </pre>
     *
     * <code>string Flag = 11;</code>
     */
    public java.lang.String getFlag() {
      java.lang.Object ref = flag_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        flag_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * 新增
     * </pre>
     *
     * <code>string Flag = 11;</code>
     */
    public com.google.protobuf.ByteString
        getFlagBytes() {
      java.lang.Object ref = flag_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        flag_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * 新增
     * </pre>
     *
     * <code>string Flag = 11;</code>
     */
    public Builder setFlag(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      flag_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 新增
     * </pre>
     *
     * <code>string Flag = 11;</code>
     */
    public Builder clearFlag() {
      
      flag_ = getDefaultInstance().getFlag();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 新增
     * </pre>
     *
     * <code>string Flag = 11;</code>
     */
    public Builder setFlagBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      flag_ = value;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFieldsProto3(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:com.ctrip.flight.intl.agg.types.searchresponsetype.v3.FlightProductGroupType)
  }

  // @@protoc_insertion_point(class_scope:com.ctrip.flight.intl.agg.types.searchresponsetype.v3.FlightProductGroupType)
  private static final com.ctrip.flight.intl.agg.types.searchresponsetype.v3.FlightProductGroupType DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.ctrip.flight.intl.agg.types.searchresponsetype.v3.FlightProductGroupType();
  }

  public static com.ctrip.flight.intl.agg.types.searchresponsetype.v3.FlightProductGroupType getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<FlightProductGroupType>
      PARSER = new com.google.protobuf.AbstractParser<FlightProductGroupType>() {
    @java.lang.Override
    public FlightProductGroupType parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new FlightProductGroupType(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<FlightProductGroupType> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<FlightProductGroupType> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.ctrip.flight.intl.agg.types.searchresponsetype.v3.FlightProductGroupType getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

