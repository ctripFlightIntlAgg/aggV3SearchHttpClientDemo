// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: agg.types.searchresponsetype.v3.proto

package com.ctrip.flight.intl.agg.types.searchresponsetype.v3;

/**
 * Protobuf type {@code com.ctrip.flight.intl.agg.types.searchresponsetype.v3.SearchResultType}
 */
public  final class SearchResultType extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:com.ctrip.flight.intl.agg.types.searchresponsetype.v3.SearchResultType)
    SearchResultTypeOrBuilder {
private static final long serialVersionUID = 0L;
  // Use SearchResultType.newBuilder() to construct.
  private SearchResultType(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private SearchResultType() {
    flightProductGroup_ = java.util.Collections.emptyList();
    flight_ = java.util.Collections.emptyList();
    baggage_ = java.util.Collections.emptyList();
    textRemark_ = java.util.Collections.emptyList();
    searchCriteriaToken_ = "";
    tag_ = java.util.Collections.emptyList();
    agency_ = java.util.Collections.emptyList();
    airline_ = java.util.Collections.emptyList();
    city_ = java.util.Collections.emptyList();
    airport_ = java.util.Collections.emptyList();
    service_ = java.util.Collections.emptyList();
    cacheInfo_ = java.util.Collections.emptyList();
    creditCardPaymentInfo_ = java.util.Collections.emptyList();
    extendFields_ = java.util.Collections.emptyList();
    paymentDiscount_ = java.util.Collections.emptyList();
    xproductSearchKey_ = "";
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private SearchResultType(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
              flightProductGroup_ = new java.util.ArrayList<com.ctrip.flight.intl.agg.types.searchresponsetype.v3.FlightProductGroupType>();
              mutable_bitField0_ |= 0x00000001;
            }
            flightProductGroup_.add(
                input.readMessage(com.ctrip.flight.intl.agg.types.searchresponsetype.v3.FlightProductGroupType.parser(), extensionRegistry));
            break;
          }
          case 18: {
            if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
              flight_ = new java.util.ArrayList<com.ctrip.flight.intl.agg.flighttypes.v3.FlightType>();
              mutable_bitField0_ |= 0x00000002;
            }
            flight_.add(
                input.readMessage(com.ctrip.flight.intl.agg.flighttypes.v3.FlightType.parser(), extensionRegistry));
            break;
          }
          case 26: {
            if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
              baggage_ = new java.util.ArrayList<com.ctrip.flight.intl.agg.flighttypes.v3.BaggageType>();
              mutable_bitField0_ |= 0x00000004;
            }
            baggage_.add(
                input.readMessage(com.ctrip.flight.intl.agg.flighttypes.v3.BaggageType.parser(), extensionRegistry));
            break;
          }
          case 34: {
            if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
              textRemark_ = new java.util.ArrayList<com.ctrip.flight.intl.agg.flighttypes.v3.TextRemarkType>();
              mutable_bitField0_ |= 0x00000008;
            }
            textRemark_.add(
                input.readMessage(com.ctrip.flight.intl.agg.flighttypes.v3.TextRemarkType.parser(), extensionRegistry));
            break;
          }
          case 50: {
            java.lang.String s = input.readStringRequireUtf8();

            searchCriteriaToken_ = s;
            break;
          }
          case 58: {
            if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
              tag_ = new java.util.ArrayList<com.ctrip.flight.intl.agg.flighttypes.v3.KeyValuePairType>();
              mutable_bitField0_ |= 0x00000020;
            }
            tag_.add(
                input.readMessage(com.ctrip.flight.intl.agg.flighttypes.v3.KeyValuePairType.parser(), extensionRegistry));
            break;
          }
          case 66: {
            if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
              agency_ = new java.util.ArrayList<com.ctrip.flight.intl.agg.flighttypes.v3.AgencyType>();
              mutable_bitField0_ |= 0x00000040;
            }
            agency_.add(
                input.readMessage(com.ctrip.flight.intl.agg.flighttypes.v3.AgencyType.parser(), extensionRegistry));
            break;
          }
          case 74: {
            if (!((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
              airline_ = new java.util.ArrayList<com.ctrip.flight.intl.agg.flighttypes.v3.AirlineInfoType>();
              mutable_bitField0_ |= 0x00000080;
            }
            airline_.add(
                input.readMessage(com.ctrip.flight.intl.agg.flighttypes.v3.AirlineInfoType.parser(), extensionRegistry));
            break;
          }
          case 82: {
            if (!((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
              city_ = new java.util.ArrayList<com.ctrip.flight.intl.agg.flighttypes.v3.CityInfoType>();
              mutable_bitField0_ |= 0x00000100;
            }
            city_.add(
                input.readMessage(com.ctrip.flight.intl.agg.flighttypes.v3.CityInfoType.parser(), extensionRegistry));
            break;
          }
          case 90: {
            if (!((mutable_bitField0_ & 0x00000200) == 0x00000200)) {
              airport_ = new java.util.ArrayList<com.ctrip.flight.intl.agg.flighttypes.v3.AirportInfoType>();
              mutable_bitField0_ |= 0x00000200;
            }
            airport_.add(
                input.readMessage(com.ctrip.flight.intl.agg.flighttypes.v3.AirportInfoType.parser(), extensionRegistry));
            break;
          }
          case 98: {
            if (!((mutable_bitField0_ & 0x00000400) == 0x00000400)) {
              service_ = new java.util.ArrayList<com.ctrip.flight.intl.agg.additionproduct.v3.ServiceType>();
              mutable_bitField0_ |= 0x00000400;
            }
            service_.add(
                input.readMessage(com.ctrip.flight.intl.agg.additionproduct.v3.ServiceType.parser(), extensionRegistry));
            break;
          }
          case 106: {
            if (!((mutable_bitField0_ & 0x00000800) == 0x00000800)) {
              cacheInfo_ = new java.util.ArrayList<com.ctrip.flight.intl.agg.flighttypes.v3.CacheInfoType>();
              mutable_bitField0_ |= 0x00000800;
            }
            cacheInfo_.add(
                input.readMessage(com.ctrip.flight.intl.agg.flighttypes.v3.CacheInfoType.parser(), extensionRegistry));
            break;
          }
          case 114: {
            if (!((mutable_bitField0_ & 0x00001000) == 0x00001000)) {
              creditCardPaymentInfo_ = new java.util.ArrayList<com.ctrip.flight.intl.agg.flighttypes.v3.CreditCardPaymentInfoType>();
              mutable_bitField0_ |= 0x00001000;
            }
            creditCardPaymentInfo_.add(
                input.readMessage(com.ctrip.flight.intl.agg.flighttypes.v3.CreditCardPaymentInfoType.parser(), extensionRegistry));
            break;
          }
          case 122: {
            if (!((mutable_bitField0_ & 0x00002000) == 0x00002000)) {
              extendFields_ = new java.util.ArrayList<com.ctrip.flight.intl.agg.flighttypes.v3.KeyValuePairType>();
              mutable_bitField0_ |= 0x00002000;
            }
            extendFields_.add(
                input.readMessage(com.ctrip.flight.intl.agg.flighttypes.v3.KeyValuePairType.parser(), extensionRegistry));
            break;
          }
          case 130: {
            if (!((mutable_bitField0_ & 0x00004000) == 0x00004000)) {
              paymentDiscount_ = new java.util.ArrayList<com.ctrip.flight.intl.agg.flighttypes.v3.PaymentDiscountType>();
              mutable_bitField0_ |= 0x00004000;
            }
            paymentDiscount_.add(
                input.readMessage(com.ctrip.flight.intl.agg.flighttypes.v3.PaymentDiscountType.parser(), extensionRegistry));
            break;
          }
          case 138: {
            java.lang.String s = input.readStringRequireUtf8();

            xproductSearchKey_ = s;
            break;
          }
          default: {
            if (!parseUnknownFieldProto3(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
        flightProductGroup_ = java.util.Collections.unmodifiableList(flightProductGroup_);
      }
      if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
        flight_ = java.util.Collections.unmodifiableList(flight_);
      }
      if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
        baggage_ = java.util.Collections.unmodifiableList(baggage_);
      }
      if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
        textRemark_ = java.util.Collections.unmodifiableList(textRemark_);
      }
      if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
        tag_ = java.util.Collections.unmodifiableList(tag_);
      }
      if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
        agency_ = java.util.Collections.unmodifiableList(agency_);
      }
      if (((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
        airline_ = java.util.Collections.unmodifiableList(airline_);
      }
      if (((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
        city_ = java.util.Collections.unmodifiableList(city_);
      }
      if (((mutable_bitField0_ & 0x00000200) == 0x00000200)) {
        airport_ = java.util.Collections.unmodifiableList(airport_);
      }
      if (((mutable_bitField0_ & 0x00000400) == 0x00000400)) {
        service_ = java.util.Collections.unmodifiableList(service_);
      }
      if (((mutable_bitField0_ & 0x00000800) == 0x00000800)) {
        cacheInfo_ = java.util.Collections.unmodifiableList(cacheInfo_);
      }
      if (((mutable_bitField0_ & 0x00001000) == 0x00001000)) {
        creditCardPaymentInfo_ = java.util.Collections.unmodifiableList(creditCardPaymentInfo_);
      }
      if (((mutable_bitField0_ & 0x00002000) == 0x00002000)) {
        extendFields_ = java.util.Collections.unmodifiableList(extendFields_);
      }
      if (((mutable_bitField0_ & 0x00004000) == 0x00004000)) {
        paymentDiscount_ = java.util.Collections.unmodifiableList(paymentDiscount_);
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.ctrip.flight.intl.agg.types.searchresponsetype.v3.AggTypesSearchresponsetypeV3.internal_static_com_ctrip_flight_intl_agg_types_searchresponsetype_v3_SearchResultType_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.ctrip.flight.intl.agg.types.searchresponsetype.v3.AggTypesSearchresponsetypeV3.internal_static_com_ctrip_flight_intl_agg_types_searchresponsetype_v3_SearchResultType_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.ctrip.flight.intl.agg.types.searchresponsetype.v3.SearchResultType.class, com.ctrip.flight.intl.agg.types.searchresponsetype.v3.SearchResultType.Builder.class);
  }

  private int bitField0_;
  public static final int FLIGHTPRODUCTGROUP_FIELD_NUMBER = 1;
  private java.util.List<com.ctrip.flight.intl.agg.types.searchresponsetype.v3.FlightProductGroupType> flightProductGroup_;
  /**
   * <code>repeated .com.ctrip.flight.intl.agg.types.searchresponsetype.v3.FlightProductGroupType FlightProductGroup = 1;</code>
   */
  public java.util.List<com.ctrip.flight.intl.agg.types.searchresponsetype.v3.FlightProductGroupType> getFlightProductGroupList() {
    return flightProductGroup_;
  }
  /**
   * <code>repeated .com.ctrip.flight.intl.agg.types.searchresponsetype.v3.FlightProductGroupType FlightProductGroup = 1;</code>
   */
  public java.util.List<? extends com.ctrip.flight.intl.agg.types.searchresponsetype.v3.FlightProductGroupTypeOrBuilder> 
      getFlightProductGroupOrBuilderList() {
    return flightProductGroup_;
  }
  /**
   * <code>repeated .com.ctrip.flight.intl.agg.types.searchresponsetype.v3.FlightProductGroupType FlightProductGroup = 1;</code>
   */
  public int getFlightProductGroupCount() {
    return flightProductGroup_.size();
  }
  /**
   * <code>repeated .com.ctrip.flight.intl.agg.types.searchresponsetype.v3.FlightProductGroupType FlightProductGroup = 1;</code>
   */
  public com.ctrip.flight.intl.agg.types.searchresponsetype.v3.FlightProductGroupType getFlightProductGroup(int index) {
    return flightProductGroup_.get(index);
  }
  /**
   * <code>repeated .com.ctrip.flight.intl.agg.types.searchresponsetype.v3.FlightProductGroupType FlightProductGroup = 1;</code>
   */
  public com.ctrip.flight.intl.agg.types.searchresponsetype.v3.FlightProductGroupTypeOrBuilder getFlightProductGroupOrBuilder(
      int index) {
    return flightProductGroup_.get(index);
  }

  public static final int FLIGHT_FIELD_NUMBER = 2;
  private java.util.List<com.ctrip.flight.intl.agg.flighttypes.v3.FlightType> flight_;
  /**
   * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.FlightType Flight = 2;</code>
   */
  public java.util.List<com.ctrip.flight.intl.agg.flighttypes.v3.FlightType> getFlightList() {
    return flight_;
  }
  /**
   * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.FlightType Flight = 2;</code>
   */
  public java.util.List<? extends com.ctrip.flight.intl.agg.flighttypes.v3.FlightTypeOrBuilder> 
      getFlightOrBuilderList() {
    return flight_;
  }
  /**
   * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.FlightType Flight = 2;</code>
   */
  public int getFlightCount() {
    return flight_.size();
  }
  /**
   * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.FlightType Flight = 2;</code>
   */
  public com.ctrip.flight.intl.agg.flighttypes.v3.FlightType getFlight(int index) {
    return flight_.get(index);
  }
  /**
   * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.FlightType Flight = 2;</code>
   */
  public com.ctrip.flight.intl.agg.flighttypes.v3.FlightTypeOrBuilder getFlightOrBuilder(
      int index) {
    return flight_.get(index);
  }

  public static final int BAGGAGE_FIELD_NUMBER = 3;
  private java.util.List<com.ctrip.flight.intl.agg.flighttypes.v3.BaggageType> baggage_;
  /**
   * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.BaggageType Baggage = 3;</code>
   */
  public java.util.List<com.ctrip.flight.intl.agg.flighttypes.v3.BaggageType> getBaggageList() {
    return baggage_;
  }
  /**
   * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.BaggageType Baggage = 3;</code>
   */
  public java.util.List<? extends com.ctrip.flight.intl.agg.flighttypes.v3.BaggageTypeOrBuilder> 
      getBaggageOrBuilderList() {
    return baggage_;
  }
  /**
   * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.BaggageType Baggage = 3;</code>
   */
  public int getBaggageCount() {
    return baggage_.size();
  }
  /**
   * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.BaggageType Baggage = 3;</code>
   */
  public com.ctrip.flight.intl.agg.flighttypes.v3.BaggageType getBaggage(int index) {
    return baggage_.get(index);
  }
  /**
   * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.BaggageType Baggage = 3;</code>
   */
  public com.ctrip.flight.intl.agg.flighttypes.v3.BaggageTypeOrBuilder getBaggageOrBuilder(
      int index) {
    return baggage_.get(index);
  }

  public static final int TEXTREMARK_FIELD_NUMBER = 4;
  private java.util.List<com.ctrip.flight.intl.agg.flighttypes.v3.TextRemarkType> textRemark_;
  /**
   * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.TextRemarkType TextRemark = 4;</code>
   */
  public java.util.List<com.ctrip.flight.intl.agg.flighttypes.v3.TextRemarkType> getTextRemarkList() {
    return textRemark_;
  }
  /**
   * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.TextRemarkType TextRemark = 4;</code>
   */
  public java.util.List<? extends com.ctrip.flight.intl.agg.flighttypes.v3.TextRemarkTypeOrBuilder> 
      getTextRemarkOrBuilderList() {
    return textRemark_;
  }
  /**
   * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.TextRemarkType TextRemark = 4;</code>
   */
  public int getTextRemarkCount() {
    return textRemark_.size();
  }
  /**
   * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.TextRemarkType TextRemark = 4;</code>
   */
  public com.ctrip.flight.intl.agg.flighttypes.v3.TextRemarkType getTextRemark(int index) {
    return textRemark_.get(index);
  }
  /**
   * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.TextRemarkType TextRemark = 4;</code>
   */
  public com.ctrip.flight.intl.agg.flighttypes.v3.TextRemarkTypeOrBuilder getTextRemarkOrBuilder(
      int index) {
    return textRemark_.get(index);
  }

  public static final int SEARCHCRITERIATOKEN_FIELD_NUMBER = 6;
  private volatile java.lang.Object searchCriteriaToken_;
  /**
   * <code>string SearchCriteriaToken = 6;</code>
   */
  public java.lang.String getSearchCriteriaToken() {
    java.lang.Object ref = searchCriteriaToken_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      searchCriteriaToken_ = s;
      return s;
    }
  }
  /**
   * <code>string SearchCriteriaToken = 6;</code>
   */
  public com.google.protobuf.ByteString
      getSearchCriteriaTokenBytes() {
    java.lang.Object ref = searchCriteriaToken_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      searchCriteriaToken_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int TAG_FIELD_NUMBER = 7;
  private java.util.List<com.ctrip.flight.intl.agg.flighttypes.v3.KeyValuePairType> tag_;
  /**
   * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.KeyValuePairType Tag = 7;</code>
   */
  public java.util.List<com.ctrip.flight.intl.agg.flighttypes.v3.KeyValuePairType> getTagList() {
    return tag_;
  }
  /**
   * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.KeyValuePairType Tag = 7;</code>
   */
  public java.util.List<? extends com.ctrip.flight.intl.agg.flighttypes.v3.KeyValuePairTypeOrBuilder> 
      getTagOrBuilderList() {
    return tag_;
  }
  /**
   * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.KeyValuePairType Tag = 7;</code>
   */
  public int getTagCount() {
    return tag_.size();
  }
  /**
   * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.KeyValuePairType Tag = 7;</code>
   */
  public com.ctrip.flight.intl.agg.flighttypes.v3.KeyValuePairType getTag(int index) {
    return tag_.get(index);
  }
  /**
   * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.KeyValuePairType Tag = 7;</code>
   */
  public com.ctrip.flight.intl.agg.flighttypes.v3.KeyValuePairTypeOrBuilder getTagOrBuilder(
      int index) {
    return tag_.get(index);
  }

  public static final int AGENCY_FIELD_NUMBER = 8;
  private java.util.List<com.ctrip.flight.intl.agg.flighttypes.v3.AgencyType> agency_;
  /**
   * <pre>
   * repeated PriceAttributeType PriceAttribute = 8 ;
   * </pre>
   *
   * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.AgencyType Agency = 8;</code>
   */
  public java.util.List<com.ctrip.flight.intl.agg.flighttypes.v3.AgencyType> getAgencyList() {
    return agency_;
  }
  /**
   * <pre>
   * repeated PriceAttributeType PriceAttribute = 8 ;
   * </pre>
   *
   * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.AgencyType Agency = 8;</code>
   */
  public java.util.List<? extends com.ctrip.flight.intl.agg.flighttypes.v3.AgencyTypeOrBuilder> 
      getAgencyOrBuilderList() {
    return agency_;
  }
  /**
   * <pre>
   * repeated PriceAttributeType PriceAttribute = 8 ;
   * </pre>
   *
   * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.AgencyType Agency = 8;</code>
   */
  public int getAgencyCount() {
    return agency_.size();
  }
  /**
   * <pre>
   * repeated PriceAttributeType PriceAttribute = 8 ;
   * </pre>
   *
   * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.AgencyType Agency = 8;</code>
   */
  public com.ctrip.flight.intl.agg.flighttypes.v3.AgencyType getAgency(int index) {
    return agency_.get(index);
  }
  /**
   * <pre>
   * repeated PriceAttributeType PriceAttribute = 8 ;
   * </pre>
   *
   * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.AgencyType Agency = 8;</code>
   */
  public com.ctrip.flight.intl.agg.flighttypes.v3.AgencyTypeOrBuilder getAgencyOrBuilder(
      int index) {
    return agency_.get(index);
  }

  public static final int AIRLINE_FIELD_NUMBER = 9;
  private java.util.List<com.ctrip.flight.intl.agg.flighttypes.v3.AirlineInfoType> airline_;
  /**
   * <pre>
   *变化 新增航司Ref
   * </pre>
   *
   * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.AirlineInfoType Airline = 9;</code>
   */
  public java.util.List<com.ctrip.flight.intl.agg.flighttypes.v3.AirlineInfoType> getAirlineList() {
    return airline_;
  }
  /**
   * <pre>
   *变化 新增航司Ref
   * </pre>
   *
   * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.AirlineInfoType Airline = 9;</code>
   */
  public java.util.List<? extends com.ctrip.flight.intl.agg.flighttypes.v3.AirlineInfoTypeOrBuilder> 
      getAirlineOrBuilderList() {
    return airline_;
  }
  /**
   * <pre>
   *变化 新增航司Ref
   * </pre>
   *
   * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.AirlineInfoType Airline = 9;</code>
   */
  public int getAirlineCount() {
    return airline_.size();
  }
  /**
   * <pre>
   *变化 新增航司Ref
   * </pre>
   *
   * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.AirlineInfoType Airline = 9;</code>
   */
  public com.ctrip.flight.intl.agg.flighttypes.v3.AirlineInfoType getAirline(int index) {
    return airline_.get(index);
  }
  /**
   * <pre>
   *变化 新增航司Ref
   * </pre>
   *
   * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.AirlineInfoType Airline = 9;</code>
   */
  public com.ctrip.flight.intl.agg.flighttypes.v3.AirlineInfoTypeOrBuilder getAirlineOrBuilder(
      int index) {
    return airline_.get(index);
  }

  public static final int CITY_FIELD_NUMBER = 10;
  private java.util.List<com.ctrip.flight.intl.agg.flighttypes.v3.CityInfoType> city_;
  /**
   * <pre>
   *变化 新增城市Ref
   * </pre>
   *
   * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.CityInfoType City = 10;</code>
   */
  public java.util.List<com.ctrip.flight.intl.agg.flighttypes.v3.CityInfoType> getCityList() {
    return city_;
  }
  /**
   * <pre>
   *变化 新增城市Ref
   * </pre>
   *
   * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.CityInfoType City = 10;</code>
   */
  public java.util.List<? extends com.ctrip.flight.intl.agg.flighttypes.v3.CityInfoTypeOrBuilder> 
      getCityOrBuilderList() {
    return city_;
  }
  /**
   * <pre>
   *变化 新增城市Ref
   * </pre>
   *
   * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.CityInfoType City = 10;</code>
   */
  public int getCityCount() {
    return city_.size();
  }
  /**
   * <pre>
   *变化 新增城市Ref
   * </pre>
   *
   * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.CityInfoType City = 10;</code>
   */
  public com.ctrip.flight.intl.agg.flighttypes.v3.CityInfoType getCity(int index) {
    return city_.get(index);
  }
  /**
   * <pre>
   *变化 新增城市Ref
   * </pre>
   *
   * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.CityInfoType City = 10;</code>
   */
  public com.ctrip.flight.intl.agg.flighttypes.v3.CityInfoTypeOrBuilder getCityOrBuilder(
      int index) {
    return city_.get(index);
  }

  public static final int AIRPORT_FIELD_NUMBER = 11;
  private java.util.List<com.ctrip.flight.intl.agg.flighttypes.v3.AirportInfoType> airport_;
  /**
   * <pre>
   *变化 新增机场Ref
   * </pre>
   *
   * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.AirportInfoType Airport = 11;</code>
   */
  public java.util.List<com.ctrip.flight.intl.agg.flighttypes.v3.AirportInfoType> getAirportList() {
    return airport_;
  }
  /**
   * <pre>
   *变化 新增机场Ref
   * </pre>
   *
   * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.AirportInfoType Airport = 11;</code>
   */
  public java.util.List<? extends com.ctrip.flight.intl.agg.flighttypes.v3.AirportInfoTypeOrBuilder> 
      getAirportOrBuilderList() {
    return airport_;
  }
  /**
   * <pre>
   *变化 新增机场Ref
   * </pre>
   *
   * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.AirportInfoType Airport = 11;</code>
   */
  public int getAirportCount() {
    return airport_.size();
  }
  /**
   * <pre>
   *变化 新增机场Ref
   * </pre>
   *
   * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.AirportInfoType Airport = 11;</code>
   */
  public com.ctrip.flight.intl.agg.flighttypes.v3.AirportInfoType getAirport(int index) {
    return airport_.get(index);
  }
  /**
   * <pre>
   *变化 新增机场Ref
   * </pre>
   *
   * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.AirportInfoType Airport = 11;</code>
   */
  public com.ctrip.flight.intl.agg.flighttypes.v3.AirportInfoTypeOrBuilder getAirportOrBuilder(
      int index) {
    return airport_.get(index);
  }

  public static final int SERVICE_FIELD_NUMBER = 12;
  private java.util.List<com.ctrip.flight.intl.agg.additionproduct.v3.ServiceType> service_;
  /**
   * <pre>
   *变化  新增权益Ref
   * </pre>
   *
   * <code>repeated .com.ctrip.flight.intl.agg.additionproduct.v3.ServiceType Service = 12;</code>
   */
  public java.util.List<com.ctrip.flight.intl.agg.additionproduct.v3.ServiceType> getServiceList() {
    return service_;
  }
  /**
   * <pre>
   *变化  新增权益Ref
   * </pre>
   *
   * <code>repeated .com.ctrip.flight.intl.agg.additionproduct.v3.ServiceType Service = 12;</code>
   */
  public java.util.List<? extends com.ctrip.flight.intl.agg.additionproduct.v3.ServiceTypeOrBuilder> 
      getServiceOrBuilderList() {
    return service_;
  }
  /**
   * <pre>
   *变化  新增权益Ref
   * </pre>
   *
   * <code>repeated .com.ctrip.flight.intl.agg.additionproduct.v3.ServiceType Service = 12;</code>
   */
  public int getServiceCount() {
    return service_.size();
  }
  /**
   * <pre>
   *变化  新增权益Ref
   * </pre>
   *
   * <code>repeated .com.ctrip.flight.intl.agg.additionproduct.v3.ServiceType Service = 12;</code>
   */
  public com.ctrip.flight.intl.agg.additionproduct.v3.ServiceType getService(int index) {
    return service_.get(index);
  }
  /**
   * <pre>
   *变化  新增权益Ref
   * </pre>
   *
   * <code>repeated .com.ctrip.flight.intl.agg.additionproduct.v3.ServiceType Service = 12;</code>
   */
  public com.ctrip.flight.intl.agg.additionproduct.v3.ServiceTypeOrBuilder getServiceOrBuilder(
      int index) {
    return service_.get(index);
  }

  public static final int CACHEINFO_FIELD_NUMBER = 13;
  private java.util.List<com.ctrip.flight.intl.agg.flighttypes.v3.CacheInfoType> cacheInfo_;
  /**
   * <pre>
   * 新增缓存响应Ref
   * </pre>
   *
   * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.CacheInfoType CacheInfo = 13;</code>
   */
  public java.util.List<com.ctrip.flight.intl.agg.flighttypes.v3.CacheInfoType> getCacheInfoList() {
    return cacheInfo_;
  }
  /**
   * <pre>
   * 新增缓存响应Ref
   * </pre>
   *
   * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.CacheInfoType CacheInfo = 13;</code>
   */
  public java.util.List<? extends com.ctrip.flight.intl.agg.flighttypes.v3.CacheInfoTypeOrBuilder> 
      getCacheInfoOrBuilderList() {
    return cacheInfo_;
  }
  /**
   * <pre>
   * 新增缓存响应Ref
   * </pre>
   *
   * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.CacheInfoType CacheInfo = 13;</code>
   */
  public int getCacheInfoCount() {
    return cacheInfo_.size();
  }
  /**
   * <pre>
   * 新增缓存响应Ref
   * </pre>
   *
   * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.CacheInfoType CacheInfo = 13;</code>
   */
  public com.ctrip.flight.intl.agg.flighttypes.v3.CacheInfoType getCacheInfo(int index) {
    return cacheInfo_.get(index);
  }
  /**
   * <pre>
   * 新增缓存响应Ref
   * </pre>
   *
   * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.CacheInfoType CacheInfo = 13;</code>
   */
  public com.ctrip.flight.intl.agg.flighttypes.v3.CacheInfoTypeOrBuilder getCacheInfoOrBuilder(
      int index) {
    return cacheInfo_.get(index);
  }

  public static final int CREDITCARDPAYMENTINFO_FIELD_NUMBER = 14;
  private java.util.List<com.ctrip.flight.intl.agg.flighttypes.v3.CreditCardPaymentInfoType> creditCardPaymentInfo_;
  /**
   * <pre>
   * 信用卡支付信息Ref
   * </pre>
   *
   * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.CreditCardPaymentInfoType CreditCardPaymentInfo = 14;</code>
   */
  public java.util.List<com.ctrip.flight.intl.agg.flighttypes.v3.CreditCardPaymentInfoType> getCreditCardPaymentInfoList() {
    return creditCardPaymentInfo_;
  }
  /**
   * <pre>
   * 信用卡支付信息Ref
   * </pre>
   *
   * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.CreditCardPaymentInfoType CreditCardPaymentInfo = 14;</code>
   */
  public java.util.List<? extends com.ctrip.flight.intl.agg.flighttypes.v3.CreditCardPaymentInfoTypeOrBuilder> 
      getCreditCardPaymentInfoOrBuilderList() {
    return creditCardPaymentInfo_;
  }
  /**
   * <pre>
   * 信用卡支付信息Ref
   * </pre>
   *
   * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.CreditCardPaymentInfoType CreditCardPaymentInfo = 14;</code>
   */
  public int getCreditCardPaymentInfoCount() {
    return creditCardPaymentInfo_.size();
  }
  /**
   * <pre>
   * 信用卡支付信息Ref
   * </pre>
   *
   * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.CreditCardPaymentInfoType CreditCardPaymentInfo = 14;</code>
   */
  public com.ctrip.flight.intl.agg.flighttypes.v3.CreditCardPaymentInfoType getCreditCardPaymentInfo(int index) {
    return creditCardPaymentInfo_.get(index);
  }
  /**
   * <pre>
   * 信用卡支付信息Ref
   * </pre>
   *
   * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.CreditCardPaymentInfoType CreditCardPaymentInfo = 14;</code>
   */
  public com.ctrip.flight.intl.agg.flighttypes.v3.CreditCardPaymentInfoTypeOrBuilder getCreditCardPaymentInfoOrBuilder(
      int index) {
    return creditCardPaymentInfo_.get(index);
  }

  public static final int EXTENDFIELDS_FIELD_NUMBER = 15;
  private java.util.List<com.ctrip.flight.intl.agg.flighttypes.v3.KeyValuePairType> extendFields_;
  /**
   * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.KeyValuePairType ExtendFields = 15;</code>
   */
  public java.util.List<com.ctrip.flight.intl.agg.flighttypes.v3.KeyValuePairType> getExtendFieldsList() {
    return extendFields_;
  }
  /**
   * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.KeyValuePairType ExtendFields = 15;</code>
   */
  public java.util.List<? extends com.ctrip.flight.intl.agg.flighttypes.v3.KeyValuePairTypeOrBuilder> 
      getExtendFieldsOrBuilderList() {
    return extendFields_;
  }
  /**
   * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.KeyValuePairType ExtendFields = 15;</code>
   */
  public int getExtendFieldsCount() {
    return extendFields_.size();
  }
  /**
   * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.KeyValuePairType ExtendFields = 15;</code>
   */
  public com.ctrip.flight.intl.agg.flighttypes.v3.KeyValuePairType getExtendFields(int index) {
    return extendFields_.get(index);
  }
  /**
   * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.KeyValuePairType ExtendFields = 15;</code>
   */
  public com.ctrip.flight.intl.agg.flighttypes.v3.KeyValuePairTypeOrBuilder getExtendFieldsOrBuilder(
      int index) {
    return extendFields_.get(index);
  }

  public static final int PAYMENTDISCOUNT_FIELD_NUMBER = 16;
  private java.util.List<com.ctrip.flight.intl.agg.flighttypes.v3.PaymentDiscountType> paymentDiscount_;
  /**
   * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.PaymentDiscountType PaymentDiscount = 16;</code>
   */
  public java.util.List<com.ctrip.flight.intl.agg.flighttypes.v3.PaymentDiscountType> getPaymentDiscountList() {
    return paymentDiscount_;
  }
  /**
   * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.PaymentDiscountType PaymentDiscount = 16;</code>
   */
  public java.util.List<? extends com.ctrip.flight.intl.agg.flighttypes.v3.PaymentDiscountTypeOrBuilder> 
      getPaymentDiscountOrBuilderList() {
    return paymentDiscount_;
  }
  /**
   * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.PaymentDiscountType PaymentDiscount = 16;</code>
   */
  public int getPaymentDiscountCount() {
    return paymentDiscount_.size();
  }
  /**
   * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.PaymentDiscountType PaymentDiscount = 16;</code>
   */
  public com.ctrip.flight.intl.agg.flighttypes.v3.PaymentDiscountType getPaymentDiscount(int index) {
    return paymentDiscount_.get(index);
  }
  /**
   * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.PaymentDiscountType PaymentDiscount = 16;</code>
   */
  public com.ctrip.flight.intl.agg.flighttypes.v3.PaymentDiscountTypeOrBuilder getPaymentDiscountOrBuilder(
      int index) {
    return paymentDiscount_.get(index);
  }

  public static final int XPRODUCTSEARCHKEY_FIELD_NUMBER = 17;
  private volatile java.lang.Object xproductSearchKey_;
  /**
   * <pre>
   * X产品缓存key，通过本key可调用SearchXproductByKey接口拿到X信息
   * </pre>
   *
   * <code>string XproductSearchKey = 17;</code>
   */
  public java.lang.String getXproductSearchKey() {
    java.lang.Object ref = xproductSearchKey_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      xproductSearchKey_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * X产品缓存key，通过本key可调用SearchXproductByKey接口拿到X信息
   * </pre>
   *
   * <code>string XproductSearchKey = 17;</code>
   */
  public com.google.protobuf.ByteString
      getXproductSearchKeyBytes() {
    java.lang.Object ref = xproductSearchKey_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      xproductSearchKey_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    for (int i = 0; i < flightProductGroup_.size(); i++) {
      output.writeMessage(1, flightProductGroup_.get(i));
    }
    for (int i = 0; i < flight_.size(); i++) {
      output.writeMessage(2, flight_.get(i));
    }
    for (int i = 0; i < baggage_.size(); i++) {
      output.writeMessage(3, baggage_.get(i));
    }
    for (int i = 0; i < textRemark_.size(); i++) {
      output.writeMessage(4, textRemark_.get(i));
    }
    if (!getSearchCriteriaTokenBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 6, searchCriteriaToken_);
    }
    for (int i = 0; i < tag_.size(); i++) {
      output.writeMessage(7, tag_.get(i));
    }
    for (int i = 0; i < agency_.size(); i++) {
      output.writeMessage(8, agency_.get(i));
    }
    for (int i = 0; i < airline_.size(); i++) {
      output.writeMessage(9, airline_.get(i));
    }
    for (int i = 0; i < city_.size(); i++) {
      output.writeMessage(10, city_.get(i));
    }
    for (int i = 0; i < airport_.size(); i++) {
      output.writeMessage(11, airport_.get(i));
    }
    for (int i = 0; i < service_.size(); i++) {
      output.writeMessage(12, service_.get(i));
    }
    for (int i = 0; i < cacheInfo_.size(); i++) {
      output.writeMessage(13, cacheInfo_.get(i));
    }
    for (int i = 0; i < creditCardPaymentInfo_.size(); i++) {
      output.writeMessage(14, creditCardPaymentInfo_.get(i));
    }
    for (int i = 0; i < extendFields_.size(); i++) {
      output.writeMessage(15, extendFields_.get(i));
    }
    for (int i = 0; i < paymentDiscount_.size(); i++) {
      output.writeMessage(16, paymentDiscount_.get(i));
    }
    if (!getXproductSearchKeyBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 17, xproductSearchKey_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    for (int i = 0; i < flightProductGroup_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, flightProductGroup_.get(i));
    }
    for (int i = 0; i < flight_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, flight_.get(i));
    }
    for (int i = 0; i < baggage_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, baggage_.get(i));
    }
    for (int i = 0; i < textRemark_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, textRemark_.get(i));
    }
    if (!getSearchCriteriaTokenBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, searchCriteriaToken_);
    }
    for (int i = 0; i < tag_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(7, tag_.get(i));
    }
    for (int i = 0; i < agency_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(8, agency_.get(i));
    }
    for (int i = 0; i < airline_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(9, airline_.get(i));
    }
    for (int i = 0; i < city_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(10, city_.get(i));
    }
    for (int i = 0; i < airport_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(11, airport_.get(i));
    }
    for (int i = 0; i < service_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(12, service_.get(i));
    }
    for (int i = 0; i < cacheInfo_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(13, cacheInfo_.get(i));
    }
    for (int i = 0; i < creditCardPaymentInfo_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(14, creditCardPaymentInfo_.get(i));
    }
    for (int i = 0; i < extendFields_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(15, extendFields_.get(i));
    }
    for (int i = 0; i < paymentDiscount_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(16, paymentDiscount_.get(i));
    }
    if (!getXproductSearchKeyBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(17, xproductSearchKey_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.ctrip.flight.intl.agg.types.searchresponsetype.v3.SearchResultType)) {
      return super.equals(obj);
    }
    com.ctrip.flight.intl.agg.types.searchresponsetype.v3.SearchResultType other = (com.ctrip.flight.intl.agg.types.searchresponsetype.v3.SearchResultType) obj;

    boolean result = true;
    result = result && getFlightProductGroupList()
        .equals(other.getFlightProductGroupList());
    result = result && getFlightList()
        .equals(other.getFlightList());
    result = result && getBaggageList()
        .equals(other.getBaggageList());
    result = result && getTextRemarkList()
        .equals(other.getTextRemarkList());
    result = result && getSearchCriteriaToken()
        .equals(other.getSearchCriteriaToken());
    result = result && getTagList()
        .equals(other.getTagList());
    result = result && getAgencyList()
        .equals(other.getAgencyList());
    result = result && getAirlineList()
        .equals(other.getAirlineList());
    result = result && getCityList()
        .equals(other.getCityList());
    result = result && getAirportList()
        .equals(other.getAirportList());
    result = result && getServiceList()
        .equals(other.getServiceList());
    result = result && getCacheInfoList()
        .equals(other.getCacheInfoList());
    result = result && getCreditCardPaymentInfoList()
        .equals(other.getCreditCardPaymentInfoList());
    result = result && getExtendFieldsList()
        .equals(other.getExtendFieldsList());
    result = result && getPaymentDiscountList()
        .equals(other.getPaymentDiscountList());
    result = result && getXproductSearchKey()
        .equals(other.getXproductSearchKey());
    result = result && unknownFields.equals(other.unknownFields);
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (getFlightProductGroupCount() > 0) {
      hash = (37 * hash) + FLIGHTPRODUCTGROUP_FIELD_NUMBER;
      hash = (53 * hash) + getFlightProductGroupList().hashCode();
    }
    if (getFlightCount() > 0) {
      hash = (37 * hash) + FLIGHT_FIELD_NUMBER;
      hash = (53 * hash) + getFlightList().hashCode();
    }
    if (getBaggageCount() > 0) {
      hash = (37 * hash) + BAGGAGE_FIELD_NUMBER;
      hash = (53 * hash) + getBaggageList().hashCode();
    }
    if (getTextRemarkCount() > 0) {
      hash = (37 * hash) + TEXTREMARK_FIELD_NUMBER;
      hash = (53 * hash) + getTextRemarkList().hashCode();
    }
    hash = (37 * hash) + SEARCHCRITERIATOKEN_FIELD_NUMBER;
    hash = (53 * hash) + getSearchCriteriaToken().hashCode();
    if (getTagCount() > 0) {
      hash = (37 * hash) + TAG_FIELD_NUMBER;
      hash = (53 * hash) + getTagList().hashCode();
    }
    if (getAgencyCount() > 0) {
      hash = (37 * hash) + AGENCY_FIELD_NUMBER;
      hash = (53 * hash) + getAgencyList().hashCode();
    }
    if (getAirlineCount() > 0) {
      hash = (37 * hash) + AIRLINE_FIELD_NUMBER;
      hash = (53 * hash) + getAirlineList().hashCode();
    }
    if (getCityCount() > 0) {
      hash = (37 * hash) + CITY_FIELD_NUMBER;
      hash = (53 * hash) + getCityList().hashCode();
    }
    if (getAirportCount() > 0) {
      hash = (37 * hash) + AIRPORT_FIELD_NUMBER;
      hash = (53 * hash) + getAirportList().hashCode();
    }
    if (getServiceCount() > 0) {
      hash = (37 * hash) + SERVICE_FIELD_NUMBER;
      hash = (53 * hash) + getServiceList().hashCode();
    }
    if (getCacheInfoCount() > 0) {
      hash = (37 * hash) + CACHEINFO_FIELD_NUMBER;
      hash = (53 * hash) + getCacheInfoList().hashCode();
    }
    if (getCreditCardPaymentInfoCount() > 0) {
      hash = (37 * hash) + CREDITCARDPAYMENTINFO_FIELD_NUMBER;
      hash = (53 * hash) + getCreditCardPaymentInfoList().hashCode();
    }
    if (getExtendFieldsCount() > 0) {
      hash = (37 * hash) + EXTENDFIELDS_FIELD_NUMBER;
      hash = (53 * hash) + getExtendFieldsList().hashCode();
    }
    if (getPaymentDiscountCount() > 0) {
      hash = (37 * hash) + PAYMENTDISCOUNT_FIELD_NUMBER;
      hash = (53 * hash) + getPaymentDiscountList().hashCode();
    }
    hash = (37 * hash) + XPRODUCTSEARCHKEY_FIELD_NUMBER;
    hash = (53 * hash) + getXproductSearchKey().hashCode();
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.ctrip.flight.intl.agg.types.searchresponsetype.v3.SearchResultType parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.ctrip.flight.intl.agg.types.searchresponsetype.v3.SearchResultType parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.ctrip.flight.intl.agg.types.searchresponsetype.v3.SearchResultType parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.ctrip.flight.intl.agg.types.searchresponsetype.v3.SearchResultType parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.ctrip.flight.intl.agg.types.searchresponsetype.v3.SearchResultType parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.ctrip.flight.intl.agg.types.searchresponsetype.v3.SearchResultType parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.ctrip.flight.intl.agg.types.searchresponsetype.v3.SearchResultType parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.ctrip.flight.intl.agg.types.searchresponsetype.v3.SearchResultType parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.ctrip.flight.intl.agg.types.searchresponsetype.v3.SearchResultType parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.ctrip.flight.intl.agg.types.searchresponsetype.v3.SearchResultType parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.ctrip.flight.intl.agg.types.searchresponsetype.v3.SearchResultType parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.ctrip.flight.intl.agg.types.searchresponsetype.v3.SearchResultType parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.ctrip.flight.intl.agg.types.searchresponsetype.v3.SearchResultType prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code com.ctrip.flight.intl.agg.types.searchresponsetype.v3.SearchResultType}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:com.ctrip.flight.intl.agg.types.searchresponsetype.v3.SearchResultType)
      com.ctrip.flight.intl.agg.types.searchresponsetype.v3.SearchResultTypeOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.ctrip.flight.intl.agg.types.searchresponsetype.v3.AggTypesSearchresponsetypeV3.internal_static_com_ctrip_flight_intl_agg_types_searchresponsetype_v3_SearchResultType_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.ctrip.flight.intl.agg.types.searchresponsetype.v3.AggTypesSearchresponsetypeV3.internal_static_com_ctrip_flight_intl_agg_types_searchresponsetype_v3_SearchResultType_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.ctrip.flight.intl.agg.types.searchresponsetype.v3.SearchResultType.class, com.ctrip.flight.intl.agg.types.searchresponsetype.v3.SearchResultType.Builder.class);
    }

    // Construct using com.ctrip.flight.intl.agg.types.searchresponsetype.v3.SearchResultType.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getFlightProductGroupFieldBuilder();
        getFlightFieldBuilder();
        getBaggageFieldBuilder();
        getTextRemarkFieldBuilder();
        getTagFieldBuilder();
        getAgencyFieldBuilder();
        getAirlineFieldBuilder();
        getCityFieldBuilder();
        getAirportFieldBuilder();
        getServiceFieldBuilder();
        getCacheInfoFieldBuilder();
        getCreditCardPaymentInfoFieldBuilder();
        getExtendFieldsFieldBuilder();
        getPaymentDiscountFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      if (flightProductGroupBuilder_ == null) {
        flightProductGroup_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
      } else {
        flightProductGroupBuilder_.clear();
      }
      if (flightBuilder_ == null) {
        flight_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
      } else {
        flightBuilder_.clear();
      }
      if (baggageBuilder_ == null) {
        baggage_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
      } else {
        baggageBuilder_.clear();
      }
      if (textRemarkBuilder_ == null) {
        textRemark_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
      } else {
        textRemarkBuilder_.clear();
      }
      searchCriteriaToken_ = "";

      if (tagBuilder_ == null) {
        tag_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
      } else {
        tagBuilder_.clear();
      }
      if (agencyBuilder_ == null) {
        agency_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
      } else {
        agencyBuilder_.clear();
      }
      if (airlineBuilder_ == null) {
        airline_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000080);
      } else {
        airlineBuilder_.clear();
      }
      if (cityBuilder_ == null) {
        city_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000100);
      } else {
        cityBuilder_.clear();
      }
      if (airportBuilder_ == null) {
        airport_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000200);
      } else {
        airportBuilder_.clear();
      }
      if (serviceBuilder_ == null) {
        service_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000400);
      } else {
        serviceBuilder_.clear();
      }
      if (cacheInfoBuilder_ == null) {
        cacheInfo_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000800);
      } else {
        cacheInfoBuilder_.clear();
      }
      if (creditCardPaymentInfoBuilder_ == null) {
        creditCardPaymentInfo_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00001000);
      } else {
        creditCardPaymentInfoBuilder_.clear();
      }
      if (extendFieldsBuilder_ == null) {
        extendFields_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00002000);
      } else {
        extendFieldsBuilder_.clear();
      }
      if (paymentDiscountBuilder_ == null) {
        paymentDiscount_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00004000);
      } else {
        paymentDiscountBuilder_.clear();
      }
      xproductSearchKey_ = "";

      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.ctrip.flight.intl.agg.types.searchresponsetype.v3.AggTypesSearchresponsetypeV3.internal_static_com_ctrip_flight_intl_agg_types_searchresponsetype_v3_SearchResultType_descriptor;
    }

    @java.lang.Override
    public com.ctrip.flight.intl.agg.types.searchresponsetype.v3.SearchResultType getDefaultInstanceForType() {
      return com.ctrip.flight.intl.agg.types.searchresponsetype.v3.SearchResultType.getDefaultInstance();
    }

    @java.lang.Override
    public com.ctrip.flight.intl.agg.types.searchresponsetype.v3.SearchResultType build() {
      com.ctrip.flight.intl.agg.types.searchresponsetype.v3.SearchResultType result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.ctrip.flight.intl.agg.types.searchresponsetype.v3.SearchResultType buildPartial() {
      com.ctrip.flight.intl.agg.types.searchresponsetype.v3.SearchResultType result = new com.ctrip.flight.intl.agg.types.searchresponsetype.v3.SearchResultType(this);
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (flightProductGroupBuilder_ == null) {
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          flightProductGroup_ = java.util.Collections.unmodifiableList(flightProductGroup_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.flightProductGroup_ = flightProductGroup_;
      } else {
        result.flightProductGroup_ = flightProductGroupBuilder_.build();
      }
      if (flightBuilder_ == null) {
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          flight_ = java.util.Collections.unmodifiableList(flight_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.flight_ = flight_;
      } else {
        result.flight_ = flightBuilder_.build();
      }
      if (baggageBuilder_ == null) {
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          baggage_ = java.util.Collections.unmodifiableList(baggage_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.baggage_ = baggage_;
      } else {
        result.baggage_ = baggageBuilder_.build();
      }
      if (textRemarkBuilder_ == null) {
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          textRemark_ = java.util.Collections.unmodifiableList(textRemark_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.textRemark_ = textRemark_;
      } else {
        result.textRemark_ = textRemarkBuilder_.build();
      }
      result.searchCriteriaToken_ = searchCriteriaToken_;
      if (tagBuilder_ == null) {
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          tag_ = java.util.Collections.unmodifiableList(tag_);
          bitField0_ = (bitField0_ & ~0x00000020);
        }
        result.tag_ = tag_;
      } else {
        result.tag_ = tagBuilder_.build();
      }
      if (agencyBuilder_ == null) {
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          agency_ = java.util.Collections.unmodifiableList(agency_);
          bitField0_ = (bitField0_ & ~0x00000040);
        }
        result.agency_ = agency_;
      } else {
        result.agency_ = agencyBuilder_.build();
      }
      if (airlineBuilder_ == null) {
        if (((bitField0_ & 0x00000080) == 0x00000080)) {
          airline_ = java.util.Collections.unmodifiableList(airline_);
          bitField0_ = (bitField0_ & ~0x00000080);
        }
        result.airline_ = airline_;
      } else {
        result.airline_ = airlineBuilder_.build();
      }
      if (cityBuilder_ == null) {
        if (((bitField0_ & 0x00000100) == 0x00000100)) {
          city_ = java.util.Collections.unmodifiableList(city_);
          bitField0_ = (bitField0_ & ~0x00000100);
        }
        result.city_ = city_;
      } else {
        result.city_ = cityBuilder_.build();
      }
      if (airportBuilder_ == null) {
        if (((bitField0_ & 0x00000200) == 0x00000200)) {
          airport_ = java.util.Collections.unmodifiableList(airport_);
          bitField0_ = (bitField0_ & ~0x00000200);
        }
        result.airport_ = airport_;
      } else {
        result.airport_ = airportBuilder_.build();
      }
      if (serviceBuilder_ == null) {
        if (((bitField0_ & 0x00000400) == 0x00000400)) {
          service_ = java.util.Collections.unmodifiableList(service_);
          bitField0_ = (bitField0_ & ~0x00000400);
        }
        result.service_ = service_;
      } else {
        result.service_ = serviceBuilder_.build();
      }
      if (cacheInfoBuilder_ == null) {
        if (((bitField0_ & 0x00000800) == 0x00000800)) {
          cacheInfo_ = java.util.Collections.unmodifiableList(cacheInfo_);
          bitField0_ = (bitField0_ & ~0x00000800);
        }
        result.cacheInfo_ = cacheInfo_;
      } else {
        result.cacheInfo_ = cacheInfoBuilder_.build();
      }
      if (creditCardPaymentInfoBuilder_ == null) {
        if (((bitField0_ & 0x00001000) == 0x00001000)) {
          creditCardPaymentInfo_ = java.util.Collections.unmodifiableList(creditCardPaymentInfo_);
          bitField0_ = (bitField0_ & ~0x00001000);
        }
        result.creditCardPaymentInfo_ = creditCardPaymentInfo_;
      } else {
        result.creditCardPaymentInfo_ = creditCardPaymentInfoBuilder_.build();
      }
      if (extendFieldsBuilder_ == null) {
        if (((bitField0_ & 0x00002000) == 0x00002000)) {
          extendFields_ = java.util.Collections.unmodifiableList(extendFields_);
          bitField0_ = (bitField0_ & ~0x00002000);
        }
        result.extendFields_ = extendFields_;
      } else {
        result.extendFields_ = extendFieldsBuilder_.build();
      }
      if (paymentDiscountBuilder_ == null) {
        if (((bitField0_ & 0x00004000) == 0x00004000)) {
          paymentDiscount_ = java.util.Collections.unmodifiableList(paymentDiscount_);
          bitField0_ = (bitField0_ & ~0x00004000);
        }
        result.paymentDiscount_ = paymentDiscount_;
      } else {
        result.paymentDiscount_ = paymentDiscountBuilder_.build();
      }
      result.xproductSearchKey_ = xproductSearchKey_;
      result.bitField0_ = to_bitField0_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return (Builder) super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.ctrip.flight.intl.agg.types.searchresponsetype.v3.SearchResultType) {
        return mergeFrom((com.ctrip.flight.intl.agg.types.searchresponsetype.v3.SearchResultType)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.ctrip.flight.intl.agg.types.searchresponsetype.v3.SearchResultType other) {
      if (other == com.ctrip.flight.intl.agg.types.searchresponsetype.v3.SearchResultType.getDefaultInstance()) return this;
      if (flightProductGroupBuilder_ == null) {
        if (!other.flightProductGroup_.isEmpty()) {
          if (flightProductGroup_.isEmpty()) {
            flightProductGroup_ = other.flightProductGroup_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureFlightProductGroupIsMutable();
            flightProductGroup_.addAll(other.flightProductGroup_);
          }
          onChanged();
        }
      } else {
        if (!other.flightProductGroup_.isEmpty()) {
          if (flightProductGroupBuilder_.isEmpty()) {
            flightProductGroupBuilder_.dispose();
            flightProductGroupBuilder_ = null;
            flightProductGroup_ = other.flightProductGroup_;
            bitField0_ = (bitField0_ & ~0x00000001);
            flightProductGroupBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getFlightProductGroupFieldBuilder() : null;
          } else {
            flightProductGroupBuilder_.addAllMessages(other.flightProductGroup_);
          }
        }
      }
      if (flightBuilder_ == null) {
        if (!other.flight_.isEmpty()) {
          if (flight_.isEmpty()) {
            flight_ = other.flight_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureFlightIsMutable();
            flight_.addAll(other.flight_);
          }
          onChanged();
        }
      } else {
        if (!other.flight_.isEmpty()) {
          if (flightBuilder_.isEmpty()) {
            flightBuilder_.dispose();
            flightBuilder_ = null;
            flight_ = other.flight_;
            bitField0_ = (bitField0_ & ~0x00000002);
            flightBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getFlightFieldBuilder() : null;
          } else {
            flightBuilder_.addAllMessages(other.flight_);
          }
        }
      }
      if (baggageBuilder_ == null) {
        if (!other.baggage_.isEmpty()) {
          if (baggage_.isEmpty()) {
            baggage_ = other.baggage_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureBaggageIsMutable();
            baggage_.addAll(other.baggage_);
          }
          onChanged();
        }
      } else {
        if (!other.baggage_.isEmpty()) {
          if (baggageBuilder_.isEmpty()) {
            baggageBuilder_.dispose();
            baggageBuilder_ = null;
            baggage_ = other.baggage_;
            bitField0_ = (bitField0_ & ~0x00000004);
            baggageBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getBaggageFieldBuilder() : null;
          } else {
            baggageBuilder_.addAllMessages(other.baggage_);
          }
        }
      }
      if (textRemarkBuilder_ == null) {
        if (!other.textRemark_.isEmpty()) {
          if (textRemark_.isEmpty()) {
            textRemark_ = other.textRemark_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureTextRemarkIsMutable();
            textRemark_.addAll(other.textRemark_);
          }
          onChanged();
        }
      } else {
        if (!other.textRemark_.isEmpty()) {
          if (textRemarkBuilder_.isEmpty()) {
            textRemarkBuilder_.dispose();
            textRemarkBuilder_ = null;
            textRemark_ = other.textRemark_;
            bitField0_ = (bitField0_ & ~0x00000008);
            textRemarkBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getTextRemarkFieldBuilder() : null;
          } else {
            textRemarkBuilder_.addAllMessages(other.textRemark_);
          }
        }
      }
      if (!other.getSearchCriteriaToken().isEmpty()) {
        searchCriteriaToken_ = other.searchCriteriaToken_;
        onChanged();
      }
      if (tagBuilder_ == null) {
        if (!other.tag_.isEmpty()) {
          if (tag_.isEmpty()) {
            tag_ = other.tag_;
            bitField0_ = (bitField0_ & ~0x00000020);
          } else {
            ensureTagIsMutable();
            tag_.addAll(other.tag_);
          }
          onChanged();
        }
      } else {
        if (!other.tag_.isEmpty()) {
          if (tagBuilder_.isEmpty()) {
            tagBuilder_.dispose();
            tagBuilder_ = null;
            tag_ = other.tag_;
            bitField0_ = (bitField0_ & ~0x00000020);
            tagBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getTagFieldBuilder() : null;
          } else {
            tagBuilder_.addAllMessages(other.tag_);
          }
        }
      }
      if (agencyBuilder_ == null) {
        if (!other.agency_.isEmpty()) {
          if (agency_.isEmpty()) {
            agency_ = other.agency_;
            bitField0_ = (bitField0_ & ~0x00000040);
          } else {
            ensureAgencyIsMutable();
            agency_.addAll(other.agency_);
          }
          onChanged();
        }
      } else {
        if (!other.agency_.isEmpty()) {
          if (agencyBuilder_.isEmpty()) {
            agencyBuilder_.dispose();
            agencyBuilder_ = null;
            agency_ = other.agency_;
            bitField0_ = (bitField0_ & ~0x00000040);
            agencyBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getAgencyFieldBuilder() : null;
          } else {
            agencyBuilder_.addAllMessages(other.agency_);
          }
        }
      }
      if (airlineBuilder_ == null) {
        if (!other.airline_.isEmpty()) {
          if (airline_.isEmpty()) {
            airline_ = other.airline_;
            bitField0_ = (bitField0_ & ~0x00000080);
          } else {
            ensureAirlineIsMutable();
            airline_.addAll(other.airline_);
          }
          onChanged();
        }
      } else {
        if (!other.airline_.isEmpty()) {
          if (airlineBuilder_.isEmpty()) {
            airlineBuilder_.dispose();
            airlineBuilder_ = null;
            airline_ = other.airline_;
            bitField0_ = (bitField0_ & ~0x00000080);
            airlineBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getAirlineFieldBuilder() : null;
          } else {
            airlineBuilder_.addAllMessages(other.airline_);
          }
        }
      }
      if (cityBuilder_ == null) {
        if (!other.city_.isEmpty()) {
          if (city_.isEmpty()) {
            city_ = other.city_;
            bitField0_ = (bitField0_ & ~0x00000100);
          } else {
            ensureCityIsMutable();
            city_.addAll(other.city_);
          }
          onChanged();
        }
      } else {
        if (!other.city_.isEmpty()) {
          if (cityBuilder_.isEmpty()) {
            cityBuilder_.dispose();
            cityBuilder_ = null;
            city_ = other.city_;
            bitField0_ = (bitField0_ & ~0x00000100);
            cityBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getCityFieldBuilder() : null;
          } else {
            cityBuilder_.addAllMessages(other.city_);
          }
        }
      }
      if (airportBuilder_ == null) {
        if (!other.airport_.isEmpty()) {
          if (airport_.isEmpty()) {
            airport_ = other.airport_;
            bitField0_ = (bitField0_ & ~0x00000200);
          } else {
            ensureAirportIsMutable();
            airport_.addAll(other.airport_);
          }
          onChanged();
        }
      } else {
        if (!other.airport_.isEmpty()) {
          if (airportBuilder_.isEmpty()) {
            airportBuilder_.dispose();
            airportBuilder_ = null;
            airport_ = other.airport_;
            bitField0_ = (bitField0_ & ~0x00000200);
            airportBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getAirportFieldBuilder() : null;
          } else {
            airportBuilder_.addAllMessages(other.airport_);
          }
        }
      }
      if (serviceBuilder_ == null) {
        if (!other.service_.isEmpty()) {
          if (service_.isEmpty()) {
            service_ = other.service_;
            bitField0_ = (bitField0_ & ~0x00000400);
          } else {
            ensureServiceIsMutable();
            service_.addAll(other.service_);
          }
          onChanged();
        }
      } else {
        if (!other.service_.isEmpty()) {
          if (serviceBuilder_.isEmpty()) {
            serviceBuilder_.dispose();
            serviceBuilder_ = null;
            service_ = other.service_;
            bitField0_ = (bitField0_ & ~0x00000400);
            serviceBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getServiceFieldBuilder() : null;
          } else {
            serviceBuilder_.addAllMessages(other.service_);
          }
        }
      }
      if (cacheInfoBuilder_ == null) {
        if (!other.cacheInfo_.isEmpty()) {
          if (cacheInfo_.isEmpty()) {
            cacheInfo_ = other.cacheInfo_;
            bitField0_ = (bitField0_ & ~0x00000800);
          } else {
            ensureCacheInfoIsMutable();
            cacheInfo_.addAll(other.cacheInfo_);
          }
          onChanged();
        }
      } else {
        if (!other.cacheInfo_.isEmpty()) {
          if (cacheInfoBuilder_.isEmpty()) {
            cacheInfoBuilder_.dispose();
            cacheInfoBuilder_ = null;
            cacheInfo_ = other.cacheInfo_;
            bitField0_ = (bitField0_ & ~0x00000800);
            cacheInfoBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getCacheInfoFieldBuilder() : null;
          } else {
            cacheInfoBuilder_.addAllMessages(other.cacheInfo_);
          }
        }
      }
      if (creditCardPaymentInfoBuilder_ == null) {
        if (!other.creditCardPaymentInfo_.isEmpty()) {
          if (creditCardPaymentInfo_.isEmpty()) {
            creditCardPaymentInfo_ = other.creditCardPaymentInfo_;
            bitField0_ = (bitField0_ & ~0x00001000);
          } else {
            ensureCreditCardPaymentInfoIsMutable();
            creditCardPaymentInfo_.addAll(other.creditCardPaymentInfo_);
          }
          onChanged();
        }
      } else {
        if (!other.creditCardPaymentInfo_.isEmpty()) {
          if (creditCardPaymentInfoBuilder_.isEmpty()) {
            creditCardPaymentInfoBuilder_.dispose();
            creditCardPaymentInfoBuilder_ = null;
            creditCardPaymentInfo_ = other.creditCardPaymentInfo_;
            bitField0_ = (bitField0_ & ~0x00001000);
            creditCardPaymentInfoBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getCreditCardPaymentInfoFieldBuilder() : null;
          } else {
            creditCardPaymentInfoBuilder_.addAllMessages(other.creditCardPaymentInfo_);
          }
        }
      }
      if (extendFieldsBuilder_ == null) {
        if (!other.extendFields_.isEmpty()) {
          if (extendFields_.isEmpty()) {
            extendFields_ = other.extendFields_;
            bitField0_ = (bitField0_ & ~0x00002000);
          } else {
            ensureExtendFieldsIsMutable();
            extendFields_.addAll(other.extendFields_);
          }
          onChanged();
        }
      } else {
        if (!other.extendFields_.isEmpty()) {
          if (extendFieldsBuilder_.isEmpty()) {
            extendFieldsBuilder_.dispose();
            extendFieldsBuilder_ = null;
            extendFields_ = other.extendFields_;
            bitField0_ = (bitField0_ & ~0x00002000);
            extendFieldsBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getExtendFieldsFieldBuilder() : null;
          } else {
            extendFieldsBuilder_.addAllMessages(other.extendFields_);
          }
        }
      }
      if (paymentDiscountBuilder_ == null) {
        if (!other.paymentDiscount_.isEmpty()) {
          if (paymentDiscount_.isEmpty()) {
            paymentDiscount_ = other.paymentDiscount_;
            bitField0_ = (bitField0_ & ~0x00004000);
          } else {
            ensurePaymentDiscountIsMutable();
            paymentDiscount_.addAll(other.paymentDiscount_);
          }
          onChanged();
        }
      } else {
        if (!other.paymentDiscount_.isEmpty()) {
          if (paymentDiscountBuilder_.isEmpty()) {
            paymentDiscountBuilder_.dispose();
            paymentDiscountBuilder_ = null;
            paymentDiscount_ = other.paymentDiscount_;
            bitField0_ = (bitField0_ & ~0x00004000);
            paymentDiscountBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getPaymentDiscountFieldBuilder() : null;
          } else {
            paymentDiscountBuilder_.addAllMessages(other.paymentDiscount_);
          }
        }
      }
      if (!other.getXproductSearchKey().isEmpty()) {
        xproductSearchKey_ = other.xproductSearchKey_;
        onChanged();
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.ctrip.flight.intl.agg.types.searchresponsetype.v3.SearchResultType parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.ctrip.flight.intl.agg.types.searchresponsetype.v3.SearchResultType) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private java.util.List<com.ctrip.flight.intl.agg.types.searchresponsetype.v3.FlightProductGroupType> flightProductGroup_ =
      java.util.Collections.emptyList();
    private void ensureFlightProductGroupIsMutable() {
      if (!((bitField0_ & 0x00000001) == 0x00000001)) {
        flightProductGroup_ = new java.util.ArrayList<com.ctrip.flight.intl.agg.types.searchresponsetype.v3.FlightProductGroupType>(flightProductGroup_);
        bitField0_ |= 0x00000001;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.ctrip.flight.intl.agg.types.searchresponsetype.v3.FlightProductGroupType, com.ctrip.flight.intl.agg.types.searchresponsetype.v3.FlightProductGroupType.Builder, com.ctrip.flight.intl.agg.types.searchresponsetype.v3.FlightProductGroupTypeOrBuilder> flightProductGroupBuilder_;

    /**
     * <code>repeated .com.ctrip.flight.intl.agg.types.searchresponsetype.v3.FlightProductGroupType FlightProductGroup = 1;</code>
     */
    public java.util.List<com.ctrip.flight.intl.agg.types.searchresponsetype.v3.FlightProductGroupType> getFlightProductGroupList() {
      if (flightProductGroupBuilder_ == null) {
        return java.util.Collections.unmodifiableList(flightProductGroup_);
      } else {
        return flightProductGroupBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.types.searchresponsetype.v3.FlightProductGroupType FlightProductGroup = 1;</code>
     */
    public int getFlightProductGroupCount() {
      if (flightProductGroupBuilder_ == null) {
        return flightProductGroup_.size();
      } else {
        return flightProductGroupBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.types.searchresponsetype.v3.FlightProductGroupType FlightProductGroup = 1;</code>
     */
    public com.ctrip.flight.intl.agg.types.searchresponsetype.v3.FlightProductGroupType getFlightProductGroup(int index) {
      if (flightProductGroupBuilder_ == null) {
        return flightProductGroup_.get(index);
      } else {
        return flightProductGroupBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.types.searchresponsetype.v3.FlightProductGroupType FlightProductGroup = 1;</code>
     */
    public Builder setFlightProductGroup(
        int index, com.ctrip.flight.intl.agg.types.searchresponsetype.v3.FlightProductGroupType value) {
      if (flightProductGroupBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureFlightProductGroupIsMutable();
        flightProductGroup_.set(index, value);
        onChanged();
      } else {
        flightProductGroupBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.types.searchresponsetype.v3.FlightProductGroupType FlightProductGroup = 1;</code>
     */
    public Builder setFlightProductGroup(
        int index, com.ctrip.flight.intl.agg.types.searchresponsetype.v3.FlightProductGroupType.Builder builderForValue) {
      if (flightProductGroupBuilder_ == null) {
        ensureFlightProductGroupIsMutable();
        flightProductGroup_.set(index, builderForValue.build());
        onChanged();
      } else {
        flightProductGroupBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.types.searchresponsetype.v3.FlightProductGroupType FlightProductGroup = 1;</code>
     */
    public Builder addFlightProductGroup(com.ctrip.flight.intl.agg.types.searchresponsetype.v3.FlightProductGroupType value) {
      if (flightProductGroupBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureFlightProductGroupIsMutable();
        flightProductGroup_.add(value);
        onChanged();
      } else {
        flightProductGroupBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.types.searchresponsetype.v3.FlightProductGroupType FlightProductGroup = 1;</code>
     */
    public Builder addFlightProductGroup(
        int index, com.ctrip.flight.intl.agg.types.searchresponsetype.v3.FlightProductGroupType value) {
      if (flightProductGroupBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureFlightProductGroupIsMutable();
        flightProductGroup_.add(index, value);
        onChanged();
      } else {
        flightProductGroupBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.types.searchresponsetype.v3.FlightProductGroupType FlightProductGroup = 1;</code>
     */
    public Builder addFlightProductGroup(
        com.ctrip.flight.intl.agg.types.searchresponsetype.v3.FlightProductGroupType.Builder builderForValue) {
      if (flightProductGroupBuilder_ == null) {
        ensureFlightProductGroupIsMutable();
        flightProductGroup_.add(builderForValue.build());
        onChanged();
      } else {
        flightProductGroupBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.types.searchresponsetype.v3.FlightProductGroupType FlightProductGroup = 1;</code>
     */
    public Builder addFlightProductGroup(
        int index, com.ctrip.flight.intl.agg.types.searchresponsetype.v3.FlightProductGroupType.Builder builderForValue) {
      if (flightProductGroupBuilder_ == null) {
        ensureFlightProductGroupIsMutable();
        flightProductGroup_.add(index, builderForValue.build());
        onChanged();
      } else {
        flightProductGroupBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.types.searchresponsetype.v3.FlightProductGroupType FlightProductGroup = 1;</code>
     */
    public Builder addAllFlightProductGroup(
        java.lang.Iterable<? extends com.ctrip.flight.intl.agg.types.searchresponsetype.v3.FlightProductGroupType> values) {
      if (flightProductGroupBuilder_ == null) {
        ensureFlightProductGroupIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, flightProductGroup_);
        onChanged();
      } else {
        flightProductGroupBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.types.searchresponsetype.v3.FlightProductGroupType FlightProductGroup = 1;</code>
     */
    public Builder clearFlightProductGroup() {
      if (flightProductGroupBuilder_ == null) {
        flightProductGroup_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
      } else {
        flightProductGroupBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.types.searchresponsetype.v3.FlightProductGroupType FlightProductGroup = 1;</code>
     */
    public Builder removeFlightProductGroup(int index) {
      if (flightProductGroupBuilder_ == null) {
        ensureFlightProductGroupIsMutable();
        flightProductGroup_.remove(index);
        onChanged();
      } else {
        flightProductGroupBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.types.searchresponsetype.v3.FlightProductGroupType FlightProductGroup = 1;</code>
     */
    public com.ctrip.flight.intl.agg.types.searchresponsetype.v3.FlightProductGroupType.Builder getFlightProductGroupBuilder(
        int index) {
      return getFlightProductGroupFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.types.searchresponsetype.v3.FlightProductGroupType FlightProductGroup = 1;</code>
     */
    public com.ctrip.flight.intl.agg.types.searchresponsetype.v3.FlightProductGroupTypeOrBuilder getFlightProductGroupOrBuilder(
        int index) {
      if (flightProductGroupBuilder_ == null) {
        return flightProductGroup_.get(index);  } else {
        return flightProductGroupBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.types.searchresponsetype.v3.FlightProductGroupType FlightProductGroup = 1;</code>
     */
    public java.util.List<? extends com.ctrip.flight.intl.agg.types.searchresponsetype.v3.FlightProductGroupTypeOrBuilder> 
         getFlightProductGroupOrBuilderList() {
      if (flightProductGroupBuilder_ != null) {
        return flightProductGroupBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(flightProductGroup_);
      }
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.types.searchresponsetype.v3.FlightProductGroupType FlightProductGroup = 1;</code>
     */
    public com.ctrip.flight.intl.agg.types.searchresponsetype.v3.FlightProductGroupType.Builder addFlightProductGroupBuilder() {
      return getFlightProductGroupFieldBuilder().addBuilder(
          com.ctrip.flight.intl.agg.types.searchresponsetype.v3.FlightProductGroupType.getDefaultInstance());
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.types.searchresponsetype.v3.FlightProductGroupType FlightProductGroup = 1;</code>
     */
    public com.ctrip.flight.intl.agg.types.searchresponsetype.v3.FlightProductGroupType.Builder addFlightProductGroupBuilder(
        int index) {
      return getFlightProductGroupFieldBuilder().addBuilder(
          index, com.ctrip.flight.intl.agg.types.searchresponsetype.v3.FlightProductGroupType.getDefaultInstance());
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.types.searchresponsetype.v3.FlightProductGroupType FlightProductGroup = 1;</code>
     */
    public java.util.List<com.ctrip.flight.intl.agg.types.searchresponsetype.v3.FlightProductGroupType.Builder> 
         getFlightProductGroupBuilderList() {
      return getFlightProductGroupFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.ctrip.flight.intl.agg.types.searchresponsetype.v3.FlightProductGroupType, com.ctrip.flight.intl.agg.types.searchresponsetype.v3.FlightProductGroupType.Builder, com.ctrip.flight.intl.agg.types.searchresponsetype.v3.FlightProductGroupTypeOrBuilder> 
        getFlightProductGroupFieldBuilder() {
      if (flightProductGroupBuilder_ == null) {
        flightProductGroupBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.ctrip.flight.intl.agg.types.searchresponsetype.v3.FlightProductGroupType, com.ctrip.flight.intl.agg.types.searchresponsetype.v3.FlightProductGroupType.Builder, com.ctrip.flight.intl.agg.types.searchresponsetype.v3.FlightProductGroupTypeOrBuilder>(
                flightProductGroup_,
                ((bitField0_ & 0x00000001) == 0x00000001),
                getParentForChildren(),
                isClean());
        flightProductGroup_ = null;
      }
      return flightProductGroupBuilder_;
    }

    private java.util.List<com.ctrip.flight.intl.agg.flighttypes.v3.FlightType> flight_ =
      java.util.Collections.emptyList();
    private void ensureFlightIsMutable() {
      if (!((bitField0_ & 0x00000002) == 0x00000002)) {
        flight_ = new java.util.ArrayList<com.ctrip.flight.intl.agg.flighttypes.v3.FlightType>(flight_);
        bitField0_ |= 0x00000002;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.ctrip.flight.intl.agg.flighttypes.v3.FlightType, com.ctrip.flight.intl.agg.flighttypes.v3.FlightType.Builder, com.ctrip.flight.intl.agg.flighttypes.v3.FlightTypeOrBuilder> flightBuilder_;

    /**
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.FlightType Flight = 2;</code>
     */
    public java.util.List<com.ctrip.flight.intl.agg.flighttypes.v3.FlightType> getFlightList() {
      if (flightBuilder_ == null) {
        return java.util.Collections.unmodifiableList(flight_);
      } else {
        return flightBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.FlightType Flight = 2;</code>
     */
    public int getFlightCount() {
      if (flightBuilder_ == null) {
        return flight_.size();
      } else {
        return flightBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.FlightType Flight = 2;</code>
     */
    public com.ctrip.flight.intl.agg.flighttypes.v3.FlightType getFlight(int index) {
      if (flightBuilder_ == null) {
        return flight_.get(index);
      } else {
        return flightBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.FlightType Flight = 2;</code>
     */
    public Builder setFlight(
        int index, com.ctrip.flight.intl.agg.flighttypes.v3.FlightType value) {
      if (flightBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureFlightIsMutable();
        flight_.set(index, value);
        onChanged();
      } else {
        flightBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.FlightType Flight = 2;</code>
     */
    public Builder setFlight(
        int index, com.ctrip.flight.intl.agg.flighttypes.v3.FlightType.Builder builderForValue) {
      if (flightBuilder_ == null) {
        ensureFlightIsMutable();
        flight_.set(index, builderForValue.build());
        onChanged();
      } else {
        flightBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.FlightType Flight = 2;</code>
     */
    public Builder addFlight(com.ctrip.flight.intl.agg.flighttypes.v3.FlightType value) {
      if (flightBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureFlightIsMutable();
        flight_.add(value);
        onChanged();
      } else {
        flightBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.FlightType Flight = 2;</code>
     */
    public Builder addFlight(
        int index, com.ctrip.flight.intl.agg.flighttypes.v3.FlightType value) {
      if (flightBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureFlightIsMutable();
        flight_.add(index, value);
        onChanged();
      } else {
        flightBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.FlightType Flight = 2;</code>
     */
    public Builder addFlight(
        com.ctrip.flight.intl.agg.flighttypes.v3.FlightType.Builder builderForValue) {
      if (flightBuilder_ == null) {
        ensureFlightIsMutable();
        flight_.add(builderForValue.build());
        onChanged();
      } else {
        flightBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.FlightType Flight = 2;</code>
     */
    public Builder addFlight(
        int index, com.ctrip.flight.intl.agg.flighttypes.v3.FlightType.Builder builderForValue) {
      if (flightBuilder_ == null) {
        ensureFlightIsMutable();
        flight_.add(index, builderForValue.build());
        onChanged();
      } else {
        flightBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.FlightType Flight = 2;</code>
     */
    public Builder addAllFlight(
        java.lang.Iterable<? extends com.ctrip.flight.intl.agg.flighttypes.v3.FlightType> values) {
      if (flightBuilder_ == null) {
        ensureFlightIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, flight_);
        onChanged();
      } else {
        flightBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.FlightType Flight = 2;</code>
     */
    public Builder clearFlight() {
      if (flightBuilder_ == null) {
        flight_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
      } else {
        flightBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.FlightType Flight = 2;</code>
     */
    public Builder removeFlight(int index) {
      if (flightBuilder_ == null) {
        ensureFlightIsMutable();
        flight_.remove(index);
        onChanged();
      } else {
        flightBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.FlightType Flight = 2;</code>
     */
    public com.ctrip.flight.intl.agg.flighttypes.v3.FlightType.Builder getFlightBuilder(
        int index) {
      return getFlightFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.FlightType Flight = 2;</code>
     */
    public com.ctrip.flight.intl.agg.flighttypes.v3.FlightTypeOrBuilder getFlightOrBuilder(
        int index) {
      if (flightBuilder_ == null) {
        return flight_.get(index);  } else {
        return flightBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.FlightType Flight = 2;</code>
     */
    public java.util.List<? extends com.ctrip.flight.intl.agg.flighttypes.v3.FlightTypeOrBuilder> 
         getFlightOrBuilderList() {
      if (flightBuilder_ != null) {
        return flightBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(flight_);
      }
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.FlightType Flight = 2;</code>
     */
    public com.ctrip.flight.intl.agg.flighttypes.v3.FlightType.Builder addFlightBuilder() {
      return getFlightFieldBuilder().addBuilder(
          com.ctrip.flight.intl.agg.flighttypes.v3.FlightType.getDefaultInstance());
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.FlightType Flight = 2;</code>
     */
    public com.ctrip.flight.intl.agg.flighttypes.v3.FlightType.Builder addFlightBuilder(
        int index) {
      return getFlightFieldBuilder().addBuilder(
          index, com.ctrip.flight.intl.agg.flighttypes.v3.FlightType.getDefaultInstance());
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.FlightType Flight = 2;</code>
     */
    public java.util.List<com.ctrip.flight.intl.agg.flighttypes.v3.FlightType.Builder> 
         getFlightBuilderList() {
      return getFlightFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.ctrip.flight.intl.agg.flighttypes.v3.FlightType, com.ctrip.flight.intl.agg.flighttypes.v3.FlightType.Builder, com.ctrip.flight.intl.agg.flighttypes.v3.FlightTypeOrBuilder> 
        getFlightFieldBuilder() {
      if (flightBuilder_ == null) {
        flightBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.ctrip.flight.intl.agg.flighttypes.v3.FlightType, com.ctrip.flight.intl.agg.flighttypes.v3.FlightType.Builder, com.ctrip.flight.intl.agg.flighttypes.v3.FlightTypeOrBuilder>(
                flight_,
                ((bitField0_ & 0x00000002) == 0x00000002),
                getParentForChildren(),
                isClean());
        flight_ = null;
      }
      return flightBuilder_;
    }

    private java.util.List<com.ctrip.flight.intl.agg.flighttypes.v3.BaggageType> baggage_ =
      java.util.Collections.emptyList();
    private void ensureBaggageIsMutable() {
      if (!((bitField0_ & 0x00000004) == 0x00000004)) {
        baggage_ = new java.util.ArrayList<com.ctrip.flight.intl.agg.flighttypes.v3.BaggageType>(baggage_);
        bitField0_ |= 0x00000004;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.ctrip.flight.intl.agg.flighttypes.v3.BaggageType, com.ctrip.flight.intl.agg.flighttypes.v3.BaggageType.Builder, com.ctrip.flight.intl.agg.flighttypes.v3.BaggageTypeOrBuilder> baggageBuilder_;

    /**
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.BaggageType Baggage = 3;</code>
     */
    public java.util.List<com.ctrip.flight.intl.agg.flighttypes.v3.BaggageType> getBaggageList() {
      if (baggageBuilder_ == null) {
        return java.util.Collections.unmodifiableList(baggage_);
      } else {
        return baggageBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.BaggageType Baggage = 3;</code>
     */
    public int getBaggageCount() {
      if (baggageBuilder_ == null) {
        return baggage_.size();
      } else {
        return baggageBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.BaggageType Baggage = 3;</code>
     */
    public com.ctrip.flight.intl.agg.flighttypes.v3.BaggageType getBaggage(int index) {
      if (baggageBuilder_ == null) {
        return baggage_.get(index);
      } else {
        return baggageBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.BaggageType Baggage = 3;</code>
     */
    public Builder setBaggage(
        int index, com.ctrip.flight.intl.agg.flighttypes.v3.BaggageType value) {
      if (baggageBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureBaggageIsMutable();
        baggage_.set(index, value);
        onChanged();
      } else {
        baggageBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.BaggageType Baggage = 3;</code>
     */
    public Builder setBaggage(
        int index, com.ctrip.flight.intl.agg.flighttypes.v3.BaggageType.Builder builderForValue) {
      if (baggageBuilder_ == null) {
        ensureBaggageIsMutable();
        baggage_.set(index, builderForValue.build());
        onChanged();
      } else {
        baggageBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.BaggageType Baggage = 3;</code>
     */
    public Builder addBaggage(com.ctrip.flight.intl.agg.flighttypes.v3.BaggageType value) {
      if (baggageBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureBaggageIsMutable();
        baggage_.add(value);
        onChanged();
      } else {
        baggageBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.BaggageType Baggage = 3;</code>
     */
    public Builder addBaggage(
        int index, com.ctrip.flight.intl.agg.flighttypes.v3.BaggageType value) {
      if (baggageBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureBaggageIsMutable();
        baggage_.add(index, value);
        onChanged();
      } else {
        baggageBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.BaggageType Baggage = 3;</code>
     */
    public Builder addBaggage(
        com.ctrip.flight.intl.agg.flighttypes.v3.BaggageType.Builder builderForValue) {
      if (baggageBuilder_ == null) {
        ensureBaggageIsMutable();
        baggage_.add(builderForValue.build());
        onChanged();
      } else {
        baggageBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.BaggageType Baggage = 3;</code>
     */
    public Builder addBaggage(
        int index, com.ctrip.flight.intl.agg.flighttypes.v3.BaggageType.Builder builderForValue) {
      if (baggageBuilder_ == null) {
        ensureBaggageIsMutable();
        baggage_.add(index, builderForValue.build());
        onChanged();
      } else {
        baggageBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.BaggageType Baggage = 3;</code>
     */
    public Builder addAllBaggage(
        java.lang.Iterable<? extends com.ctrip.flight.intl.agg.flighttypes.v3.BaggageType> values) {
      if (baggageBuilder_ == null) {
        ensureBaggageIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, baggage_);
        onChanged();
      } else {
        baggageBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.BaggageType Baggage = 3;</code>
     */
    public Builder clearBaggage() {
      if (baggageBuilder_ == null) {
        baggage_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
      } else {
        baggageBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.BaggageType Baggage = 3;</code>
     */
    public Builder removeBaggage(int index) {
      if (baggageBuilder_ == null) {
        ensureBaggageIsMutable();
        baggage_.remove(index);
        onChanged();
      } else {
        baggageBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.BaggageType Baggage = 3;</code>
     */
    public com.ctrip.flight.intl.agg.flighttypes.v3.BaggageType.Builder getBaggageBuilder(
        int index) {
      return getBaggageFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.BaggageType Baggage = 3;</code>
     */
    public com.ctrip.flight.intl.agg.flighttypes.v3.BaggageTypeOrBuilder getBaggageOrBuilder(
        int index) {
      if (baggageBuilder_ == null) {
        return baggage_.get(index);  } else {
        return baggageBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.BaggageType Baggage = 3;</code>
     */
    public java.util.List<? extends com.ctrip.flight.intl.agg.flighttypes.v3.BaggageTypeOrBuilder> 
         getBaggageOrBuilderList() {
      if (baggageBuilder_ != null) {
        return baggageBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(baggage_);
      }
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.BaggageType Baggage = 3;</code>
     */
    public com.ctrip.flight.intl.agg.flighttypes.v3.BaggageType.Builder addBaggageBuilder() {
      return getBaggageFieldBuilder().addBuilder(
          com.ctrip.flight.intl.agg.flighttypes.v3.BaggageType.getDefaultInstance());
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.BaggageType Baggage = 3;</code>
     */
    public com.ctrip.flight.intl.agg.flighttypes.v3.BaggageType.Builder addBaggageBuilder(
        int index) {
      return getBaggageFieldBuilder().addBuilder(
          index, com.ctrip.flight.intl.agg.flighttypes.v3.BaggageType.getDefaultInstance());
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.BaggageType Baggage = 3;</code>
     */
    public java.util.List<com.ctrip.flight.intl.agg.flighttypes.v3.BaggageType.Builder> 
         getBaggageBuilderList() {
      return getBaggageFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.ctrip.flight.intl.agg.flighttypes.v3.BaggageType, com.ctrip.flight.intl.agg.flighttypes.v3.BaggageType.Builder, com.ctrip.flight.intl.agg.flighttypes.v3.BaggageTypeOrBuilder> 
        getBaggageFieldBuilder() {
      if (baggageBuilder_ == null) {
        baggageBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.ctrip.flight.intl.agg.flighttypes.v3.BaggageType, com.ctrip.flight.intl.agg.flighttypes.v3.BaggageType.Builder, com.ctrip.flight.intl.agg.flighttypes.v3.BaggageTypeOrBuilder>(
                baggage_,
                ((bitField0_ & 0x00000004) == 0x00000004),
                getParentForChildren(),
                isClean());
        baggage_ = null;
      }
      return baggageBuilder_;
    }

    private java.util.List<com.ctrip.flight.intl.agg.flighttypes.v3.TextRemarkType> textRemark_ =
      java.util.Collections.emptyList();
    private void ensureTextRemarkIsMutable() {
      if (!((bitField0_ & 0x00000008) == 0x00000008)) {
        textRemark_ = new java.util.ArrayList<com.ctrip.flight.intl.agg.flighttypes.v3.TextRemarkType>(textRemark_);
        bitField0_ |= 0x00000008;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.ctrip.flight.intl.agg.flighttypes.v3.TextRemarkType, com.ctrip.flight.intl.agg.flighttypes.v3.TextRemarkType.Builder, com.ctrip.flight.intl.agg.flighttypes.v3.TextRemarkTypeOrBuilder> textRemarkBuilder_;

    /**
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.TextRemarkType TextRemark = 4;</code>
     */
    public java.util.List<com.ctrip.flight.intl.agg.flighttypes.v3.TextRemarkType> getTextRemarkList() {
      if (textRemarkBuilder_ == null) {
        return java.util.Collections.unmodifiableList(textRemark_);
      } else {
        return textRemarkBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.TextRemarkType TextRemark = 4;</code>
     */
    public int getTextRemarkCount() {
      if (textRemarkBuilder_ == null) {
        return textRemark_.size();
      } else {
        return textRemarkBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.TextRemarkType TextRemark = 4;</code>
     */
    public com.ctrip.flight.intl.agg.flighttypes.v3.TextRemarkType getTextRemark(int index) {
      if (textRemarkBuilder_ == null) {
        return textRemark_.get(index);
      } else {
        return textRemarkBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.TextRemarkType TextRemark = 4;</code>
     */
    public Builder setTextRemark(
        int index, com.ctrip.flight.intl.agg.flighttypes.v3.TextRemarkType value) {
      if (textRemarkBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTextRemarkIsMutable();
        textRemark_.set(index, value);
        onChanged();
      } else {
        textRemarkBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.TextRemarkType TextRemark = 4;</code>
     */
    public Builder setTextRemark(
        int index, com.ctrip.flight.intl.agg.flighttypes.v3.TextRemarkType.Builder builderForValue) {
      if (textRemarkBuilder_ == null) {
        ensureTextRemarkIsMutable();
        textRemark_.set(index, builderForValue.build());
        onChanged();
      } else {
        textRemarkBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.TextRemarkType TextRemark = 4;</code>
     */
    public Builder addTextRemark(com.ctrip.flight.intl.agg.flighttypes.v3.TextRemarkType value) {
      if (textRemarkBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTextRemarkIsMutable();
        textRemark_.add(value);
        onChanged();
      } else {
        textRemarkBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.TextRemarkType TextRemark = 4;</code>
     */
    public Builder addTextRemark(
        int index, com.ctrip.flight.intl.agg.flighttypes.v3.TextRemarkType value) {
      if (textRemarkBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTextRemarkIsMutable();
        textRemark_.add(index, value);
        onChanged();
      } else {
        textRemarkBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.TextRemarkType TextRemark = 4;</code>
     */
    public Builder addTextRemark(
        com.ctrip.flight.intl.agg.flighttypes.v3.TextRemarkType.Builder builderForValue) {
      if (textRemarkBuilder_ == null) {
        ensureTextRemarkIsMutable();
        textRemark_.add(builderForValue.build());
        onChanged();
      } else {
        textRemarkBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.TextRemarkType TextRemark = 4;</code>
     */
    public Builder addTextRemark(
        int index, com.ctrip.flight.intl.agg.flighttypes.v3.TextRemarkType.Builder builderForValue) {
      if (textRemarkBuilder_ == null) {
        ensureTextRemarkIsMutable();
        textRemark_.add(index, builderForValue.build());
        onChanged();
      } else {
        textRemarkBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.TextRemarkType TextRemark = 4;</code>
     */
    public Builder addAllTextRemark(
        java.lang.Iterable<? extends com.ctrip.flight.intl.agg.flighttypes.v3.TextRemarkType> values) {
      if (textRemarkBuilder_ == null) {
        ensureTextRemarkIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, textRemark_);
        onChanged();
      } else {
        textRemarkBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.TextRemarkType TextRemark = 4;</code>
     */
    public Builder clearTextRemark() {
      if (textRemarkBuilder_ == null) {
        textRemark_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
      } else {
        textRemarkBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.TextRemarkType TextRemark = 4;</code>
     */
    public Builder removeTextRemark(int index) {
      if (textRemarkBuilder_ == null) {
        ensureTextRemarkIsMutable();
        textRemark_.remove(index);
        onChanged();
      } else {
        textRemarkBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.TextRemarkType TextRemark = 4;</code>
     */
    public com.ctrip.flight.intl.agg.flighttypes.v3.TextRemarkType.Builder getTextRemarkBuilder(
        int index) {
      return getTextRemarkFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.TextRemarkType TextRemark = 4;</code>
     */
    public com.ctrip.flight.intl.agg.flighttypes.v3.TextRemarkTypeOrBuilder getTextRemarkOrBuilder(
        int index) {
      if (textRemarkBuilder_ == null) {
        return textRemark_.get(index);  } else {
        return textRemarkBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.TextRemarkType TextRemark = 4;</code>
     */
    public java.util.List<? extends com.ctrip.flight.intl.agg.flighttypes.v3.TextRemarkTypeOrBuilder> 
         getTextRemarkOrBuilderList() {
      if (textRemarkBuilder_ != null) {
        return textRemarkBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(textRemark_);
      }
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.TextRemarkType TextRemark = 4;</code>
     */
    public com.ctrip.flight.intl.agg.flighttypes.v3.TextRemarkType.Builder addTextRemarkBuilder() {
      return getTextRemarkFieldBuilder().addBuilder(
          com.ctrip.flight.intl.agg.flighttypes.v3.TextRemarkType.getDefaultInstance());
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.TextRemarkType TextRemark = 4;</code>
     */
    public com.ctrip.flight.intl.agg.flighttypes.v3.TextRemarkType.Builder addTextRemarkBuilder(
        int index) {
      return getTextRemarkFieldBuilder().addBuilder(
          index, com.ctrip.flight.intl.agg.flighttypes.v3.TextRemarkType.getDefaultInstance());
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.TextRemarkType TextRemark = 4;</code>
     */
    public java.util.List<com.ctrip.flight.intl.agg.flighttypes.v3.TextRemarkType.Builder> 
         getTextRemarkBuilderList() {
      return getTextRemarkFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.ctrip.flight.intl.agg.flighttypes.v3.TextRemarkType, com.ctrip.flight.intl.agg.flighttypes.v3.TextRemarkType.Builder, com.ctrip.flight.intl.agg.flighttypes.v3.TextRemarkTypeOrBuilder> 
        getTextRemarkFieldBuilder() {
      if (textRemarkBuilder_ == null) {
        textRemarkBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.ctrip.flight.intl.agg.flighttypes.v3.TextRemarkType, com.ctrip.flight.intl.agg.flighttypes.v3.TextRemarkType.Builder, com.ctrip.flight.intl.agg.flighttypes.v3.TextRemarkTypeOrBuilder>(
                textRemark_,
                ((bitField0_ & 0x00000008) == 0x00000008),
                getParentForChildren(),
                isClean());
        textRemark_ = null;
      }
      return textRemarkBuilder_;
    }

    private java.lang.Object searchCriteriaToken_ = "";
    /**
     * <code>string SearchCriteriaToken = 6;</code>
     */
    public java.lang.String getSearchCriteriaToken() {
      java.lang.Object ref = searchCriteriaToken_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        searchCriteriaToken_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <code>string SearchCriteriaToken = 6;</code>
     */
    public com.google.protobuf.ByteString
        getSearchCriteriaTokenBytes() {
      java.lang.Object ref = searchCriteriaToken_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        searchCriteriaToken_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>string SearchCriteriaToken = 6;</code>
     */
    public Builder setSearchCriteriaToken(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      searchCriteriaToken_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>string SearchCriteriaToken = 6;</code>
     */
    public Builder clearSearchCriteriaToken() {
      
      searchCriteriaToken_ = getDefaultInstance().getSearchCriteriaToken();
      onChanged();
      return this;
    }
    /**
     * <code>string SearchCriteriaToken = 6;</code>
     */
    public Builder setSearchCriteriaTokenBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      searchCriteriaToken_ = value;
      onChanged();
      return this;
    }

    private java.util.List<com.ctrip.flight.intl.agg.flighttypes.v3.KeyValuePairType> tag_ =
      java.util.Collections.emptyList();
    private void ensureTagIsMutable() {
      if (!((bitField0_ & 0x00000020) == 0x00000020)) {
        tag_ = new java.util.ArrayList<com.ctrip.flight.intl.agg.flighttypes.v3.KeyValuePairType>(tag_);
        bitField0_ |= 0x00000020;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.ctrip.flight.intl.agg.flighttypes.v3.KeyValuePairType, com.ctrip.flight.intl.agg.flighttypes.v3.KeyValuePairType.Builder, com.ctrip.flight.intl.agg.flighttypes.v3.KeyValuePairTypeOrBuilder> tagBuilder_;

    /**
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.KeyValuePairType Tag = 7;</code>
     */
    public java.util.List<com.ctrip.flight.intl.agg.flighttypes.v3.KeyValuePairType> getTagList() {
      if (tagBuilder_ == null) {
        return java.util.Collections.unmodifiableList(tag_);
      } else {
        return tagBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.KeyValuePairType Tag = 7;</code>
     */
    public int getTagCount() {
      if (tagBuilder_ == null) {
        return tag_.size();
      } else {
        return tagBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.KeyValuePairType Tag = 7;</code>
     */
    public com.ctrip.flight.intl.agg.flighttypes.v3.KeyValuePairType getTag(int index) {
      if (tagBuilder_ == null) {
        return tag_.get(index);
      } else {
        return tagBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.KeyValuePairType Tag = 7;</code>
     */
    public Builder setTag(
        int index, com.ctrip.flight.intl.agg.flighttypes.v3.KeyValuePairType value) {
      if (tagBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTagIsMutable();
        tag_.set(index, value);
        onChanged();
      } else {
        tagBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.KeyValuePairType Tag = 7;</code>
     */
    public Builder setTag(
        int index, com.ctrip.flight.intl.agg.flighttypes.v3.KeyValuePairType.Builder builderForValue) {
      if (tagBuilder_ == null) {
        ensureTagIsMutable();
        tag_.set(index, builderForValue.build());
        onChanged();
      } else {
        tagBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.KeyValuePairType Tag = 7;</code>
     */
    public Builder addTag(com.ctrip.flight.intl.agg.flighttypes.v3.KeyValuePairType value) {
      if (tagBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTagIsMutable();
        tag_.add(value);
        onChanged();
      } else {
        tagBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.KeyValuePairType Tag = 7;</code>
     */
    public Builder addTag(
        int index, com.ctrip.flight.intl.agg.flighttypes.v3.KeyValuePairType value) {
      if (tagBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTagIsMutable();
        tag_.add(index, value);
        onChanged();
      } else {
        tagBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.KeyValuePairType Tag = 7;</code>
     */
    public Builder addTag(
        com.ctrip.flight.intl.agg.flighttypes.v3.KeyValuePairType.Builder builderForValue) {
      if (tagBuilder_ == null) {
        ensureTagIsMutable();
        tag_.add(builderForValue.build());
        onChanged();
      } else {
        tagBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.KeyValuePairType Tag = 7;</code>
     */
    public Builder addTag(
        int index, com.ctrip.flight.intl.agg.flighttypes.v3.KeyValuePairType.Builder builderForValue) {
      if (tagBuilder_ == null) {
        ensureTagIsMutable();
        tag_.add(index, builderForValue.build());
        onChanged();
      } else {
        tagBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.KeyValuePairType Tag = 7;</code>
     */
    public Builder addAllTag(
        java.lang.Iterable<? extends com.ctrip.flight.intl.agg.flighttypes.v3.KeyValuePairType> values) {
      if (tagBuilder_ == null) {
        ensureTagIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, tag_);
        onChanged();
      } else {
        tagBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.KeyValuePairType Tag = 7;</code>
     */
    public Builder clearTag() {
      if (tagBuilder_ == null) {
        tag_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        onChanged();
      } else {
        tagBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.KeyValuePairType Tag = 7;</code>
     */
    public Builder removeTag(int index) {
      if (tagBuilder_ == null) {
        ensureTagIsMutable();
        tag_.remove(index);
        onChanged();
      } else {
        tagBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.KeyValuePairType Tag = 7;</code>
     */
    public com.ctrip.flight.intl.agg.flighttypes.v3.KeyValuePairType.Builder getTagBuilder(
        int index) {
      return getTagFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.KeyValuePairType Tag = 7;</code>
     */
    public com.ctrip.flight.intl.agg.flighttypes.v3.KeyValuePairTypeOrBuilder getTagOrBuilder(
        int index) {
      if (tagBuilder_ == null) {
        return tag_.get(index);  } else {
        return tagBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.KeyValuePairType Tag = 7;</code>
     */
    public java.util.List<? extends com.ctrip.flight.intl.agg.flighttypes.v3.KeyValuePairTypeOrBuilder> 
         getTagOrBuilderList() {
      if (tagBuilder_ != null) {
        return tagBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(tag_);
      }
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.KeyValuePairType Tag = 7;</code>
     */
    public com.ctrip.flight.intl.agg.flighttypes.v3.KeyValuePairType.Builder addTagBuilder() {
      return getTagFieldBuilder().addBuilder(
          com.ctrip.flight.intl.agg.flighttypes.v3.KeyValuePairType.getDefaultInstance());
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.KeyValuePairType Tag = 7;</code>
     */
    public com.ctrip.flight.intl.agg.flighttypes.v3.KeyValuePairType.Builder addTagBuilder(
        int index) {
      return getTagFieldBuilder().addBuilder(
          index, com.ctrip.flight.intl.agg.flighttypes.v3.KeyValuePairType.getDefaultInstance());
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.KeyValuePairType Tag = 7;</code>
     */
    public java.util.List<com.ctrip.flight.intl.agg.flighttypes.v3.KeyValuePairType.Builder> 
         getTagBuilderList() {
      return getTagFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.ctrip.flight.intl.agg.flighttypes.v3.KeyValuePairType, com.ctrip.flight.intl.agg.flighttypes.v3.KeyValuePairType.Builder, com.ctrip.flight.intl.agg.flighttypes.v3.KeyValuePairTypeOrBuilder> 
        getTagFieldBuilder() {
      if (tagBuilder_ == null) {
        tagBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.ctrip.flight.intl.agg.flighttypes.v3.KeyValuePairType, com.ctrip.flight.intl.agg.flighttypes.v3.KeyValuePairType.Builder, com.ctrip.flight.intl.agg.flighttypes.v3.KeyValuePairTypeOrBuilder>(
                tag_,
                ((bitField0_ & 0x00000020) == 0x00000020),
                getParentForChildren(),
                isClean());
        tag_ = null;
      }
      return tagBuilder_;
    }

    private java.util.List<com.ctrip.flight.intl.agg.flighttypes.v3.AgencyType> agency_ =
      java.util.Collections.emptyList();
    private void ensureAgencyIsMutable() {
      if (!((bitField0_ & 0x00000040) == 0x00000040)) {
        agency_ = new java.util.ArrayList<com.ctrip.flight.intl.agg.flighttypes.v3.AgencyType>(agency_);
        bitField0_ |= 0x00000040;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.ctrip.flight.intl.agg.flighttypes.v3.AgencyType, com.ctrip.flight.intl.agg.flighttypes.v3.AgencyType.Builder, com.ctrip.flight.intl.agg.flighttypes.v3.AgencyTypeOrBuilder> agencyBuilder_;

    /**
     * <pre>
     * repeated PriceAttributeType PriceAttribute = 8 ;
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.AgencyType Agency = 8;</code>
     */
    public java.util.List<com.ctrip.flight.intl.agg.flighttypes.v3.AgencyType> getAgencyList() {
      if (agencyBuilder_ == null) {
        return java.util.Collections.unmodifiableList(agency_);
      } else {
        return agencyBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * repeated PriceAttributeType PriceAttribute = 8 ;
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.AgencyType Agency = 8;</code>
     */
    public int getAgencyCount() {
      if (agencyBuilder_ == null) {
        return agency_.size();
      } else {
        return agencyBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * repeated PriceAttributeType PriceAttribute = 8 ;
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.AgencyType Agency = 8;</code>
     */
    public com.ctrip.flight.intl.agg.flighttypes.v3.AgencyType getAgency(int index) {
      if (agencyBuilder_ == null) {
        return agency_.get(index);
      } else {
        return agencyBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * repeated PriceAttributeType PriceAttribute = 8 ;
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.AgencyType Agency = 8;</code>
     */
    public Builder setAgency(
        int index, com.ctrip.flight.intl.agg.flighttypes.v3.AgencyType value) {
      if (agencyBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureAgencyIsMutable();
        agency_.set(index, value);
        onChanged();
      } else {
        agencyBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * repeated PriceAttributeType PriceAttribute = 8 ;
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.AgencyType Agency = 8;</code>
     */
    public Builder setAgency(
        int index, com.ctrip.flight.intl.agg.flighttypes.v3.AgencyType.Builder builderForValue) {
      if (agencyBuilder_ == null) {
        ensureAgencyIsMutable();
        agency_.set(index, builderForValue.build());
        onChanged();
      } else {
        agencyBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * repeated PriceAttributeType PriceAttribute = 8 ;
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.AgencyType Agency = 8;</code>
     */
    public Builder addAgency(com.ctrip.flight.intl.agg.flighttypes.v3.AgencyType value) {
      if (agencyBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureAgencyIsMutable();
        agency_.add(value);
        onChanged();
      } else {
        agencyBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * repeated PriceAttributeType PriceAttribute = 8 ;
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.AgencyType Agency = 8;</code>
     */
    public Builder addAgency(
        int index, com.ctrip.flight.intl.agg.flighttypes.v3.AgencyType value) {
      if (agencyBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureAgencyIsMutable();
        agency_.add(index, value);
        onChanged();
      } else {
        agencyBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * repeated PriceAttributeType PriceAttribute = 8 ;
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.AgencyType Agency = 8;</code>
     */
    public Builder addAgency(
        com.ctrip.flight.intl.agg.flighttypes.v3.AgencyType.Builder builderForValue) {
      if (agencyBuilder_ == null) {
        ensureAgencyIsMutable();
        agency_.add(builderForValue.build());
        onChanged();
      } else {
        agencyBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * repeated PriceAttributeType PriceAttribute = 8 ;
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.AgencyType Agency = 8;</code>
     */
    public Builder addAgency(
        int index, com.ctrip.flight.intl.agg.flighttypes.v3.AgencyType.Builder builderForValue) {
      if (agencyBuilder_ == null) {
        ensureAgencyIsMutable();
        agency_.add(index, builderForValue.build());
        onChanged();
      } else {
        agencyBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * repeated PriceAttributeType PriceAttribute = 8 ;
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.AgencyType Agency = 8;</code>
     */
    public Builder addAllAgency(
        java.lang.Iterable<? extends com.ctrip.flight.intl.agg.flighttypes.v3.AgencyType> values) {
      if (agencyBuilder_ == null) {
        ensureAgencyIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, agency_);
        onChanged();
      } else {
        agencyBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * repeated PriceAttributeType PriceAttribute = 8 ;
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.AgencyType Agency = 8;</code>
     */
    public Builder clearAgency() {
      if (agencyBuilder_ == null) {
        agency_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        onChanged();
      } else {
        agencyBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * repeated PriceAttributeType PriceAttribute = 8 ;
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.AgencyType Agency = 8;</code>
     */
    public Builder removeAgency(int index) {
      if (agencyBuilder_ == null) {
        ensureAgencyIsMutable();
        agency_.remove(index);
        onChanged();
      } else {
        agencyBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * repeated PriceAttributeType PriceAttribute = 8 ;
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.AgencyType Agency = 8;</code>
     */
    public com.ctrip.flight.intl.agg.flighttypes.v3.AgencyType.Builder getAgencyBuilder(
        int index) {
      return getAgencyFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * repeated PriceAttributeType PriceAttribute = 8 ;
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.AgencyType Agency = 8;</code>
     */
    public com.ctrip.flight.intl.agg.flighttypes.v3.AgencyTypeOrBuilder getAgencyOrBuilder(
        int index) {
      if (agencyBuilder_ == null) {
        return agency_.get(index);  } else {
        return agencyBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * repeated PriceAttributeType PriceAttribute = 8 ;
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.AgencyType Agency = 8;</code>
     */
    public java.util.List<? extends com.ctrip.flight.intl.agg.flighttypes.v3.AgencyTypeOrBuilder> 
         getAgencyOrBuilderList() {
      if (agencyBuilder_ != null) {
        return agencyBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(agency_);
      }
    }
    /**
     * <pre>
     * repeated PriceAttributeType PriceAttribute = 8 ;
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.AgencyType Agency = 8;</code>
     */
    public com.ctrip.flight.intl.agg.flighttypes.v3.AgencyType.Builder addAgencyBuilder() {
      return getAgencyFieldBuilder().addBuilder(
          com.ctrip.flight.intl.agg.flighttypes.v3.AgencyType.getDefaultInstance());
    }
    /**
     * <pre>
     * repeated PriceAttributeType PriceAttribute = 8 ;
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.AgencyType Agency = 8;</code>
     */
    public com.ctrip.flight.intl.agg.flighttypes.v3.AgencyType.Builder addAgencyBuilder(
        int index) {
      return getAgencyFieldBuilder().addBuilder(
          index, com.ctrip.flight.intl.agg.flighttypes.v3.AgencyType.getDefaultInstance());
    }
    /**
     * <pre>
     * repeated PriceAttributeType PriceAttribute = 8 ;
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.AgencyType Agency = 8;</code>
     */
    public java.util.List<com.ctrip.flight.intl.agg.flighttypes.v3.AgencyType.Builder> 
         getAgencyBuilderList() {
      return getAgencyFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.ctrip.flight.intl.agg.flighttypes.v3.AgencyType, com.ctrip.flight.intl.agg.flighttypes.v3.AgencyType.Builder, com.ctrip.flight.intl.agg.flighttypes.v3.AgencyTypeOrBuilder> 
        getAgencyFieldBuilder() {
      if (agencyBuilder_ == null) {
        agencyBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.ctrip.flight.intl.agg.flighttypes.v3.AgencyType, com.ctrip.flight.intl.agg.flighttypes.v3.AgencyType.Builder, com.ctrip.flight.intl.agg.flighttypes.v3.AgencyTypeOrBuilder>(
                agency_,
                ((bitField0_ & 0x00000040) == 0x00000040),
                getParentForChildren(),
                isClean());
        agency_ = null;
      }
      return agencyBuilder_;
    }

    private java.util.List<com.ctrip.flight.intl.agg.flighttypes.v3.AirlineInfoType> airline_ =
      java.util.Collections.emptyList();
    private void ensureAirlineIsMutable() {
      if (!((bitField0_ & 0x00000080) == 0x00000080)) {
        airline_ = new java.util.ArrayList<com.ctrip.flight.intl.agg.flighttypes.v3.AirlineInfoType>(airline_);
        bitField0_ |= 0x00000080;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.ctrip.flight.intl.agg.flighttypes.v3.AirlineInfoType, com.ctrip.flight.intl.agg.flighttypes.v3.AirlineInfoType.Builder, com.ctrip.flight.intl.agg.flighttypes.v3.AirlineInfoTypeOrBuilder> airlineBuilder_;

    /**
     * <pre>
     *变化 新增航司Ref
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.AirlineInfoType Airline = 9;</code>
     */
    public java.util.List<com.ctrip.flight.intl.agg.flighttypes.v3.AirlineInfoType> getAirlineList() {
      if (airlineBuilder_ == null) {
        return java.util.Collections.unmodifiableList(airline_);
      } else {
        return airlineBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     *变化 新增航司Ref
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.AirlineInfoType Airline = 9;</code>
     */
    public int getAirlineCount() {
      if (airlineBuilder_ == null) {
        return airline_.size();
      } else {
        return airlineBuilder_.getCount();
      }
    }
    /**
     * <pre>
     *变化 新增航司Ref
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.AirlineInfoType Airline = 9;</code>
     */
    public com.ctrip.flight.intl.agg.flighttypes.v3.AirlineInfoType getAirline(int index) {
      if (airlineBuilder_ == null) {
        return airline_.get(index);
      } else {
        return airlineBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     *变化 新增航司Ref
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.AirlineInfoType Airline = 9;</code>
     */
    public Builder setAirline(
        int index, com.ctrip.flight.intl.agg.flighttypes.v3.AirlineInfoType value) {
      if (airlineBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureAirlineIsMutable();
        airline_.set(index, value);
        onChanged();
      } else {
        airlineBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     *变化 新增航司Ref
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.AirlineInfoType Airline = 9;</code>
     */
    public Builder setAirline(
        int index, com.ctrip.flight.intl.agg.flighttypes.v3.AirlineInfoType.Builder builderForValue) {
      if (airlineBuilder_ == null) {
        ensureAirlineIsMutable();
        airline_.set(index, builderForValue.build());
        onChanged();
      } else {
        airlineBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     *变化 新增航司Ref
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.AirlineInfoType Airline = 9;</code>
     */
    public Builder addAirline(com.ctrip.flight.intl.agg.flighttypes.v3.AirlineInfoType value) {
      if (airlineBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureAirlineIsMutable();
        airline_.add(value);
        onChanged();
      } else {
        airlineBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     *变化 新增航司Ref
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.AirlineInfoType Airline = 9;</code>
     */
    public Builder addAirline(
        int index, com.ctrip.flight.intl.agg.flighttypes.v3.AirlineInfoType value) {
      if (airlineBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureAirlineIsMutable();
        airline_.add(index, value);
        onChanged();
      } else {
        airlineBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     *变化 新增航司Ref
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.AirlineInfoType Airline = 9;</code>
     */
    public Builder addAirline(
        com.ctrip.flight.intl.agg.flighttypes.v3.AirlineInfoType.Builder builderForValue) {
      if (airlineBuilder_ == null) {
        ensureAirlineIsMutable();
        airline_.add(builderForValue.build());
        onChanged();
      } else {
        airlineBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     *变化 新增航司Ref
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.AirlineInfoType Airline = 9;</code>
     */
    public Builder addAirline(
        int index, com.ctrip.flight.intl.agg.flighttypes.v3.AirlineInfoType.Builder builderForValue) {
      if (airlineBuilder_ == null) {
        ensureAirlineIsMutable();
        airline_.add(index, builderForValue.build());
        onChanged();
      } else {
        airlineBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     *变化 新增航司Ref
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.AirlineInfoType Airline = 9;</code>
     */
    public Builder addAllAirline(
        java.lang.Iterable<? extends com.ctrip.flight.intl.agg.flighttypes.v3.AirlineInfoType> values) {
      if (airlineBuilder_ == null) {
        ensureAirlineIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, airline_);
        onChanged();
      } else {
        airlineBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     *变化 新增航司Ref
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.AirlineInfoType Airline = 9;</code>
     */
    public Builder clearAirline() {
      if (airlineBuilder_ == null) {
        airline_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000080);
        onChanged();
      } else {
        airlineBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     *变化 新增航司Ref
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.AirlineInfoType Airline = 9;</code>
     */
    public Builder removeAirline(int index) {
      if (airlineBuilder_ == null) {
        ensureAirlineIsMutable();
        airline_.remove(index);
        onChanged();
      } else {
        airlineBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     *变化 新增航司Ref
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.AirlineInfoType Airline = 9;</code>
     */
    public com.ctrip.flight.intl.agg.flighttypes.v3.AirlineInfoType.Builder getAirlineBuilder(
        int index) {
      return getAirlineFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     *变化 新增航司Ref
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.AirlineInfoType Airline = 9;</code>
     */
    public com.ctrip.flight.intl.agg.flighttypes.v3.AirlineInfoTypeOrBuilder getAirlineOrBuilder(
        int index) {
      if (airlineBuilder_ == null) {
        return airline_.get(index);  } else {
        return airlineBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     *变化 新增航司Ref
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.AirlineInfoType Airline = 9;</code>
     */
    public java.util.List<? extends com.ctrip.flight.intl.agg.flighttypes.v3.AirlineInfoTypeOrBuilder> 
         getAirlineOrBuilderList() {
      if (airlineBuilder_ != null) {
        return airlineBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(airline_);
      }
    }
    /**
     * <pre>
     *变化 新增航司Ref
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.AirlineInfoType Airline = 9;</code>
     */
    public com.ctrip.flight.intl.agg.flighttypes.v3.AirlineInfoType.Builder addAirlineBuilder() {
      return getAirlineFieldBuilder().addBuilder(
          com.ctrip.flight.intl.agg.flighttypes.v3.AirlineInfoType.getDefaultInstance());
    }
    /**
     * <pre>
     *变化 新增航司Ref
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.AirlineInfoType Airline = 9;</code>
     */
    public com.ctrip.flight.intl.agg.flighttypes.v3.AirlineInfoType.Builder addAirlineBuilder(
        int index) {
      return getAirlineFieldBuilder().addBuilder(
          index, com.ctrip.flight.intl.agg.flighttypes.v3.AirlineInfoType.getDefaultInstance());
    }
    /**
     * <pre>
     *变化 新增航司Ref
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.AirlineInfoType Airline = 9;</code>
     */
    public java.util.List<com.ctrip.flight.intl.agg.flighttypes.v3.AirlineInfoType.Builder> 
         getAirlineBuilderList() {
      return getAirlineFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.ctrip.flight.intl.agg.flighttypes.v3.AirlineInfoType, com.ctrip.flight.intl.agg.flighttypes.v3.AirlineInfoType.Builder, com.ctrip.flight.intl.agg.flighttypes.v3.AirlineInfoTypeOrBuilder> 
        getAirlineFieldBuilder() {
      if (airlineBuilder_ == null) {
        airlineBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.ctrip.flight.intl.agg.flighttypes.v3.AirlineInfoType, com.ctrip.flight.intl.agg.flighttypes.v3.AirlineInfoType.Builder, com.ctrip.flight.intl.agg.flighttypes.v3.AirlineInfoTypeOrBuilder>(
                airline_,
                ((bitField0_ & 0x00000080) == 0x00000080),
                getParentForChildren(),
                isClean());
        airline_ = null;
      }
      return airlineBuilder_;
    }

    private java.util.List<com.ctrip.flight.intl.agg.flighttypes.v3.CityInfoType> city_ =
      java.util.Collections.emptyList();
    private void ensureCityIsMutable() {
      if (!((bitField0_ & 0x00000100) == 0x00000100)) {
        city_ = new java.util.ArrayList<com.ctrip.flight.intl.agg.flighttypes.v3.CityInfoType>(city_);
        bitField0_ |= 0x00000100;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.ctrip.flight.intl.agg.flighttypes.v3.CityInfoType, com.ctrip.flight.intl.agg.flighttypes.v3.CityInfoType.Builder, com.ctrip.flight.intl.agg.flighttypes.v3.CityInfoTypeOrBuilder> cityBuilder_;

    /**
     * <pre>
     *变化 新增城市Ref
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.CityInfoType City = 10;</code>
     */
    public java.util.List<com.ctrip.flight.intl.agg.flighttypes.v3.CityInfoType> getCityList() {
      if (cityBuilder_ == null) {
        return java.util.Collections.unmodifiableList(city_);
      } else {
        return cityBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     *变化 新增城市Ref
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.CityInfoType City = 10;</code>
     */
    public int getCityCount() {
      if (cityBuilder_ == null) {
        return city_.size();
      } else {
        return cityBuilder_.getCount();
      }
    }
    /**
     * <pre>
     *变化 新增城市Ref
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.CityInfoType City = 10;</code>
     */
    public com.ctrip.flight.intl.agg.flighttypes.v3.CityInfoType getCity(int index) {
      if (cityBuilder_ == null) {
        return city_.get(index);
      } else {
        return cityBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     *变化 新增城市Ref
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.CityInfoType City = 10;</code>
     */
    public Builder setCity(
        int index, com.ctrip.flight.intl.agg.flighttypes.v3.CityInfoType value) {
      if (cityBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureCityIsMutable();
        city_.set(index, value);
        onChanged();
      } else {
        cityBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     *变化 新增城市Ref
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.CityInfoType City = 10;</code>
     */
    public Builder setCity(
        int index, com.ctrip.flight.intl.agg.flighttypes.v3.CityInfoType.Builder builderForValue) {
      if (cityBuilder_ == null) {
        ensureCityIsMutable();
        city_.set(index, builderForValue.build());
        onChanged();
      } else {
        cityBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     *变化 新增城市Ref
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.CityInfoType City = 10;</code>
     */
    public Builder addCity(com.ctrip.flight.intl.agg.flighttypes.v3.CityInfoType value) {
      if (cityBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureCityIsMutable();
        city_.add(value);
        onChanged();
      } else {
        cityBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     *变化 新增城市Ref
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.CityInfoType City = 10;</code>
     */
    public Builder addCity(
        int index, com.ctrip.flight.intl.agg.flighttypes.v3.CityInfoType value) {
      if (cityBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureCityIsMutable();
        city_.add(index, value);
        onChanged();
      } else {
        cityBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     *变化 新增城市Ref
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.CityInfoType City = 10;</code>
     */
    public Builder addCity(
        com.ctrip.flight.intl.agg.flighttypes.v3.CityInfoType.Builder builderForValue) {
      if (cityBuilder_ == null) {
        ensureCityIsMutable();
        city_.add(builderForValue.build());
        onChanged();
      } else {
        cityBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     *变化 新增城市Ref
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.CityInfoType City = 10;</code>
     */
    public Builder addCity(
        int index, com.ctrip.flight.intl.agg.flighttypes.v3.CityInfoType.Builder builderForValue) {
      if (cityBuilder_ == null) {
        ensureCityIsMutable();
        city_.add(index, builderForValue.build());
        onChanged();
      } else {
        cityBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     *变化 新增城市Ref
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.CityInfoType City = 10;</code>
     */
    public Builder addAllCity(
        java.lang.Iterable<? extends com.ctrip.flight.intl.agg.flighttypes.v3.CityInfoType> values) {
      if (cityBuilder_ == null) {
        ensureCityIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, city_);
        onChanged();
      } else {
        cityBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     *变化 新增城市Ref
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.CityInfoType City = 10;</code>
     */
    public Builder clearCity() {
      if (cityBuilder_ == null) {
        city_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000100);
        onChanged();
      } else {
        cityBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     *变化 新增城市Ref
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.CityInfoType City = 10;</code>
     */
    public Builder removeCity(int index) {
      if (cityBuilder_ == null) {
        ensureCityIsMutable();
        city_.remove(index);
        onChanged();
      } else {
        cityBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     *变化 新增城市Ref
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.CityInfoType City = 10;</code>
     */
    public com.ctrip.flight.intl.agg.flighttypes.v3.CityInfoType.Builder getCityBuilder(
        int index) {
      return getCityFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     *变化 新增城市Ref
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.CityInfoType City = 10;</code>
     */
    public com.ctrip.flight.intl.agg.flighttypes.v3.CityInfoTypeOrBuilder getCityOrBuilder(
        int index) {
      if (cityBuilder_ == null) {
        return city_.get(index);  } else {
        return cityBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     *变化 新增城市Ref
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.CityInfoType City = 10;</code>
     */
    public java.util.List<? extends com.ctrip.flight.intl.agg.flighttypes.v3.CityInfoTypeOrBuilder> 
         getCityOrBuilderList() {
      if (cityBuilder_ != null) {
        return cityBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(city_);
      }
    }
    /**
     * <pre>
     *变化 新增城市Ref
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.CityInfoType City = 10;</code>
     */
    public com.ctrip.flight.intl.agg.flighttypes.v3.CityInfoType.Builder addCityBuilder() {
      return getCityFieldBuilder().addBuilder(
          com.ctrip.flight.intl.agg.flighttypes.v3.CityInfoType.getDefaultInstance());
    }
    /**
     * <pre>
     *变化 新增城市Ref
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.CityInfoType City = 10;</code>
     */
    public com.ctrip.flight.intl.agg.flighttypes.v3.CityInfoType.Builder addCityBuilder(
        int index) {
      return getCityFieldBuilder().addBuilder(
          index, com.ctrip.flight.intl.agg.flighttypes.v3.CityInfoType.getDefaultInstance());
    }
    /**
     * <pre>
     *变化 新增城市Ref
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.CityInfoType City = 10;</code>
     */
    public java.util.List<com.ctrip.flight.intl.agg.flighttypes.v3.CityInfoType.Builder> 
         getCityBuilderList() {
      return getCityFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.ctrip.flight.intl.agg.flighttypes.v3.CityInfoType, com.ctrip.flight.intl.agg.flighttypes.v3.CityInfoType.Builder, com.ctrip.flight.intl.agg.flighttypes.v3.CityInfoTypeOrBuilder> 
        getCityFieldBuilder() {
      if (cityBuilder_ == null) {
        cityBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.ctrip.flight.intl.agg.flighttypes.v3.CityInfoType, com.ctrip.flight.intl.agg.flighttypes.v3.CityInfoType.Builder, com.ctrip.flight.intl.agg.flighttypes.v3.CityInfoTypeOrBuilder>(
                city_,
                ((bitField0_ & 0x00000100) == 0x00000100),
                getParentForChildren(),
                isClean());
        city_ = null;
      }
      return cityBuilder_;
    }

    private java.util.List<com.ctrip.flight.intl.agg.flighttypes.v3.AirportInfoType> airport_ =
      java.util.Collections.emptyList();
    private void ensureAirportIsMutable() {
      if (!((bitField0_ & 0x00000200) == 0x00000200)) {
        airport_ = new java.util.ArrayList<com.ctrip.flight.intl.agg.flighttypes.v3.AirportInfoType>(airport_);
        bitField0_ |= 0x00000200;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.ctrip.flight.intl.agg.flighttypes.v3.AirportInfoType, com.ctrip.flight.intl.agg.flighttypes.v3.AirportInfoType.Builder, com.ctrip.flight.intl.agg.flighttypes.v3.AirportInfoTypeOrBuilder> airportBuilder_;

    /**
     * <pre>
     *变化 新增机场Ref
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.AirportInfoType Airport = 11;</code>
     */
    public java.util.List<com.ctrip.flight.intl.agg.flighttypes.v3.AirportInfoType> getAirportList() {
      if (airportBuilder_ == null) {
        return java.util.Collections.unmodifiableList(airport_);
      } else {
        return airportBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     *变化 新增机场Ref
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.AirportInfoType Airport = 11;</code>
     */
    public int getAirportCount() {
      if (airportBuilder_ == null) {
        return airport_.size();
      } else {
        return airportBuilder_.getCount();
      }
    }
    /**
     * <pre>
     *变化 新增机场Ref
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.AirportInfoType Airport = 11;</code>
     */
    public com.ctrip.flight.intl.agg.flighttypes.v3.AirportInfoType getAirport(int index) {
      if (airportBuilder_ == null) {
        return airport_.get(index);
      } else {
        return airportBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     *变化 新增机场Ref
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.AirportInfoType Airport = 11;</code>
     */
    public Builder setAirport(
        int index, com.ctrip.flight.intl.agg.flighttypes.v3.AirportInfoType value) {
      if (airportBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureAirportIsMutable();
        airport_.set(index, value);
        onChanged();
      } else {
        airportBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     *变化 新增机场Ref
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.AirportInfoType Airport = 11;</code>
     */
    public Builder setAirport(
        int index, com.ctrip.flight.intl.agg.flighttypes.v3.AirportInfoType.Builder builderForValue) {
      if (airportBuilder_ == null) {
        ensureAirportIsMutable();
        airport_.set(index, builderForValue.build());
        onChanged();
      } else {
        airportBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     *变化 新增机场Ref
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.AirportInfoType Airport = 11;</code>
     */
    public Builder addAirport(com.ctrip.flight.intl.agg.flighttypes.v3.AirportInfoType value) {
      if (airportBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureAirportIsMutable();
        airport_.add(value);
        onChanged();
      } else {
        airportBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     *变化 新增机场Ref
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.AirportInfoType Airport = 11;</code>
     */
    public Builder addAirport(
        int index, com.ctrip.flight.intl.agg.flighttypes.v3.AirportInfoType value) {
      if (airportBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureAirportIsMutable();
        airport_.add(index, value);
        onChanged();
      } else {
        airportBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     *变化 新增机场Ref
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.AirportInfoType Airport = 11;</code>
     */
    public Builder addAirport(
        com.ctrip.flight.intl.agg.flighttypes.v3.AirportInfoType.Builder builderForValue) {
      if (airportBuilder_ == null) {
        ensureAirportIsMutable();
        airport_.add(builderForValue.build());
        onChanged();
      } else {
        airportBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     *变化 新增机场Ref
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.AirportInfoType Airport = 11;</code>
     */
    public Builder addAirport(
        int index, com.ctrip.flight.intl.agg.flighttypes.v3.AirportInfoType.Builder builderForValue) {
      if (airportBuilder_ == null) {
        ensureAirportIsMutable();
        airport_.add(index, builderForValue.build());
        onChanged();
      } else {
        airportBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     *变化 新增机场Ref
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.AirportInfoType Airport = 11;</code>
     */
    public Builder addAllAirport(
        java.lang.Iterable<? extends com.ctrip.flight.intl.agg.flighttypes.v3.AirportInfoType> values) {
      if (airportBuilder_ == null) {
        ensureAirportIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, airport_);
        onChanged();
      } else {
        airportBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     *变化 新增机场Ref
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.AirportInfoType Airport = 11;</code>
     */
    public Builder clearAirport() {
      if (airportBuilder_ == null) {
        airport_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000200);
        onChanged();
      } else {
        airportBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     *变化 新增机场Ref
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.AirportInfoType Airport = 11;</code>
     */
    public Builder removeAirport(int index) {
      if (airportBuilder_ == null) {
        ensureAirportIsMutable();
        airport_.remove(index);
        onChanged();
      } else {
        airportBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     *变化 新增机场Ref
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.AirportInfoType Airport = 11;</code>
     */
    public com.ctrip.flight.intl.agg.flighttypes.v3.AirportInfoType.Builder getAirportBuilder(
        int index) {
      return getAirportFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     *变化 新增机场Ref
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.AirportInfoType Airport = 11;</code>
     */
    public com.ctrip.flight.intl.agg.flighttypes.v3.AirportInfoTypeOrBuilder getAirportOrBuilder(
        int index) {
      if (airportBuilder_ == null) {
        return airport_.get(index);  } else {
        return airportBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     *变化 新增机场Ref
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.AirportInfoType Airport = 11;</code>
     */
    public java.util.List<? extends com.ctrip.flight.intl.agg.flighttypes.v3.AirportInfoTypeOrBuilder> 
         getAirportOrBuilderList() {
      if (airportBuilder_ != null) {
        return airportBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(airport_);
      }
    }
    /**
     * <pre>
     *变化 新增机场Ref
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.AirportInfoType Airport = 11;</code>
     */
    public com.ctrip.flight.intl.agg.flighttypes.v3.AirportInfoType.Builder addAirportBuilder() {
      return getAirportFieldBuilder().addBuilder(
          com.ctrip.flight.intl.agg.flighttypes.v3.AirportInfoType.getDefaultInstance());
    }
    /**
     * <pre>
     *变化 新增机场Ref
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.AirportInfoType Airport = 11;</code>
     */
    public com.ctrip.flight.intl.agg.flighttypes.v3.AirportInfoType.Builder addAirportBuilder(
        int index) {
      return getAirportFieldBuilder().addBuilder(
          index, com.ctrip.flight.intl.agg.flighttypes.v3.AirportInfoType.getDefaultInstance());
    }
    /**
     * <pre>
     *变化 新增机场Ref
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.AirportInfoType Airport = 11;</code>
     */
    public java.util.List<com.ctrip.flight.intl.agg.flighttypes.v3.AirportInfoType.Builder> 
         getAirportBuilderList() {
      return getAirportFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.ctrip.flight.intl.agg.flighttypes.v3.AirportInfoType, com.ctrip.flight.intl.agg.flighttypes.v3.AirportInfoType.Builder, com.ctrip.flight.intl.agg.flighttypes.v3.AirportInfoTypeOrBuilder> 
        getAirportFieldBuilder() {
      if (airportBuilder_ == null) {
        airportBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.ctrip.flight.intl.agg.flighttypes.v3.AirportInfoType, com.ctrip.flight.intl.agg.flighttypes.v3.AirportInfoType.Builder, com.ctrip.flight.intl.agg.flighttypes.v3.AirportInfoTypeOrBuilder>(
                airport_,
                ((bitField0_ & 0x00000200) == 0x00000200),
                getParentForChildren(),
                isClean());
        airport_ = null;
      }
      return airportBuilder_;
    }

    private java.util.List<com.ctrip.flight.intl.agg.additionproduct.v3.ServiceType> service_ =
      java.util.Collections.emptyList();
    private void ensureServiceIsMutable() {
      if (!((bitField0_ & 0x00000400) == 0x00000400)) {
        service_ = new java.util.ArrayList<com.ctrip.flight.intl.agg.additionproduct.v3.ServiceType>(service_);
        bitField0_ |= 0x00000400;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.ctrip.flight.intl.agg.additionproduct.v3.ServiceType, com.ctrip.flight.intl.agg.additionproduct.v3.ServiceType.Builder, com.ctrip.flight.intl.agg.additionproduct.v3.ServiceTypeOrBuilder> serviceBuilder_;

    /**
     * <pre>
     *变化  新增权益Ref
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.intl.agg.additionproduct.v3.ServiceType Service = 12;</code>
     */
    public java.util.List<com.ctrip.flight.intl.agg.additionproduct.v3.ServiceType> getServiceList() {
      if (serviceBuilder_ == null) {
        return java.util.Collections.unmodifiableList(service_);
      } else {
        return serviceBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     *变化  新增权益Ref
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.intl.agg.additionproduct.v3.ServiceType Service = 12;</code>
     */
    public int getServiceCount() {
      if (serviceBuilder_ == null) {
        return service_.size();
      } else {
        return serviceBuilder_.getCount();
      }
    }
    /**
     * <pre>
     *变化  新增权益Ref
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.intl.agg.additionproduct.v3.ServiceType Service = 12;</code>
     */
    public com.ctrip.flight.intl.agg.additionproduct.v3.ServiceType getService(int index) {
      if (serviceBuilder_ == null) {
        return service_.get(index);
      } else {
        return serviceBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     *变化  新增权益Ref
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.intl.agg.additionproduct.v3.ServiceType Service = 12;</code>
     */
    public Builder setService(
        int index, com.ctrip.flight.intl.agg.additionproduct.v3.ServiceType value) {
      if (serviceBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureServiceIsMutable();
        service_.set(index, value);
        onChanged();
      } else {
        serviceBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     *变化  新增权益Ref
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.intl.agg.additionproduct.v3.ServiceType Service = 12;</code>
     */
    public Builder setService(
        int index, com.ctrip.flight.intl.agg.additionproduct.v3.ServiceType.Builder builderForValue) {
      if (serviceBuilder_ == null) {
        ensureServiceIsMutable();
        service_.set(index, builderForValue.build());
        onChanged();
      } else {
        serviceBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     *变化  新增权益Ref
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.intl.agg.additionproduct.v3.ServiceType Service = 12;</code>
     */
    public Builder addService(com.ctrip.flight.intl.agg.additionproduct.v3.ServiceType value) {
      if (serviceBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureServiceIsMutable();
        service_.add(value);
        onChanged();
      } else {
        serviceBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     *变化  新增权益Ref
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.intl.agg.additionproduct.v3.ServiceType Service = 12;</code>
     */
    public Builder addService(
        int index, com.ctrip.flight.intl.agg.additionproduct.v3.ServiceType value) {
      if (serviceBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureServiceIsMutable();
        service_.add(index, value);
        onChanged();
      } else {
        serviceBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     *变化  新增权益Ref
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.intl.agg.additionproduct.v3.ServiceType Service = 12;</code>
     */
    public Builder addService(
        com.ctrip.flight.intl.agg.additionproduct.v3.ServiceType.Builder builderForValue) {
      if (serviceBuilder_ == null) {
        ensureServiceIsMutable();
        service_.add(builderForValue.build());
        onChanged();
      } else {
        serviceBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     *变化  新增权益Ref
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.intl.agg.additionproduct.v3.ServiceType Service = 12;</code>
     */
    public Builder addService(
        int index, com.ctrip.flight.intl.agg.additionproduct.v3.ServiceType.Builder builderForValue) {
      if (serviceBuilder_ == null) {
        ensureServiceIsMutable();
        service_.add(index, builderForValue.build());
        onChanged();
      } else {
        serviceBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     *变化  新增权益Ref
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.intl.agg.additionproduct.v3.ServiceType Service = 12;</code>
     */
    public Builder addAllService(
        java.lang.Iterable<? extends com.ctrip.flight.intl.agg.additionproduct.v3.ServiceType> values) {
      if (serviceBuilder_ == null) {
        ensureServiceIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, service_);
        onChanged();
      } else {
        serviceBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     *变化  新增权益Ref
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.intl.agg.additionproduct.v3.ServiceType Service = 12;</code>
     */
    public Builder clearService() {
      if (serviceBuilder_ == null) {
        service_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000400);
        onChanged();
      } else {
        serviceBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     *变化  新增权益Ref
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.intl.agg.additionproduct.v3.ServiceType Service = 12;</code>
     */
    public Builder removeService(int index) {
      if (serviceBuilder_ == null) {
        ensureServiceIsMutable();
        service_.remove(index);
        onChanged();
      } else {
        serviceBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     *变化  新增权益Ref
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.intl.agg.additionproduct.v3.ServiceType Service = 12;</code>
     */
    public com.ctrip.flight.intl.agg.additionproduct.v3.ServiceType.Builder getServiceBuilder(
        int index) {
      return getServiceFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     *变化  新增权益Ref
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.intl.agg.additionproduct.v3.ServiceType Service = 12;</code>
     */
    public com.ctrip.flight.intl.agg.additionproduct.v3.ServiceTypeOrBuilder getServiceOrBuilder(
        int index) {
      if (serviceBuilder_ == null) {
        return service_.get(index);  } else {
        return serviceBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     *变化  新增权益Ref
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.intl.agg.additionproduct.v3.ServiceType Service = 12;</code>
     */
    public java.util.List<? extends com.ctrip.flight.intl.agg.additionproduct.v3.ServiceTypeOrBuilder> 
         getServiceOrBuilderList() {
      if (serviceBuilder_ != null) {
        return serviceBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(service_);
      }
    }
    /**
     * <pre>
     *变化  新增权益Ref
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.intl.agg.additionproduct.v3.ServiceType Service = 12;</code>
     */
    public com.ctrip.flight.intl.agg.additionproduct.v3.ServiceType.Builder addServiceBuilder() {
      return getServiceFieldBuilder().addBuilder(
          com.ctrip.flight.intl.agg.additionproduct.v3.ServiceType.getDefaultInstance());
    }
    /**
     * <pre>
     *变化  新增权益Ref
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.intl.agg.additionproduct.v3.ServiceType Service = 12;</code>
     */
    public com.ctrip.flight.intl.agg.additionproduct.v3.ServiceType.Builder addServiceBuilder(
        int index) {
      return getServiceFieldBuilder().addBuilder(
          index, com.ctrip.flight.intl.agg.additionproduct.v3.ServiceType.getDefaultInstance());
    }
    /**
     * <pre>
     *变化  新增权益Ref
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.intl.agg.additionproduct.v3.ServiceType Service = 12;</code>
     */
    public java.util.List<com.ctrip.flight.intl.agg.additionproduct.v3.ServiceType.Builder> 
         getServiceBuilderList() {
      return getServiceFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.ctrip.flight.intl.agg.additionproduct.v3.ServiceType, com.ctrip.flight.intl.agg.additionproduct.v3.ServiceType.Builder, com.ctrip.flight.intl.agg.additionproduct.v3.ServiceTypeOrBuilder> 
        getServiceFieldBuilder() {
      if (serviceBuilder_ == null) {
        serviceBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.ctrip.flight.intl.agg.additionproduct.v3.ServiceType, com.ctrip.flight.intl.agg.additionproduct.v3.ServiceType.Builder, com.ctrip.flight.intl.agg.additionproduct.v3.ServiceTypeOrBuilder>(
                service_,
                ((bitField0_ & 0x00000400) == 0x00000400),
                getParentForChildren(),
                isClean());
        service_ = null;
      }
      return serviceBuilder_;
    }

    private java.util.List<com.ctrip.flight.intl.agg.flighttypes.v3.CacheInfoType> cacheInfo_ =
      java.util.Collections.emptyList();
    private void ensureCacheInfoIsMutable() {
      if (!((bitField0_ & 0x00000800) == 0x00000800)) {
        cacheInfo_ = new java.util.ArrayList<com.ctrip.flight.intl.agg.flighttypes.v3.CacheInfoType>(cacheInfo_);
        bitField0_ |= 0x00000800;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.ctrip.flight.intl.agg.flighttypes.v3.CacheInfoType, com.ctrip.flight.intl.agg.flighttypes.v3.CacheInfoType.Builder, com.ctrip.flight.intl.agg.flighttypes.v3.CacheInfoTypeOrBuilder> cacheInfoBuilder_;

    /**
     * <pre>
     * 新增缓存响应Ref
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.CacheInfoType CacheInfo = 13;</code>
     */
    public java.util.List<com.ctrip.flight.intl.agg.flighttypes.v3.CacheInfoType> getCacheInfoList() {
      if (cacheInfoBuilder_ == null) {
        return java.util.Collections.unmodifiableList(cacheInfo_);
      } else {
        return cacheInfoBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * 新增缓存响应Ref
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.CacheInfoType CacheInfo = 13;</code>
     */
    public int getCacheInfoCount() {
      if (cacheInfoBuilder_ == null) {
        return cacheInfo_.size();
      } else {
        return cacheInfoBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * 新增缓存响应Ref
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.CacheInfoType CacheInfo = 13;</code>
     */
    public com.ctrip.flight.intl.agg.flighttypes.v3.CacheInfoType getCacheInfo(int index) {
      if (cacheInfoBuilder_ == null) {
        return cacheInfo_.get(index);
      } else {
        return cacheInfoBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * 新增缓存响应Ref
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.CacheInfoType CacheInfo = 13;</code>
     */
    public Builder setCacheInfo(
        int index, com.ctrip.flight.intl.agg.flighttypes.v3.CacheInfoType value) {
      if (cacheInfoBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureCacheInfoIsMutable();
        cacheInfo_.set(index, value);
        onChanged();
      } else {
        cacheInfoBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * 新增缓存响应Ref
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.CacheInfoType CacheInfo = 13;</code>
     */
    public Builder setCacheInfo(
        int index, com.ctrip.flight.intl.agg.flighttypes.v3.CacheInfoType.Builder builderForValue) {
      if (cacheInfoBuilder_ == null) {
        ensureCacheInfoIsMutable();
        cacheInfo_.set(index, builderForValue.build());
        onChanged();
      } else {
        cacheInfoBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * 新增缓存响应Ref
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.CacheInfoType CacheInfo = 13;</code>
     */
    public Builder addCacheInfo(com.ctrip.flight.intl.agg.flighttypes.v3.CacheInfoType value) {
      if (cacheInfoBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureCacheInfoIsMutable();
        cacheInfo_.add(value);
        onChanged();
      } else {
        cacheInfoBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * 新增缓存响应Ref
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.CacheInfoType CacheInfo = 13;</code>
     */
    public Builder addCacheInfo(
        int index, com.ctrip.flight.intl.agg.flighttypes.v3.CacheInfoType value) {
      if (cacheInfoBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureCacheInfoIsMutable();
        cacheInfo_.add(index, value);
        onChanged();
      } else {
        cacheInfoBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * 新增缓存响应Ref
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.CacheInfoType CacheInfo = 13;</code>
     */
    public Builder addCacheInfo(
        com.ctrip.flight.intl.agg.flighttypes.v3.CacheInfoType.Builder builderForValue) {
      if (cacheInfoBuilder_ == null) {
        ensureCacheInfoIsMutable();
        cacheInfo_.add(builderForValue.build());
        onChanged();
      } else {
        cacheInfoBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * 新增缓存响应Ref
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.CacheInfoType CacheInfo = 13;</code>
     */
    public Builder addCacheInfo(
        int index, com.ctrip.flight.intl.agg.flighttypes.v3.CacheInfoType.Builder builderForValue) {
      if (cacheInfoBuilder_ == null) {
        ensureCacheInfoIsMutable();
        cacheInfo_.add(index, builderForValue.build());
        onChanged();
      } else {
        cacheInfoBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * 新增缓存响应Ref
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.CacheInfoType CacheInfo = 13;</code>
     */
    public Builder addAllCacheInfo(
        java.lang.Iterable<? extends com.ctrip.flight.intl.agg.flighttypes.v3.CacheInfoType> values) {
      if (cacheInfoBuilder_ == null) {
        ensureCacheInfoIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, cacheInfo_);
        onChanged();
      } else {
        cacheInfoBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * 新增缓存响应Ref
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.CacheInfoType CacheInfo = 13;</code>
     */
    public Builder clearCacheInfo() {
      if (cacheInfoBuilder_ == null) {
        cacheInfo_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000800);
        onChanged();
      } else {
        cacheInfoBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * 新增缓存响应Ref
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.CacheInfoType CacheInfo = 13;</code>
     */
    public Builder removeCacheInfo(int index) {
      if (cacheInfoBuilder_ == null) {
        ensureCacheInfoIsMutable();
        cacheInfo_.remove(index);
        onChanged();
      } else {
        cacheInfoBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * 新增缓存响应Ref
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.CacheInfoType CacheInfo = 13;</code>
     */
    public com.ctrip.flight.intl.agg.flighttypes.v3.CacheInfoType.Builder getCacheInfoBuilder(
        int index) {
      return getCacheInfoFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * 新增缓存响应Ref
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.CacheInfoType CacheInfo = 13;</code>
     */
    public com.ctrip.flight.intl.agg.flighttypes.v3.CacheInfoTypeOrBuilder getCacheInfoOrBuilder(
        int index) {
      if (cacheInfoBuilder_ == null) {
        return cacheInfo_.get(index);  } else {
        return cacheInfoBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * 新增缓存响应Ref
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.CacheInfoType CacheInfo = 13;</code>
     */
    public java.util.List<? extends com.ctrip.flight.intl.agg.flighttypes.v3.CacheInfoTypeOrBuilder> 
         getCacheInfoOrBuilderList() {
      if (cacheInfoBuilder_ != null) {
        return cacheInfoBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(cacheInfo_);
      }
    }
    /**
     * <pre>
     * 新增缓存响应Ref
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.CacheInfoType CacheInfo = 13;</code>
     */
    public com.ctrip.flight.intl.agg.flighttypes.v3.CacheInfoType.Builder addCacheInfoBuilder() {
      return getCacheInfoFieldBuilder().addBuilder(
          com.ctrip.flight.intl.agg.flighttypes.v3.CacheInfoType.getDefaultInstance());
    }
    /**
     * <pre>
     * 新增缓存响应Ref
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.CacheInfoType CacheInfo = 13;</code>
     */
    public com.ctrip.flight.intl.agg.flighttypes.v3.CacheInfoType.Builder addCacheInfoBuilder(
        int index) {
      return getCacheInfoFieldBuilder().addBuilder(
          index, com.ctrip.flight.intl.agg.flighttypes.v3.CacheInfoType.getDefaultInstance());
    }
    /**
     * <pre>
     * 新增缓存响应Ref
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.CacheInfoType CacheInfo = 13;</code>
     */
    public java.util.List<com.ctrip.flight.intl.agg.flighttypes.v3.CacheInfoType.Builder> 
         getCacheInfoBuilderList() {
      return getCacheInfoFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.ctrip.flight.intl.agg.flighttypes.v3.CacheInfoType, com.ctrip.flight.intl.agg.flighttypes.v3.CacheInfoType.Builder, com.ctrip.flight.intl.agg.flighttypes.v3.CacheInfoTypeOrBuilder> 
        getCacheInfoFieldBuilder() {
      if (cacheInfoBuilder_ == null) {
        cacheInfoBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.ctrip.flight.intl.agg.flighttypes.v3.CacheInfoType, com.ctrip.flight.intl.agg.flighttypes.v3.CacheInfoType.Builder, com.ctrip.flight.intl.agg.flighttypes.v3.CacheInfoTypeOrBuilder>(
                cacheInfo_,
                ((bitField0_ & 0x00000800) == 0x00000800),
                getParentForChildren(),
                isClean());
        cacheInfo_ = null;
      }
      return cacheInfoBuilder_;
    }

    private java.util.List<com.ctrip.flight.intl.agg.flighttypes.v3.CreditCardPaymentInfoType> creditCardPaymentInfo_ =
      java.util.Collections.emptyList();
    private void ensureCreditCardPaymentInfoIsMutable() {
      if (!((bitField0_ & 0x00001000) == 0x00001000)) {
        creditCardPaymentInfo_ = new java.util.ArrayList<com.ctrip.flight.intl.agg.flighttypes.v3.CreditCardPaymentInfoType>(creditCardPaymentInfo_);
        bitField0_ |= 0x00001000;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.ctrip.flight.intl.agg.flighttypes.v3.CreditCardPaymentInfoType, com.ctrip.flight.intl.agg.flighttypes.v3.CreditCardPaymentInfoType.Builder, com.ctrip.flight.intl.agg.flighttypes.v3.CreditCardPaymentInfoTypeOrBuilder> creditCardPaymentInfoBuilder_;

    /**
     * <pre>
     * 信用卡支付信息Ref
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.CreditCardPaymentInfoType CreditCardPaymentInfo = 14;</code>
     */
    public java.util.List<com.ctrip.flight.intl.agg.flighttypes.v3.CreditCardPaymentInfoType> getCreditCardPaymentInfoList() {
      if (creditCardPaymentInfoBuilder_ == null) {
        return java.util.Collections.unmodifiableList(creditCardPaymentInfo_);
      } else {
        return creditCardPaymentInfoBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * 信用卡支付信息Ref
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.CreditCardPaymentInfoType CreditCardPaymentInfo = 14;</code>
     */
    public int getCreditCardPaymentInfoCount() {
      if (creditCardPaymentInfoBuilder_ == null) {
        return creditCardPaymentInfo_.size();
      } else {
        return creditCardPaymentInfoBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * 信用卡支付信息Ref
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.CreditCardPaymentInfoType CreditCardPaymentInfo = 14;</code>
     */
    public com.ctrip.flight.intl.agg.flighttypes.v3.CreditCardPaymentInfoType getCreditCardPaymentInfo(int index) {
      if (creditCardPaymentInfoBuilder_ == null) {
        return creditCardPaymentInfo_.get(index);
      } else {
        return creditCardPaymentInfoBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * 信用卡支付信息Ref
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.CreditCardPaymentInfoType CreditCardPaymentInfo = 14;</code>
     */
    public Builder setCreditCardPaymentInfo(
        int index, com.ctrip.flight.intl.agg.flighttypes.v3.CreditCardPaymentInfoType value) {
      if (creditCardPaymentInfoBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureCreditCardPaymentInfoIsMutable();
        creditCardPaymentInfo_.set(index, value);
        onChanged();
      } else {
        creditCardPaymentInfoBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * 信用卡支付信息Ref
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.CreditCardPaymentInfoType CreditCardPaymentInfo = 14;</code>
     */
    public Builder setCreditCardPaymentInfo(
        int index, com.ctrip.flight.intl.agg.flighttypes.v3.CreditCardPaymentInfoType.Builder builderForValue) {
      if (creditCardPaymentInfoBuilder_ == null) {
        ensureCreditCardPaymentInfoIsMutable();
        creditCardPaymentInfo_.set(index, builderForValue.build());
        onChanged();
      } else {
        creditCardPaymentInfoBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * 信用卡支付信息Ref
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.CreditCardPaymentInfoType CreditCardPaymentInfo = 14;</code>
     */
    public Builder addCreditCardPaymentInfo(com.ctrip.flight.intl.agg.flighttypes.v3.CreditCardPaymentInfoType value) {
      if (creditCardPaymentInfoBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureCreditCardPaymentInfoIsMutable();
        creditCardPaymentInfo_.add(value);
        onChanged();
      } else {
        creditCardPaymentInfoBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * 信用卡支付信息Ref
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.CreditCardPaymentInfoType CreditCardPaymentInfo = 14;</code>
     */
    public Builder addCreditCardPaymentInfo(
        int index, com.ctrip.flight.intl.agg.flighttypes.v3.CreditCardPaymentInfoType value) {
      if (creditCardPaymentInfoBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureCreditCardPaymentInfoIsMutable();
        creditCardPaymentInfo_.add(index, value);
        onChanged();
      } else {
        creditCardPaymentInfoBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * 信用卡支付信息Ref
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.CreditCardPaymentInfoType CreditCardPaymentInfo = 14;</code>
     */
    public Builder addCreditCardPaymentInfo(
        com.ctrip.flight.intl.agg.flighttypes.v3.CreditCardPaymentInfoType.Builder builderForValue) {
      if (creditCardPaymentInfoBuilder_ == null) {
        ensureCreditCardPaymentInfoIsMutable();
        creditCardPaymentInfo_.add(builderForValue.build());
        onChanged();
      } else {
        creditCardPaymentInfoBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * 信用卡支付信息Ref
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.CreditCardPaymentInfoType CreditCardPaymentInfo = 14;</code>
     */
    public Builder addCreditCardPaymentInfo(
        int index, com.ctrip.flight.intl.agg.flighttypes.v3.CreditCardPaymentInfoType.Builder builderForValue) {
      if (creditCardPaymentInfoBuilder_ == null) {
        ensureCreditCardPaymentInfoIsMutable();
        creditCardPaymentInfo_.add(index, builderForValue.build());
        onChanged();
      } else {
        creditCardPaymentInfoBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * 信用卡支付信息Ref
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.CreditCardPaymentInfoType CreditCardPaymentInfo = 14;</code>
     */
    public Builder addAllCreditCardPaymentInfo(
        java.lang.Iterable<? extends com.ctrip.flight.intl.agg.flighttypes.v3.CreditCardPaymentInfoType> values) {
      if (creditCardPaymentInfoBuilder_ == null) {
        ensureCreditCardPaymentInfoIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, creditCardPaymentInfo_);
        onChanged();
      } else {
        creditCardPaymentInfoBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * 信用卡支付信息Ref
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.CreditCardPaymentInfoType CreditCardPaymentInfo = 14;</code>
     */
    public Builder clearCreditCardPaymentInfo() {
      if (creditCardPaymentInfoBuilder_ == null) {
        creditCardPaymentInfo_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00001000);
        onChanged();
      } else {
        creditCardPaymentInfoBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * 信用卡支付信息Ref
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.CreditCardPaymentInfoType CreditCardPaymentInfo = 14;</code>
     */
    public Builder removeCreditCardPaymentInfo(int index) {
      if (creditCardPaymentInfoBuilder_ == null) {
        ensureCreditCardPaymentInfoIsMutable();
        creditCardPaymentInfo_.remove(index);
        onChanged();
      } else {
        creditCardPaymentInfoBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * 信用卡支付信息Ref
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.CreditCardPaymentInfoType CreditCardPaymentInfo = 14;</code>
     */
    public com.ctrip.flight.intl.agg.flighttypes.v3.CreditCardPaymentInfoType.Builder getCreditCardPaymentInfoBuilder(
        int index) {
      return getCreditCardPaymentInfoFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * 信用卡支付信息Ref
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.CreditCardPaymentInfoType CreditCardPaymentInfo = 14;</code>
     */
    public com.ctrip.flight.intl.agg.flighttypes.v3.CreditCardPaymentInfoTypeOrBuilder getCreditCardPaymentInfoOrBuilder(
        int index) {
      if (creditCardPaymentInfoBuilder_ == null) {
        return creditCardPaymentInfo_.get(index);  } else {
        return creditCardPaymentInfoBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * 信用卡支付信息Ref
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.CreditCardPaymentInfoType CreditCardPaymentInfo = 14;</code>
     */
    public java.util.List<? extends com.ctrip.flight.intl.agg.flighttypes.v3.CreditCardPaymentInfoTypeOrBuilder> 
         getCreditCardPaymentInfoOrBuilderList() {
      if (creditCardPaymentInfoBuilder_ != null) {
        return creditCardPaymentInfoBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(creditCardPaymentInfo_);
      }
    }
    /**
     * <pre>
     * 信用卡支付信息Ref
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.CreditCardPaymentInfoType CreditCardPaymentInfo = 14;</code>
     */
    public com.ctrip.flight.intl.agg.flighttypes.v3.CreditCardPaymentInfoType.Builder addCreditCardPaymentInfoBuilder() {
      return getCreditCardPaymentInfoFieldBuilder().addBuilder(
          com.ctrip.flight.intl.agg.flighttypes.v3.CreditCardPaymentInfoType.getDefaultInstance());
    }
    /**
     * <pre>
     * 信用卡支付信息Ref
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.CreditCardPaymentInfoType CreditCardPaymentInfo = 14;</code>
     */
    public com.ctrip.flight.intl.agg.flighttypes.v3.CreditCardPaymentInfoType.Builder addCreditCardPaymentInfoBuilder(
        int index) {
      return getCreditCardPaymentInfoFieldBuilder().addBuilder(
          index, com.ctrip.flight.intl.agg.flighttypes.v3.CreditCardPaymentInfoType.getDefaultInstance());
    }
    /**
     * <pre>
     * 信用卡支付信息Ref
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.CreditCardPaymentInfoType CreditCardPaymentInfo = 14;</code>
     */
    public java.util.List<com.ctrip.flight.intl.agg.flighttypes.v3.CreditCardPaymentInfoType.Builder> 
         getCreditCardPaymentInfoBuilderList() {
      return getCreditCardPaymentInfoFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.ctrip.flight.intl.agg.flighttypes.v3.CreditCardPaymentInfoType, com.ctrip.flight.intl.agg.flighttypes.v3.CreditCardPaymentInfoType.Builder, com.ctrip.flight.intl.agg.flighttypes.v3.CreditCardPaymentInfoTypeOrBuilder> 
        getCreditCardPaymentInfoFieldBuilder() {
      if (creditCardPaymentInfoBuilder_ == null) {
        creditCardPaymentInfoBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.ctrip.flight.intl.agg.flighttypes.v3.CreditCardPaymentInfoType, com.ctrip.flight.intl.agg.flighttypes.v3.CreditCardPaymentInfoType.Builder, com.ctrip.flight.intl.agg.flighttypes.v3.CreditCardPaymentInfoTypeOrBuilder>(
                creditCardPaymentInfo_,
                ((bitField0_ & 0x00001000) == 0x00001000),
                getParentForChildren(),
                isClean());
        creditCardPaymentInfo_ = null;
      }
      return creditCardPaymentInfoBuilder_;
    }

    private java.util.List<com.ctrip.flight.intl.agg.flighttypes.v3.KeyValuePairType> extendFields_ =
      java.util.Collections.emptyList();
    private void ensureExtendFieldsIsMutable() {
      if (!((bitField0_ & 0x00002000) == 0x00002000)) {
        extendFields_ = new java.util.ArrayList<com.ctrip.flight.intl.agg.flighttypes.v3.KeyValuePairType>(extendFields_);
        bitField0_ |= 0x00002000;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.ctrip.flight.intl.agg.flighttypes.v3.KeyValuePairType, com.ctrip.flight.intl.agg.flighttypes.v3.KeyValuePairType.Builder, com.ctrip.flight.intl.agg.flighttypes.v3.KeyValuePairTypeOrBuilder> extendFieldsBuilder_;

    /**
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.KeyValuePairType ExtendFields = 15;</code>
     */
    public java.util.List<com.ctrip.flight.intl.agg.flighttypes.v3.KeyValuePairType> getExtendFieldsList() {
      if (extendFieldsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(extendFields_);
      } else {
        return extendFieldsBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.KeyValuePairType ExtendFields = 15;</code>
     */
    public int getExtendFieldsCount() {
      if (extendFieldsBuilder_ == null) {
        return extendFields_.size();
      } else {
        return extendFieldsBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.KeyValuePairType ExtendFields = 15;</code>
     */
    public com.ctrip.flight.intl.agg.flighttypes.v3.KeyValuePairType getExtendFields(int index) {
      if (extendFieldsBuilder_ == null) {
        return extendFields_.get(index);
      } else {
        return extendFieldsBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.KeyValuePairType ExtendFields = 15;</code>
     */
    public Builder setExtendFields(
        int index, com.ctrip.flight.intl.agg.flighttypes.v3.KeyValuePairType value) {
      if (extendFieldsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureExtendFieldsIsMutable();
        extendFields_.set(index, value);
        onChanged();
      } else {
        extendFieldsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.KeyValuePairType ExtendFields = 15;</code>
     */
    public Builder setExtendFields(
        int index, com.ctrip.flight.intl.agg.flighttypes.v3.KeyValuePairType.Builder builderForValue) {
      if (extendFieldsBuilder_ == null) {
        ensureExtendFieldsIsMutable();
        extendFields_.set(index, builderForValue.build());
        onChanged();
      } else {
        extendFieldsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.KeyValuePairType ExtendFields = 15;</code>
     */
    public Builder addExtendFields(com.ctrip.flight.intl.agg.flighttypes.v3.KeyValuePairType value) {
      if (extendFieldsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureExtendFieldsIsMutable();
        extendFields_.add(value);
        onChanged();
      } else {
        extendFieldsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.KeyValuePairType ExtendFields = 15;</code>
     */
    public Builder addExtendFields(
        int index, com.ctrip.flight.intl.agg.flighttypes.v3.KeyValuePairType value) {
      if (extendFieldsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureExtendFieldsIsMutable();
        extendFields_.add(index, value);
        onChanged();
      } else {
        extendFieldsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.KeyValuePairType ExtendFields = 15;</code>
     */
    public Builder addExtendFields(
        com.ctrip.flight.intl.agg.flighttypes.v3.KeyValuePairType.Builder builderForValue) {
      if (extendFieldsBuilder_ == null) {
        ensureExtendFieldsIsMutable();
        extendFields_.add(builderForValue.build());
        onChanged();
      } else {
        extendFieldsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.KeyValuePairType ExtendFields = 15;</code>
     */
    public Builder addExtendFields(
        int index, com.ctrip.flight.intl.agg.flighttypes.v3.KeyValuePairType.Builder builderForValue) {
      if (extendFieldsBuilder_ == null) {
        ensureExtendFieldsIsMutable();
        extendFields_.add(index, builderForValue.build());
        onChanged();
      } else {
        extendFieldsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.KeyValuePairType ExtendFields = 15;</code>
     */
    public Builder addAllExtendFields(
        java.lang.Iterable<? extends com.ctrip.flight.intl.agg.flighttypes.v3.KeyValuePairType> values) {
      if (extendFieldsBuilder_ == null) {
        ensureExtendFieldsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, extendFields_);
        onChanged();
      } else {
        extendFieldsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.KeyValuePairType ExtendFields = 15;</code>
     */
    public Builder clearExtendFields() {
      if (extendFieldsBuilder_ == null) {
        extendFields_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00002000);
        onChanged();
      } else {
        extendFieldsBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.KeyValuePairType ExtendFields = 15;</code>
     */
    public Builder removeExtendFields(int index) {
      if (extendFieldsBuilder_ == null) {
        ensureExtendFieldsIsMutable();
        extendFields_.remove(index);
        onChanged();
      } else {
        extendFieldsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.KeyValuePairType ExtendFields = 15;</code>
     */
    public com.ctrip.flight.intl.agg.flighttypes.v3.KeyValuePairType.Builder getExtendFieldsBuilder(
        int index) {
      return getExtendFieldsFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.KeyValuePairType ExtendFields = 15;</code>
     */
    public com.ctrip.flight.intl.agg.flighttypes.v3.KeyValuePairTypeOrBuilder getExtendFieldsOrBuilder(
        int index) {
      if (extendFieldsBuilder_ == null) {
        return extendFields_.get(index);  } else {
        return extendFieldsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.KeyValuePairType ExtendFields = 15;</code>
     */
    public java.util.List<? extends com.ctrip.flight.intl.agg.flighttypes.v3.KeyValuePairTypeOrBuilder> 
         getExtendFieldsOrBuilderList() {
      if (extendFieldsBuilder_ != null) {
        return extendFieldsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(extendFields_);
      }
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.KeyValuePairType ExtendFields = 15;</code>
     */
    public com.ctrip.flight.intl.agg.flighttypes.v3.KeyValuePairType.Builder addExtendFieldsBuilder() {
      return getExtendFieldsFieldBuilder().addBuilder(
          com.ctrip.flight.intl.agg.flighttypes.v3.KeyValuePairType.getDefaultInstance());
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.KeyValuePairType ExtendFields = 15;</code>
     */
    public com.ctrip.flight.intl.agg.flighttypes.v3.KeyValuePairType.Builder addExtendFieldsBuilder(
        int index) {
      return getExtendFieldsFieldBuilder().addBuilder(
          index, com.ctrip.flight.intl.agg.flighttypes.v3.KeyValuePairType.getDefaultInstance());
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.KeyValuePairType ExtendFields = 15;</code>
     */
    public java.util.List<com.ctrip.flight.intl.agg.flighttypes.v3.KeyValuePairType.Builder> 
         getExtendFieldsBuilderList() {
      return getExtendFieldsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.ctrip.flight.intl.agg.flighttypes.v3.KeyValuePairType, com.ctrip.flight.intl.agg.flighttypes.v3.KeyValuePairType.Builder, com.ctrip.flight.intl.agg.flighttypes.v3.KeyValuePairTypeOrBuilder> 
        getExtendFieldsFieldBuilder() {
      if (extendFieldsBuilder_ == null) {
        extendFieldsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.ctrip.flight.intl.agg.flighttypes.v3.KeyValuePairType, com.ctrip.flight.intl.agg.flighttypes.v3.KeyValuePairType.Builder, com.ctrip.flight.intl.agg.flighttypes.v3.KeyValuePairTypeOrBuilder>(
                extendFields_,
                ((bitField0_ & 0x00002000) == 0x00002000),
                getParentForChildren(),
                isClean());
        extendFields_ = null;
      }
      return extendFieldsBuilder_;
    }

    private java.util.List<com.ctrip.flight.intl.agg.flighttypes.v3.PaymentDiscountType> paymentDiscount_ =
      java.util.Collections.emptyList();
    private void ensurePaymentDiscountIsMutable() {
      if (!((bitField0_ & 0x00004000) == 0x00004000)) {
        paymentDiscount_ = new java.util.ArrayList<com.ctrip.flight.intl.agg.flighttypes.v3.PaymentDiscountType>(paymentDiscount_);
        bitField0_ |= 0x00004000;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.ctrip.flight.intl.agg.flighttypes.v3.PaymentDiscountType, com.ctrip.flight.intl.agg.flighttypes.v3.PaymentDiscountType.Builder, com.ctrip.flight.intl.agg.flighttypes.v3.PaymentDiscountTypeOrBuilder> paymentDiscountBuilder_;

    /**
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.PaymentDiscountType PaymentDiscount = 16;</code>
     */
    public java.util.List<com.ctrip.flight.intl.agg.flighttypes.v3.PaymentDiscountType> getPaymentDiscountList() {
      if (paymentDiscountBuilder_ == null) {
        return java.util.Collections.unmodifiableList(paymentDiscount_);
      } else {
        return paymentDiscountBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.PaymentDiscountType PaymentDiscount = 16;</code>
     */
    public int getPaymentDiscountCount() {
      if (paymentDiscountBuilder_ == null) {
        return paymentDiscount_.size();
      } else {
        return paymentDiscountBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.PaymentDiscountType PaymentDiscount = 16;</code>
     */
    public com.ctrip.flight.intl.agg.flighttypes.v3.PaymentDiscountType getPaymentDiscount(int index) {
      if (paymentDiscountBuilder_ == null) {
        return paymentDiscount_.get(index);
      } else {
        return paymentDiscountBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.PaymentDiscountType PaymentDiscount = 16;</code>
     */
    public Builder setPaymentDiscount(
        int index, com.ctrip.flight.intl.agg.flighttypes.v3.PaymentDiscountType value) {
      if (paymentDiscountBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensurePaymentDiscountIsMutable();
        paymentDiscount_.set(index, value);
        onChanged();
      } else {
        paymentDiscountBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.PaymentDiscountType PaymentDiscount = 16;</code>
     */
    public Builder setPaymentDiscount(
        int index, com.ctrip.flight.intl.agg.flighttypes.v3.PaymentDiscountType.Builder builderForValue) {
      if (paymentDiscountBuilder_ == null) {
        ensurePaymentDiscountIsMutable();
        paymentDiscount_.set(index, builderForValue.build());
        onChanged();
      } else {
        paymentDiscountBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.PaymentDiscountType PaymentDiscount = 16;</code>
     */
    public Builder addPaymentDiscount(com.ctrip.flight.intl.agg.flighttypes.v3.PaymentDiscountType value) {
      if (paymentDiscountBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensurePaymentDiscountIsMutable();
        paymentDiscount_.add(value);
        onChanged();
      } else {
        paymentDiscountBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.PaymentDiscountType PaymentDiscount = 16;</code>
     */
    public Builder addPaymentDiscount(
        int index, com.ctrip.flight.intl.agg.flighttypes.v3.PaymentDiscountType value) {
      if (paymentDiscountBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensurePaymentDiscountIsMutable();
        paymentDiscount_.add(index, value);
        onChanged();
      } else {
        paymentDiscountBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.PaymentDiscountType PaymentDiscount = 16;</code>
     */
    public Builder addPaymentDiscount(
        com.ctrip.flight.intl.agg.flighttypes.v3.PaymentDiscountType.Builder builderForValue) {
      if (paymentDiscountBuilder_ == null) {
        ensurePaymentDiscountIsMutable();
        paymentDiscount_.add(builderForValue.build());
        onChanged();
      } else {
        paymentDiscountBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.PaymentDiscountType PaymentDiscount = 16;</code>
     */
    public Builder addPaymentDiscount(
        int index, com.ctrip.flight.intl.agg.flighttypes.v3.PaymentDiscountType.Builder builderForValue) {
      if (paymentDiscountBuilder_ == null) {
        ensurePaymentDiscountIsMutable();
        paymentDiscount_.add(index, builderForValue.build());
        onChanged();
      } else {
        paymentDiscountBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.PaymentDiscountType PaymentDiscount = 16;</code>
     */
    public Builder addAllPaymentDiscount(
        java.lang.Iterable<? extends com.ctrip.flight.intl.agg.flighttypes.v3.PaymentDiscountType> values) {
      if (paymentDiscountBuilder_ == null) {
        ensurePaymentDiscountIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, paymentDiscount_);
        onChanged();
      } else {
        paymentDiscountBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.PaymentDiscountType PaymentDiscount = 16;</code>
     */
    public Builder clearPaymentDiscount() {
      if (paymentDiscountBuilder_ == null) {
        paymentDiscount_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00004000);
        onChanged();
      } else {
        paymentDiscountBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.PaymentDiscountType PaymentDiscount = 16;</code>
     */
    public Builder removePaymentDiscount(int index) {
      if (paymentDiscountBuilder_ == null) {
        ensurePaymentDiscountIsMutable();
        paymentDiscount_.remove(index);
        onChanged();
      } else {
        paymentDiscountBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.PaymentDiscountType PaymentDiscount = 16;</code>
     */
    public com.ctrip.flight.intl.agg.flighttypes.v3.PaymentDiscountType.Builder getPaymentDiscountBuilder(
        int index) {
      return getPaymentDiscountFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.PaymentDiscountType PaymentDiscount = 16;</code>
     */
    public com.ctrip.flight.intl.agg.flighttypes.v3.PaymentDiscountTypeOrBuilder getPaymentDiscountOrBuilder(
        int index) {
      if (paymentDiscountBuilder_ == null) {
        return paymentDiscount_.get(index);  } else {
        return paymentDiscountBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.PaymentDiscountType PaymentDiscount = 16;</code>
     */
    public java.util.List<? extends com.ctrip.flight.intl.agg.flighttypes.v3.PaymentDiscountTypeOrBuilder> 
         getPaymentDiscountOrBuilderList() {
      if (paymentDiscountBuilder_ != null) {
        return paymentDiscountBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(paymentDiscount_);
      }
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.PaymentDiscountType PaymentDiscount = 16;</code>
     */
    public com.ctrip.flight.intl.agg.flighttypes.v3.PaymentDiscountType.Builder addPaymentDiscountBuilder() {
      return getPaymentDiscountFieldBuilder().addBuilder(
          com.ctrip.flight.intl.agg.flighttypes.v3.PaymentDiscountType.getDefaultInstance());
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.PaymentDiscountType PaymentDiscount = 16;</code>
     */
    public com.ctrip.flight.intl.agg.flighttypes.v3.PaymentDiscountType.Builder addPaymentDiscountBuilder(
        int index) {
      return getPaymentDiscountFieldBuilder().addBuilder(
          index, com.ctrip.flight.intl.agg.flighttypes.v3.PaymentDiscountType.getDefaultInstance());
    }
    /**
     * <code>repeated .com.ctrip.flight.intl.agg.flighttypes.v3.PaymentDiscountType PaymentDiscount = 16;</code>
     */
    public java.util.List<com.ctrip.flight.intl.agg.flighttypes.v3.PaymentDiscountType.Builder> 
         getPaymentDiscountBuilderList() {
      return getPaymentDiscountFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.ctrip.flight.intl.agg.flighttypes.v3.PaymentDiscountType, com.ctrip.flight.intl.agg.flighttypes.v3.PaymentDiscountType.Builder, com.ctrip.flight.intl.agg.flighttypes.v3.PaymentDiscountTypeOrBuilder> 
        getPaymentDiscountFieldBuilder() {
      if (paymentDiscountBuilder_ == null) {
        paymentDiscountBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.ctrip.flight.intl.agg.flighttypes.v3.PaymentDiscountType, com.ctrip.flight.intl.agg.flighttypes.v3.PaymentDiscountType.Builder, com.ctrip.flight.intl.agg.flighttypes.v3.PaymentDiscountTypeOrBuilder>(
                paymentDiscount_,
                ((bitField0_ & 0x00004000) == 0x00004000),
                getParentForChildren(),
                isClean());
        paymentDiscount_ = null;
      }
      return paymentDiscountBuilder_;
    }

    private java.lang.Object xproductSearchKey_ = "";
    /**
     * <pre>
     * X产品缓存key，通过本key可调用SearchXproductByKey接口拿到X信息
     * </pre>
     *
     * <code>string XproductSearchKey = 17;</code>
     */
    public java.lang.String getXproductSearchKey() {
      java.lang.Object ref = xproductSearchKey_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        xproductSearchKey_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * X产品缓存key，通过本key可调用SearchXproductByKey接口拿到X信息
     * </pre>
     *
     * <code>string XproductSearchKey = 17;</code>
     */
    public com.google.protobuf.ByteString
        getXproductSearchKeyBytes() {
      java.lang.Object ref = xproductSearchKey_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        xproductSearchKey_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * X产品缓存key，通过本key可调用SearchXproductByKey接口拿到X信息
     * </pre>
     *
     * <code>string XproductSearchKey = 17;</code>
     */
    public Builder setXproductSearchKey(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      xproductSearchKey_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * X产品缓存key，通过本key可调用SearchXproductByKey接口拿到X信息
     * </pre>
     *
     * <code>string XproductSearchKey = 17;</code>
     */
    public Builder clearXproductSearchKey() {
      
      xproductSearchKey_ = getDefaultInstance().getXproductSearchKey();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * X产品缓存key，通过本key可调用SearchXproductByKey接口拿到X信息
     * </pre>
     *
     * <code>string XproductSearchKey = 17;</code>
     */
    public Builder setXproductSearchKeyBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      xproductSearchKey_ = value;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFieldsProto3(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:com.ctrip.flight.intl.agg.types.searchresponsetype.v3.SearchResultType)
  }

  // @@protoc_insertion_point(class_scope:com.ctrip.flight.intl.agg.types.searchresponsetype.v3.SearchResultType)
  private static final com.ctrip.flight.intl.agg.types.searchresponsetype.v3.SearchResultType DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.ctrip.flight.intl.agg.types.searchresponsetype.v3.SearchResultType();
  }

  public static com.ctrip.flight.intl.agg.types.searchresponsetype.v3.SearchResultType getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<SearchResultType>
      PARSER = new com.google.protobuf.AbstractParser<SearchResultType>() {
    @java.lang.Override
    public SearchResultType parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new SearchResultType(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<SearchResultType> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<SearchResultType> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.ctrip.flight.intl.agg.types.searchresponsetype.v3.SearchResultType getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

